args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"<?xml version=""1.0"" encoding=""UTF-8""?> <root>   <TEXT><![CDATA[",0/63,[]).
phrase('<?xml version',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([?]),tokens([])]),mod([lexmatch([xml]),inputmatch([xml]),tag(noun),tokens([xml])]),head([lexmatch([version]),inputmatch([version]),tag(noun),tokens([version])])],0/13,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C1707981','XML','Extensible Markup Language',[xml],[inpr],[[[1,1],[1,1],0]],no,no,['HL7V3.0','NCI'],[2/3],0,0),ev(-861,'C0333052','Version','Version',[version],[ftcn],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','MTHICD9','NCI','NCI_CDISC'],[6/7],0,0)])]).
phrase('="1.0"',[punc([inputmatch([=]),tokens([])]),punc([inputmatch(['"']),tokens([])]),shapes([inputmatch(['1','.','0']),features([real_number]),tokens(['1','0'])]),punc([inputmatch(['"']),tokens([])])],13/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-861,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[15/1],0,0),ev(-861,'C3842591','0%','0%',['0'],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC'],[17/1],0,0)])]).
phrase(encoding,[verb([lexmatch([encoding]),inputmatch([encoding]),tag(verb),tokens([encoding])])],20/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1547699','Encoding','MIME encoding',[encoding],[idcn],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH'],[20/8],0,0)])]).
phrase('="UTF-8"?',[punc([inputmatch([=]),tokens([])]),punc([inputmatch(['"']),tokens([])]),mod([lexmatch([utf]),inputmatch(['UTF']),tag(noun),tokens([utf])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['8']),features([integer]),tokens(['8'])]),punc([inputmatch(['"']),tokens([])]),punc([inputmatch([?]),tokens([])])],28/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1555005','UTF-8','UTF-8',[utf,'8'],[inpr],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['HL7V3.0'],[30/5],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],37/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<root',[punc([inputmatch([<]),tokens([])]),head([lexmatch([root]),inputmatch([root]),tag(noun),tokens([root])])],39/5,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1318154','Root','Root body part',[root],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH'],[40/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],44/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<TEXT',[punc([inputmatch([<]),tokens([])]),head([lexmatch([text]),inputmatch(['TEXT']),tag(noun),tokens([text])])],48/5,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1705606','Text','Text Line',[text],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[49/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],53/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<!',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([!]),tokens([])])],54/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('[CDATA',[punc([inputmatch(['[']),tokens([])]),head([inputmatch(['CDATA']),tag(noun),tokens([cdata])])],56/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0640049','CDATA','3-chloro-4-dimethylaminothioangelicin',[cdata],[orch],[[[1,1],[1,1],0]],yes,no,['MSH'],[57/5],0,0)])]).
phrase('[',[punc([inputmatch(['[']),tokens([])])],62/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Record date: 2089-10-07",0/23,[]).
phrase('Record date',[mod([lexmatch([record]),inputmatch(['Record']),tag(noun),tokens([record])]),head([lexmatch([date]),inputmatch([date]),tag(noun),tokens([date])])],0/11,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-694,'C0034869','Record','Records',[record],[inpr],[[[1,1],[1,1],0]],no,no,['CHV','HL7V3.0','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA'],[0/6],0,0),ev(-861,'C0011008','DATE','Date in time',[date],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MSH','MTH','NCI','NCI_CareLex','NCI_NICHD','SNOMEDCT_US'],[7/4],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],11/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('2089-10-07',[shapes([inputmatch(['2089']),features([integer]),tokens(['2089'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['10']),features([integer]),tokens(['10'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['07']),features([integer]),tokens(['07'])])],13/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-827,[ev(-827,'C3842590','10%','10%',['10'],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC'],[18/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Medications:",0/12,[]).
phrase('Medications',[head([lexmatch([medications]),inputmatch(['Medications']),tag(noun),tokens([medications])])],0/11,[]).
candidates(4,1,0,3,[]).
mappings([map(-1000,[ev(-1000,'C2598133','Medications','Medications:-:Point in time:^Patient:-',[medications],[clna],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[0/11],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],11/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Prilosec 20 - 2",0/15,[]).
phrase('Prilosec 20 - 2',[mod([lexmatch([prilosec]),inputmatch(['Prilosec']),tag(noun),tokens([prilosec])]),shapes([inputmatch(['20']),features([integer]),tokens(['20'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['2']),features([integer]),tokens(['2'])])],0/15,[]).
candidates(2,0,0,2,[]).
mappings([map(-790,[ev(-827,'C0700777','PriLOSEC','Prilosec',[prilosec],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','MSH','NCI','PDQ','RXNORM'],[0/8],0,0),ev(-827,'C3842589','20%','20%',['20'],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC'],[9/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Atenolol 50",0/11,[]).
phrase('Atenolol 50',[mod([lexmatch([atenolol]),inputmatch(['Atenolol']),tag(noun),tokens([atenolol])]),shapes([inputmatch(['50']),features([integer]),tokens(['50'])])],0/11,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-861,'C0004147','ATENOLOL','Atenolol',[atenolol],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[0/8],0,0),ev(-861,'C3843766','<50','<50',['50'],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC'],[9/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Cozaar 50",0/9,[]).
phrase('Cozaar 50',[mod([lexmatch([cozaar]),inputmatch(['Cozaar']),tag(noun),tokens([cozaar])]),shapes([inputmatch(['50']),features([integer]),tokens(['50'])])],0/9,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-861,'C0591301','Cozaar','Cozaar',[cozaar],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','NCI','NCI_NCI-GLOSS','RXNORM'],[0/6],0,0),ev(-861,'C3843766','<50','<50',['50'],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC'],[7/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Lipitor 10",0/10,[]).
phrase('Lipitor 10',[mod([lexmatch([lipitor]),inputmatch(['Lipitor']),tag(noun),tokens([lipitor])]),shapes([inputmatch(['10']),features([integer]),tokens(['10'])])],0/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-888,[ev(-861,'C0593906','Lipitor','Lipitor',[lipitor],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','MSH','NCI','NCI_NCI-GLOSS','PDQ','RXNORM'],[0/7],0,0),ev(-861,'C3842590','10%','10%',['10'],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC'],[8/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Valium 2 -",0/10,[]).
phrase('Valium 2 -',[mod([lexmatch([valium]),inputmatch(['Valium']),tag(noun),tokens([valium])]),shapes([inputmatch(['2']),features([integer]),tokens(['2'])]),punc([inputmatch([-]),tokens([])])],0/10,[]).
candidates(2,1,0,1,[]).
mappings([map(-861,[ev(-861,'C0699187','Valium','Valium',[valium],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','MSH','MTH','NCI','NCI_NCI-GLOSS','RXNORM'],[0/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Advair 2i puff bid",0/18,[]).
phrase('Advair 2i puff bid',[mod([lexmatch([advair]),inputmatch(['Advair']),tag(noun),tokens([advair])]),mod([inputmatch(['2i']),tag(noun),tokens(['2i'])]),mod([lexmatch([puff]),inputmatch([puff]),tag(noun),tokens([puff])]),head([lexmatch([bid]),inputmatch([bid]),tag(noun),tokens([bid])])],0/18,[]).
candidates(4,0,0,4,[]).
mappings([map(-608,[ev(-645,'C0965130','Advair','Advair',[advair],[orch,phsu],[[[1,1],[1,1],0]],no,no,['CHV','MSH','RXNORM'],[0/6],0,0),ev(-645,'C1552166','2i','Maxillary right second molar implant',['2i'],[medd],[[[2,2],[1,1],0]],no,no,['HL7V3.0','MTH'],[7/2],0,0),ev(-645,'C1882376','Puff','Picofarad (unit of measure)',[puff],[qnco],[[[3,3],[1,1],0]],no,no,['MTH','NCI','NCI_UCUM'],[10/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Alupent prn",0/11,[]).
phrase('Alupent prn',[mod([lexmatch([alupent]),inputmatch(['Alupent']),tag(noun),tokens([alupent])]),head([lexmatch([prn]),inputmatch([prn]),tag(noun),tokens([prn])])],0/11,[]).
candidates(3,2,0,1,[]).
mappings([map(-694,[ev(-694,'C0733816','Alupent','Alupent',[alupent],[orch,phsu],[[[1,1],[1,1],0]],no,no,['CHV','MSH','MTH','NCI','RXNORM'],[0/7],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Problem #1: GERD",0/16,[]).
phrase('Problem #1',[mod([lexmatch([problem]),inputmatch(['Problem']),tag(noun),tokens([problem])]),punc([inputmatch([#]),tokens([])]),shapes([inputmatch(['1']),features([integer]),tokens(['1'])])],0/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C0033213','Problem','Problem',[problem],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[0/7],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],10/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('GERD',[head([lexmatch([gerd]),inputmatch(['GERD']),tag(noun),tokens([gerd])])],12/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0017168','GERD','Gastroesophageal reflux disease',[gerd],[dsyn],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','MTHMST','NCI','NCI_CTCAE','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[12/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([negation(nega,no,[0/2],['C0847097':heartburn,'C0018834':'HEART BURN'],[3/10]),negation(nega,no,[167/2],['C0239313':'EXERTIONAL'],[170/10])]).
utterance('00000000.tx.1',"No heart burn on Prilosec. ",0/27,[]).
phrase('No heart burn on Prilosec.',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch(['heart burn']),inputmatch([heart,burn]),tag(noun),tokens([heart,burn])]),prep([lexmatch([on]),inputmatch([on]),tag(prep),tokens([on])]),mod([lexmatch([prilosec]),inputmatch(['Prilosec']),tag(noun),tokens([prilosec])]),punc([inputmatch(['.']),tokens([])])],0/26,[]).
candidates(12,0,0,12,[]).
mappings([map(-761,[ev(-593,'C0028128','NO','Nitric Oxide',[no],[bacs,inch,phsu],[[[1,1],[1,1],0]],no,no,['AOD','ATC','CHV','CSP','LCH_NW','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[0/2],0,0),ev(-806,'C0018834','HEART BURN','Heartburn',[heart,burn],[sosy],[[[2,3],[1,2],0]],yes,no,['CHV','COSTAR','CSP','CST','DXP','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','MTHMST','NCI','NCI_FDA','NCI_NICHD','NDFRT','SNM','SNMI','SNOMEDCT_US'],[3/10],0,1),ev(-593,'C0700777','PriLOSEC','Prilosec',[prilosec],[orch,phsu],[[[5,5],[1,1],0]],no,no,['CHV','CSP','MSH','NCI','PDQ','RXNORM'],[17/8],0,0)]),map(-761,[ev(-593,'C0028128','NO','Nitric Oxide',[no],[bacs,inch,phsu],[[[1,1],[1,1],0]],no,no,['AOD','ATC','CHV','CSP','LCH_NW','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[0/2],0,0),ev(-806,'C0847097',heartburn,'Heartburn acidity',[heartburn],[sosy],[[[2,3],[1,1],0]],yes,no,['CHV','MTH'],[3/10],0,1),ev(-593,'C0700777','PriLOSEC','Prilosec',[prilosec],[orch,phsu],[[[5,5],[1,1],0]],no,no,['CHV','CSP','MSH','NCI','PDQ','RXNORM'],[17/8],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"He does note attacks of ss chest pain radiating to L arm relieved by valium and Gaviscon and attributed by Y. ",27/110,[]).
phrase('He',[pron([lexmatch([he]),inputmatch(['He']),tag(pron),tokens([he])])],27/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(does,[aux([lexmatch([does]),inputmatch([does]),tag(aux),tokens([does])])],30/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('note attacks of ss chest pain radiating',[mod([lexmatch([note]),inputmatch([note]),tag(noun),tokens([note])]),head([lexmatch([attacks]),inputmatch([attacks]),tag(noun),tokens([attacks])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([ss]),inputmatch([ss]),tag(noun),tokens([ss])]),mod([lexmatch(['chest pain']),inputmatch([chest,pain]),tag(noun),tokens([chest,pain])]),mod([lexmatch([radiating]),inputmatch([radiating]),tag(noun),tokens([radiating])])],35/39,[]).
candidates(24,8,0,16,[]).
mappings([map(-824,[ev(-581,'C1317574','Note','Note (document)',[note],[inpr],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI'],[35/4],0,0),ev(-748,'C1304680',attacks,'Observation of attack',[attacks],[fndg],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','SNOMEDCT_US'],[40/7],0,0),ev(-581,'C2699257','SS','SS, Rat Strain',[ss],[mamm],[[[4,4],[1,1],0]],no,no,['MTH','NCI','NCI_CDISC'],[51/2],0,0),ev(-606,'C0024902','Pain of breast','Mastodynia',[pain,of,breast],[sosy],[[[6,6],[1,1],0],[[3,3],[2,2],0],[[5,5],[3,3],4]],no,no,['CHV','COSTAR','DXP','ICD10CM','ICD9CM','MSH','MTH','NCI','NCI_CTCAE','NCI_NICHD','NDFRT','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[48/2,54/10],0,0),ev(-581,'C0332301',radiating,'Radiating to',[radiating],[ftcn],[[[7,7],[1,1],0]],no,no,['CHV','SNMI','SNOMEDCT_US'],[65/9],0,0)])]).
phrase('to L arm',[prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),mod([lexmatch([l]),inputmatch(['L']),tag(noun),tokens([l])]),head([lexmatch([arm]),inputmatch([arm]),tag(noun),tokens([arm])])],75/8,[]).
candidates(11,3,0,8,[]).
mappings([map(-1000,[ev(-1000,'C0230347','L arm','Left upper arm structure',[l,arm],[bpoc],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','FMA','HL7V2.5','HL7V3.0','LNC','MTH','NCI','NCI_FDA','NLMSubSyn','SNM','SNMI','SNOMEDCT_US','UWDA'],[78/5],0,0)])]).
phrase('relieved by valium',[verb([lexmatch([relieved]),inputmatch([relieved]),tag(verb),tokens([relieved])]),prep([lexmatch([by]),inputmatch([by]),tag(prep),tokens([by])]),mod([lexmatch([valium]),inputmatch([valium]),tag(noun),tokens([valium])])],84/18,[]).
candidates(7,4,0,3,[]).
mappings([map(-901,[ev(-882,'C0332303','Relieved by','Relieved by',[relieved,by],[ftcn],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','MTH','SNMI','SNOMEDCT_US'],[84/11],0,0),ev(-790,'C0699187','Valium','Valium',[valium],[orch,phsu],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','CSP','MSH','MTH','NCI','NCI_NCI-GLOSS','RXNORM'],[96/6],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],103/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Gaviscon',[head([lexmatch([gaviscon]),inputmatch(['Gaviscon']),tag(noun),tokens([gaviscon])])],107/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0061146','Gaviscon','Gaviscon',[gaviscon],[inch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','RXNORM'],[107/8],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],116/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('attributed by Y.',[verb([lexmatch([attributed]),inputmatch([attributed]),tag(verb),tokens([attributed])]),prep([lexmatch([by]),inputmatch([by]),tag(prep),tokens([by])]),mod([lexmatch([y]),inputmatch(['Y']),tag(noun),tokens([y])]),punc([inputmatch(['.']),tokens([])])],120/16,[]).
candidates(3,0,0,3,[]).
mappings([map(-756,[ev(-756,'C0449234','Attribute','Concept Attribute',[attribute],[idcn],[[[1,1],[1,1],1]],yes,no,['MTH','NCI','SNOMEDCT_US'],[120/10],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Ullrich to reflux (Ted says). ",137/30,[]).
phrase('Ullrich to reflux',[head([lexmatch([ullrich]),inputmatch(['Ullrich']),tag(noun),tokens([ullrich])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),mod([lexmatch([reflux]),inputmatch([reflux]),tag(noun),tokens([reflux])])],137/17,[]).
candidates(3,0,0,3,[]).
mappings([map(-623,[ev(-623,'C0232483','Reflux','Reflux',[reflux],[patf],[[[3,3],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[148/6],0,0)])]).
phrase('(Ted',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([ted]),inputmatch(['Ted']),tag(noun),tokens([ted])])],155/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1539997','TED','FAM155B gene',[ted],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH'],[156/3],0,0)])]).
phrase(says,[verb([lexmatch([says]),inputmatch([says]),tag(verb),tokens([says])])],160/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(').',[punc([inputmatch([')']),tokens([])]),punc([inputmatch(['.']),tokens([])])],164/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.4',"No exertional trigger to these.",167/31,[]).
phrase('No exertional trigger to these.',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),mod([lexmatch([exertional]),inputmatch([exertional]),tag(adj),tokens([exertional])]),head([lexmatch([trigger]),inputmatch([trigger]),tag(noun),tokens([trigger])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),det([lexmatch([these]),inputmatch([these]),tag(det),tokens([these])]),punc([inputmatch(['.']),tokens([])])],167/31,[]).
candidates(9,1,0,8,[]).
mappings([map(-714,[ev(-593,'C0028128','NO','Nitric Oxide',[no],[bacs,inch,phsu],[[[1,1],[1,1],0]],no,no,['AOD','ATC','CHV','CSP','LCH_NW','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[167/2],0,0),ev(-593,'C0239313','EXERTIONAL','exercise induced',[exertional],[sosy],[[[2,2],[1,1],0]],no,no,['CHV','DXP','NLMSubSyn'],[170/10],0,1),ev(-760,'C0032930','Trigger','Precipitating Factors',[trigger],[clna],[[[3,3],[1,1],0]],yes,no,['CHV','MSH','MTH','SNOMEDCT_US'],[181/7],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Problem #2: CAD",0/15,[]).
phrase('Problem #2',[mod([lexmatch([problem]),inputmatch(['Problem']),tag(noun),tokens([problem])]),punc([inputmatch([#]),tokens([])]),shapes([inputmatch(['2']),features([integer]),tokens(['2'])])],0/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C0033213','Problem','Problem',[problem],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[0/7],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],10/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('CAD',[head([lexmatch([cad]),inputmatch(['CAD']),tag(noun),tokens([cad])])],12/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3813548','CAD','CALD1 wt Allele',[cad],[gngm],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[12/3],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([negation(nega,no,[0/2],['C0232288':'Chest pain, exertional'],[3/21]),negation(nega,no,[0/2],['C1963093':'Dizziness'],[54/9]),negation(nega,no,[0/2],['C0857087':'Dizzy spells'],[26/12]),negation(nega,not,[184/3],['C0425152':'Engaged'],[195/7])]).
utterance('00000000.tx.1',"No exertional chest pain, dizzy spells or episodes of dizziness. ",0/65,[]).
phrase('No exertional chest pain,',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),mod([lexmatch([exertional]),inputmatch([exertional]),tag(adj),tokens([exertional])]),head([lexmatch(['chest pain']),inputmatch([chest,pain]),tag(noun),tokens([chest,pain])]),punc([inputmatch([',']),tokens([])])],0/25,[]).
candidates(16,8,0,8,[]).
mappings([map(-1000,[ev(-1000,'C0232288','Chest pain, exertional','Chest pain on exertion',[exertional,chest,pain],[sosy],[[[1,1],[1,1],0],[[2,3],[2,3],0]],yes,no,['DXP','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[3/21],0,1)])]).
phrase('dizzy spells',[mod([lexmatch([dizzy]),inputmatch([dizzy]),tag(adj),tokens([dizzy])]),head([lexmatch([spells]),inputmatch([spells]),tag(noun),tokens([spells])])],26/12,[]).
candidates(8,5,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0857087','Dizzy spells','Dizzy spells',[dizzy,spells],[fndg],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','SNOMEDCT_US'],[26/12],0,1)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],39/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('episodes of dizziness.',[head([lexmatch([episodes]),inputmatch([episodes]),tag(noun),tokens([episodes])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([dizziness]),inputmatch([dizziness]),tag(noun),tokens([dizziness])]),punc([inputmatch(['.']),tokens([])])],42/22,[]).
candidates(11,5,0,6,[]).
mappings([map(-890,[ev(-866,'C0332189','Episode of','Episode of',[episode,of],[tmco],[[[1,1],[1,1],1],[[2,2],[2,2],0]],yes,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[42/11],0,0),ev(-623,'C1963093','Dizziness','Dizziness Adverse Event',[dizziness],[fndg],[[[3,3],[1,1],0]],no,no,['MTH','NCI','NCI_CTCAE'],[54/9],0,1)])]).
'EOU'.
utterance('00000000.tx.2',"Thallium stress last year to METS 13 showed normal ECG but a small anteroseptal zone of ischemia with reperfusion. ",65/115,[]).
phrase('Thallium stress last year to METS 13',[mod([lexmatch([thallium]),inputmatch(['Thallium']),tag(noun),tokens([thallium])]),mod([lexmatch([stress]),inputmatch([stress]),tag(noun),tokens([stress])]),mod([lexmatch([last]),inputmatch([last]),tag(adj),tokens([last])]),head([lexmatch([year]),inputmatch([year]),tag(noun),tokens([year])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),mod([lexmatch([mets]),inputmatch(['METS']),tag(noun),tokens([mets])]),shapes([inputmatch(['13']),features([integer]),tokens(['13'])])],65/36,[]).
candidates(9,2,0,7,[]).
mappings([map(-664,[ev(-581,'C0039738','THALLIUM','Thallium',[thallium],[elii],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NDFRT','RXNORM','SNMI','SNOMEDCT_US'],[65/8],0,0),ev(-581,'C0038435','Stress','Stress',[stress],[fndg],[[[2,2],[1,1],0]],no,no,['AOD','CHV','CSP','LNC','MEDLINEPLUS','MTH','NCI','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US'],[74/6],0,0),ev(-748,'C0439508','/Year','per year',[year],[tmco],[[[4,4],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[86/4],0,0),ev(-581,'C1705694','METS','ETV3 wt Allele',[mets],[gngm],[[[6,6],[1,1],0]],no,no,['MTH','NCI'],[94/4],0,0)])]).
phrase(showed,[verb([lexmatch([showed]),inputmatch([showed]),tag(verb),tokens([showed])])],102/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-966,[ev(-966,'C1547282','Show','Show',[show],[anim],[[[1,1],[1,1],1]],yes,no,['HL7V2.5','HL7V3.0'],[102/6],0,0)])]).
phrase('normal ECG',[mod([lexmatch([normal]),inputmatch([normal]),tag(adj),tokens([normal])]),head([lexmatch([ecg]),inputmatch(['ECG']),tag(noun),tokens([ecg])])],109/10,[]).
candidates(5,0,0,5,[]).
mappings([map(-1000,[ev(-1000,'C0522054','Normal ECG','ECG normal',[normal,ecg],[fndg],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','SNMI','SNOMEDCT_US'],[109/10],0,0)])]).
phrase(but,[conj([lexmatch([but]),inputmatch([but]),tag(conj),tokens([but])])],120/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('a small anteroseptal zone of ischemia',[det([lexmatch([a]),inputmatch([a]),tag(det),tokens([a])]),mod([lexmatch([small]),inputmatch([small]),tag(adj),tokens([small])]),mod([lexmatch([anteroseptal]),inputmatch([anteroseptal]),tag(adj),tokens([anteroseptal])]),head([lexmatch([zone]),inputmatch([zone]),tag(noun),tokens([zone])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([ischemia]),inputmatch([ischemia]),tag(noun),tokens([ischemia])])],124/37,[]).
candidates(6,2,0,4,[]).
mappings([map(-712,[ev(-623,'C2984078','A Small','A little bit',[a,small],[inpr],[[[1,1],[1,1],0],[[2,2],[2,2],0]],no,no,['LNC','MTH','NCI','NLMSubSyn'],[124/7],0,0),ev(-753,'C1710706','Zone','Zone',[zone],[spco],[[[4,4],[1,1],0]],yes,no,['MTH','NCI'],[145/4],0,0),ev(-586,'C0022116','ISCHEMIA','Ischemia',[ischemia],[patf],[[[6,6],[1,1],0]],no,no,['AOD','CHV','COSTAR','CSP','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US'],[153/8],0,0)])]).
phrase('with reperfusion.',[prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),head([lexmatch([reperfusion]),inputmatch([reperfusion]),tag(noun),tokens([reperfusion])]),punc([inputmatch(['.']),tokens([])])],162/17,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0684253',reperfusion,'Physiological reperfusion',[reperfusion],[biof],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','MTH'],[167/11],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Has not really engaged in fitness program as recommended by Y Ullrich",180/69,[]).
phrase('Has',[aux([lexmatch([has]),inputmatch(['Has']),tag(aux),tokens([has])])],180/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(not,[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])])],184/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[184/3],0,0)])]).
phrase(really,[adv([lexmatch([really]),inputmatch([really]),tag(adv),tokens([really])])],188/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('engaged in fitness program',[verb([lexmatch([engaged]),inputmatch([engaged]),tag(verb),tokens([engaged])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([fitness]),inputmatch([fitness]),tag(noun),tokens([fitness])]),mod([lexmatch([program]),inputmatch([program]),tag(noun),tokens([program])])],195/26,[]).
candidates(7,2,0,5,[]).
mappings([map(-733,[ev(-770,'C0425152','Engaged','Engaged to be married',[engaged],[fndg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','MTH','SNMI','SNOMEDCT_US'],[195/7],0,1),ev(-770,'C1456706','Fitness','Fitness',[fitness],[dora],[[[3,3],[1,1],0]],yes,no,['MEDLINEPLUS'],[206/7],0,0),ev(-770,'C2728259','Program','Program',[program],[phsu],[[[4,4],[1,1],0]],yes,no,['MTH','RXNORM'],[214/7],0,0)])]).
phrase(as,[conj([lexmatch([as]),inputmatch([as]),tag(conj),tokens([as])])],222/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('recommended by Y Ullrich',[verb([lexmatch([recommended]),inputmatch([recommended]),tag(verb),tokens([recommended])]),prep([lexmatch([by]),inputmatch([by]),tag(prep),tokens([by])]),mod([lexmatch([y]),inputmatch(['Y']),tag(noun),tokens([y])]),mod([lexmatch([ullrich]),inputmatch(['Ullrich']),tag(noun),tokens([ullrich])])],225/24,[]).
candidates(1,0,0,1,[]).
mappings([map(-770,[ev(-770,'C0034866','Recommended','Recommendation',[recommended],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','NCI'],[225/11],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Problem # 3 .HT",0/15,[]).
phrase('Problem # 3 .HT',[mod([lexmatch([problem]),inputmatch(['Problem']),tag(noun),tokens([problem])]),punc([inputmatch([#]),tokens([])]),shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),punc([inputmatch(['.']),tokens([])]),head([lexmatch([ht]),inputmatch(['HT']),tag(noun),tokens([ht])])],0/15,[]).
candidates(4,0,0,4,[]).
mappings([map(-802,[ev(-660,'C0033213','Problem','Problem',[problem],[fndg],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[0/7],0,0),ev(-827,'C0018510','HT','Haiti',[ht],[geoa],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','LCH','LNC','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[13/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"BP's 150/80 range at home",0/25,[]).
phrase('BP\'s 150/80 range',[mod([lexmatch([bp]),inputmatch(['BP\'s']),tag(noun),tokens([bp])]),shapes([inputmatch(['150',/,'80']),features([fraction]),tokens(['150','80'])]),head([lexmatch([range]),inputmatch([range]),tag(noun),tokens([range])])],0/17,[]).
candidates(7,0,0,7,[]).
mappings([map(-775,[ev(-645,'C1415692','Bp','HP gene',[bp],[gngm],[[[1,1],[1,1],0]],no,no,['HGNC','MTH','NCI','OMIM'],[0/4],0,0),ev(-645,'C3842583','80%','80%',['80'],[fndg],[[[3,3],[1,1],0]],no,no,['LNC'],[9/2],0,0),ev(-812,'C1514721','Range','Range',[range],[qnco],[[[4,4],[1,1],0]],yes,no,['HL7V2.5','LNC','MTH','NCI','NCI_NICHD'],[12/5],0,0)])]).
phrase('at home',[head([lexmatch(['at home']),inputmatch([at,home]),tag(adj),tokens([at,home])])],18/7,[]).
candidates(2,0,0,2,[]).
mappings([map(-888,[ev(-861,'C1516077','At','At',[at],[spco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[18/2],0,0),ev(-861,'C0442519','HOME','Home environment',[home],[cnce],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','LNC','MTH','NCI','NCI_FDA','SNOMEDCT_US'],[21/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Problem #4 Hyperlipidemia",0/25,[]).
phrase('Problem #4 Hyperlipidemia',[mod([lexmatch([problem]),inputmatch(['Problem']),tag(noun),tokens([problem])]),punc([inputmatch([#]),tokens([])]),shapes([inputmatch(['4']),features([integer]),tokens(['4'])]),head([lexmatch([hyperlipidemia]),inputmatch(['Hyperlipidemia']),tag(noun),tokens([hyperlipidemia])])],0/25,[]).
candidates(4,0,0,4,[]).
mappings([map(-802,[ev(-660,'C0033213','Problem','Problem',[problem],[fndg],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[0/7],0,0),ev(-827,'C0020473','HYPERLIPIDEMIA','Hyperlipidemia',[hyperlipidemia],[dsyn],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','ICD10CM','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NDFRT','OMIM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[11/14],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Last chol169  TG 270  HDL 35  LDL 79  (9/88)",0/44,[]).
phrase('Last chol169  TG 270  HDL 35  LDL 79',[mod([lexmatch([last]),inputmatch(['Last']),tag(adj),tokens([last])]),mod([inputmatch([chol169]),tag(noun),tokens([chol169])]),mod([lexmatch([tg]),inputmatch(['TG']),tag(noun),tokens([tg])]),shapes([inputmatch(['270']),features([integer]),tokens(['270'])]),mod([lexmatch([hdl]),inputmatch(['HDL']),tag(noun),tokens([hdl])]),shapes([inputmatch(['35']),features([integer]),tokens(['35'])]),mod([lexmatch([ldl]),inputmatch(['LDL']),tag(noun),tokens([ldl])]),shapes([inputmatch(['79']),features([integer]),tokens(['79'])])],0/36,[]).
candidates(3,0,0,3,[]).
mappings([map(-704,[ev(-793,'C1517741','Last','Last',[last],[qlco],[[[1,1],[1,1],0]],yes,no,['NCI'],[0/4],0,0),ev(-793,'C0337445','TG','Thyroglobulin measurement',[tg],[lbpr],[[[3,3],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[14/2],0,0),ev(-793,'C3715113','HDL','HSD11B1 wt Allele',[hdl],[gngm],[[[5,5],[1,1],0]],yes,no,['MTH','NCI'],[22/3],0,0)])]).
phrase('(9/88',[punc([inputmatch(['(']),tokens([])]),shapes([inputmatch(['9',/,'88']),features([fraction]),tokens(['9','88'])])],38/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(')',[punc([inputmatch([')']),tokens([])])],43/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Problem # 5 Asthma",0/18,[]).
phrase('Problem # 5 Asthma',[mod([lexmatch([problem]),inputmatch(['Problem']),tag(noun),tokens([problem])]),punc([inputmatch([#]),tokens([])]),shapes([inputmatch(['5']),features([integer]),tokens(['5'])]),head([lexmatch([asthma]),inputmatch(['Asthma']),tag(noun),tokens([asthma])])],0/18,[]).
candidates(4,0,0,4,[]).
mappings([map(-802,[ev(-660,'C0033213','Problem','Problem',[problem],[fndg],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[0/7],0,0),ev(-827,'C0004096','-- Asthma','Asthma',[asthma],[dsyn],[[[3,3],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','OMIM','QMR','SNM','SNMI','SNOMEDCT_US'],[12/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Intensifies seasonally  (now) controlled with inhalants",0/55,[]).
phrase('Intensifies',[verb([lexmatch([intensifies]),inputmatch(['Intensifies']),tag(verb),tokens([intensifies])])],0/11,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(seasonally,[adv([lexmatch([seasonally]),inputmatch([seasonally]),tag(adv),tokens([seasonally])])],12/10,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('(now',[punc([inputmatch(['(']),tokens([])]),adv([lexmatch([now]),inputmatch([now]),tag(adv),tokens([now])])],24/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1948052','Now','Now (temporal qualifier)',[now],[tmco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[25/3],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],28/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('controlled with inhalants',[verb([lexmatch([controlled]),inputmatch([controlled]),tag(verb),tokens([controlled])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([inhalants]),inputmatch([inhalants]),tag(noun),tokens([inhalants])])],30/25,[]).
candidates(10,5,0,5,[]).
mappings([map(-746,[ev(-790,'C2911690','Controlled','Disease Controlled',[controlled],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NLMSubSyn'],[30/10],0,0),ev(-790,'C0598322',inhalants,'Inhalant dose form',[inhalants],[bodm],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','CSP','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NDFRT','RXNORM'],[46/9],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Problem # 6  Recurrent sinusitis",0/32,[]).
phrase('Problem # 6  Recurrent sinusitis',[mod([lexmatch([problem]),inputmatch(['Problem']),tag(noun),tokens([problem])]),punc([inputmatch([#]),tokens([])]),shapes([inputmatch(['6']),features([integer]),tokens(['6'])]),mod([lexmatch([recurrent]),inputmatch(['Recurrent']),tag(adj),tokens([recurrent])]),head([lexmatch([sinusitis]),inputmatch([sinusitis]),tag(noun),tokens([sinusitis])])],0/32,[]).
candidates(8,3,0,5,[]).
mappings([map(-824,[ev(-645,'C0033213','Problem','Problem',[problem],[fndg],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[0/7],0,0),ev(-861,'C0581354','Recurrent sinusitis','Recurrent sinusitis',[recurrent,sinusitis],[dsyn],[[[3,3],[1,1],0],[[4,4],[2,2],0]],yes,no,['HPO','OMIM','SNOMEDCT_US'],[13/19],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"He describes stuffiness of sinuses, at times has been treated by his ENT physician with cipro. ",0/95,[]).
phrase('He',[pron([lexmatch([he]),inputmatch(['He']),tag(pron),tokens([he])])],0/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(describes,[verb([lexmatch([describes]),inputmatch([describes]),tag(verb),tokens([describes])])],3/9,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('stuffiness of sinuses,',[head([lexmatch([stuffiness]),inputmatch([stuffiness]),tag(noun),tokens([stuffiness])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([sinuses]),inputmatch([sinuses]),tag(noun),tokens([sinuses])]),punc([inputmatch([',']),tokens([])])],13/22,[]).
candidates(3,0,0,3,[]).
mappings([map(-623,[ev(-623,'C0016169','Sinus','pathologic fistula',[sinus],[anab],[[[3,3],[1,1],0]],no,no,['AOD','CHV','COSTAR','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[27/7],0,0)])]).
phrase('at times',[prep([lexmatch([at]),inputmatch([at]),tag(prep),tokens([at])]),head([lexmatch([times]),inputmatch([times]),tag(noun),tokens([times])])],36/8,[]).
candidates(5,3,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0040223',times,'Time',[times],[tmco],[[[1,1],[1,1],0]],yes,no,['CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NICHD','SNOMEDCT_US'],[39/5],0,0)])]).
phrase(has,[aux([lexmatch([has]),inputmatch([has]),tag(aux),tokens([has])])],45/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(been,[aux([lexmatch([been]),inputmatch([been]),tag(aux),tokens([been])])],49/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('treated by his ENT physician',[verb([lexmatch([treated]),inputmatch([treated]),tag(verb),tokens([treated])]),prep([lexmatch([by]),inputmatch([by]),tag(prep),tokens([by])]),pron([lexmatch([his]),inputmatch([his]),tag(pron),tokens([his])]),mod([lexmatch([ent]),inputmatch(['ENT']),tag(noun),tokens([ent])]),mod([lexmatch([physician]),inputmatch([physician]),tag(noun),tokens([physician])])],54/28,[]).
candidates(9,2,0,7,[]).
mappings([map(-761,[ev(-760,'C1522326','Treated','Treating',[treated],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI'],[54/7],0,0),ev(-760,'C0019602','HIS','Histidine',[his],[aapp,bacs,phsu],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','LNC','MSH','MTH','MTHSPL','NCI','NCI_CRCH','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[65/3],0,0),ev(-806,'C0260087','ENT Physician','Otolaryngologist',[ent,physician],[prog],[[[4,4],[1,1],0],[[5,5],[2,2],0]],yes,no,['CHV','LCH','LCH_NW','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn'],[69/13],0,0)])]).
phrase('with cipro.',[prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),head([lexmatch([cipro]),inputmatch([cipro]),tag(noun),tokens([cipro])]),punc([inputmatch(['.']),tokens([])])],83/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0701042','Cipro','Cipro',[cipro],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','MSH','NCI','NCI_NCI-GLOSS','PDQ','RXNORM'],[88/5],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"May need drainage surgery",95/25,[]).
phrase('May',[modal([lexmatch([may]),inputmatch(['May']),tag(modal),tokens([may])])],95/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(need,[verb([lexmatch([need]),inputmatch([need]),tag(verb),tokens([need])])],99/4,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0027552','Need','Needs',[need],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','MTH','NCI','SNOMEDCT_US'],[99/4],0,0)])]).
phrase('drainage surgery',[mod([lexmatch([drainage]),inputmatch([drainage]),tag(noun),tokens([drainage])]),head([lexmatch([surgery]),inputmatch([surgery]),tag(noun),tokens([surgery])])],104/16,[]).
candidates(9,1,0,8,[]).
mappings([map(-888,[ev(-694,'C0012621','Drainage, NOS','Body Fluid Discharge',[drainage],[bdsu],[[[1,1],[1,1],0]],no,no,['CHV','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[104/8],0,0),ev(-861,'C1274039','Surgery','General surgery specialty',[surgery],[bmod],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MSH','MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[113/7],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Social History  Unchanged",0/25,[]).
phrase('Social History',[head([lexmatch(['social history']),inputmatch(['Social','History']),tag(noun),tokens([social,history])])],0/14,[]).
candidates(11,2,0,9,[]).
mappings([map(-1000,[ev(-1000,'C0424945','Social history','Social and personal history',[social,history],[fndg],[[[1,2],[1,2],0]],yes,no,['CHV','MTH','SNOMEDCT_US'],[0/14],0,0)])]).
phrase('Unchanged',[head([lexmatch([unchanged]),inputmatch(['Unchanged']),tag(adj),tokens([unchanged])])],16/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C2346711','Unchanged','About The Same',[unchanged],[qlco],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[16/9],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"ROS",0/3,[]).
phrase('ROS',[head([lexmatch([ros]),inputmatch(['ROS']),tag(noun),tokens([ros])])],0/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([negation(nega,no,[7/2],['C0018767':'Hearing'],[10/7])]).
utterance('00000000.tx.1',"HEENT: No hearing or visual problems.",0/37,[]).
phrase('HEENT',[head([lexmatch([heent]),inputmatch(['HEENT']),tag(noun),tokens([heent])])],0/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1512338','HEENT','HEENT',[heent],[blor],[[[1,1],[1,1],0]],yes,no,['LNC','NCI','OMIM'],[0/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],5/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('No hearing',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([hearing]),inputmatch([hearing]),tag(noun),tokens([hearing])])],7/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0018767','Hearing','Hearing',[hearing],[phsf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[10/7],0,1)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],18/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('visual problems.',[mod([lexmatch([visual]),inputmatch([visual]),tag(adj),tokens([visual])]),head([lexmatch([problems]),inputmatch([problems]),tag(noun),tokens([problems])]),punc([inputmatch(['.']),tokens([])])],21/16,[]).
candidates(4,2,0,2,[]).
mappings([map(-888,[ev(-694,'C0234621','Visual','Visual',[visual],[ftcn],[[[1,1],[1,1],0]],no,no,['CHV','LNC','NCI','SNMI','SNOMEDCT_US'],[21/6],0,0),ev(-861,'C1546466','Problems','Problems - What subject filter',[problems],[idcn],[[[2,2],[1,1],0]],yes,no,['HL7V2.5','MTH'],[28/8],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Resp:    See above",0/18,[]).
phrase('Resp',[head([lexmatch([resp]),inputmatch(['Resp']),tag(noun),tokens([resp])])],0/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0231832','RESP','Respiratory rate',[resp],[clna],[[[1,1],[1,1],0]],yes,no,['CHV','ICF','ICF-CY','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCPDP','NCI_NICHD','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[0/4],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],4/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('See',[verb([lexmatch([see]),inputmatch(['See']),tag(verb),tokens([see])])],9/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1947903','See','See',[see],[acty],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[9/3],0,0)])]).
phrase(above,[head([lexmatch([above]),inputmatch([above]),tag(adj),tokens([above])])],13/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1282910','Above','Upper',[above],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','FMA','HL7V2.5','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US','UWDA'],[13/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"CV:       See above",0/19,[]).
phrase('CV',[head([lexmatch([cv]),inputmatch(['CV']),tag(noun),tokens([cv])])],0/2,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3538987','CV','Cardiovascular System Findings Domain',[cv],[idcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NLMSubSyn'],[0/2],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],2/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('See',[verb([lexmatch([see]),inputmatch(['See']),tag(verb),tokens([see])])],10/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[10/3],0,0)])]).
phrase(above,[head([lexmatch([above]),inputmatch([above]),tag(adj),tokens([above])])],14/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1282910','Above','Upper',[above],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','FMA','HL7V2.5','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US','UWDA'],[14/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([negation(nega,no,[10/2],['C0018932':'HEMATOCHEZIA'],[56/12]),negation(nega,no,[10/2],['C0025222':'MELAENA'],[70/6]),negation(nega,no,[10/2],['C0027497':'NAUSEA'],[13/6]),negation(nega,no,[10/2],['C1962977':'Pain NOS'],[31/4]),negation(nega,no,[10/2],['C0042963':'VOMITING'],[21/8])]).
utterance('00000000.tx.1',"Abd:      No nausea, vomiting, pain, bowel disturbance, hematochezia, melena",0/76,[]).
phrase('Abd',[head([lexmatch([abd]),inputmatch(['Abd']),tag(noun),tokens([abd])])],0/3,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0000726',abd,'Abdomen',[abd],[blor],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NCI-GLOSS','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[0/3],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],3/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('No nausea,',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([nausea]),inputmatch([nausea]),tag(noun),tokens([nausea])]),punc([inputmatch([',']),tokens([])])],10/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0027497','NAUSEA','Nausea',[nausea],[sosy],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICPC','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[13/6],0,1)])]).
phrase(vomiting,[verb([lexmatch([vomiting]),inputmatch([vomiting]),tag(verb),tokens([vomiting])])],21/8,[]).
candidates(3,1,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042963','VOMITING','Vomiting',[vomiting],[sosy],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICF-CY','ICPC','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[21/8],0,1)])]).
phrase(',',[punc([inputmatch([',']),tokens([])])],29/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('pain,',[head([lexmatch([pain]),inputmatch([pain]),tag(noun),tokens([pain])]),punc([inputmatch([',']),tokens([])])],31/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1962977','Pain NOS','Pain NOS Adverse Event',[pain],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CTCAE'],[31/4],0,1)])]).
phrase('bowel disturbance,',[mod([lexmatch([bowel]),inputmatch([bowel]),tag(noun),tokens([bowel])]),head([lexmatch([disturbance]),inputmatch([disturbance]),tag(noun),tokens([disturbance])]),punc([inputmatch([',']),tokens([])])],37/18,[]).
candidates(2,0,0,2,[]).
mappings([map(-888,[ev(-694,'C0021853','Bowel','Intestines',[bowel],[bpoc],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET','UWDA'],[37/5],0,0),ev(-861,'C2699787','Disturbance','Disturbance',[disturbance],[qlco],[[[2,2],[1,1],0]],yes,no,['NCI'],[43/11],0,0)])]).
phrase('hematochezia,',[head([lexmatch([hematochezia]),inputmatch([hematochezia]),tag(noun),tokens([hematochezia])]),punc([inputmatch([',']),tokens([])])],56/13,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0018932','HEMATOCHEZIA','Hematochezia',[hematochezia],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','DXP','HPO','MSH','MTH','MTHMST','NCI','NCI_NICHD','NLMSubSyn','OMIM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[56/12],0,1)])]).
phrase(melena,[head([lexmatch([melena]),inputmatch([melena]),tag(noun),tokens([melena])])],70/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0025222','MELAENA','Melena',[melaena],[patf],[[[1,1],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','MSH','MTH','MTHICD9','MTHMST','NCI','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[70/6],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([negation(nega,no,[11/2],['C0013428':'DYSURIA'],[14/7]),negation(nega,no,[11/2],['C0016199':'FLANK PAIN'],[34/10]),negation(nega,no,[11/2],['C0018965':'HAEMATURIA'],[23/9])]).
utterance('00000000.tx.1',"GU:        No dysuria, hematuria, flank pain.",0/45,[]).
phrase('GU',[head([lexmatch([gu]),inputmatch(['GU']),tag(noun),tokens([gu])])],0/2,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3887515','GU','Genitourinary',[gu],[blor],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI','OMIM'],[0/2],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],2/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('No dysuria,',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([dysuria]),inputmatch([dysuria]),tag(noun),tokens([dysuria])]),punc([inputmatch([',']),tokens([])])],11/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0013428','DYSURIA','Dysuria',[dysuria],[sosy],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','ICPC','MEDLINEPLUS','MSH','MTHICD9','NCI','NCI_FDA','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','QMR','SNM','SNMI','SNOMEDCT_US'],[14/7],0,1)])]).
phrase('hematuria,',[head([lexmatch([hematuria]),inputmatch([hematuria]),tag(noun),tokens([hematuria])]),punc([inputmatch([',']),tokens([])])],23/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0018965','HAEMATURIA','Hematuria',[haematuria],[fndg],[[[1,1],[1,1],0]],yes,no,['CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[23/9],0,1)])]).
phrase('flank pain.',[head([lexmatch(['flank pain']),inputmatch([flank,pain]),tag(noun),tokens([flank,pain])]),punc([inputmatch(['.']),tokens([])])],34/11,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C0016199','FLANK PAIN','Flank Pain',[flank,pain],[sosy],[[[1,2],[1,2],0]],yes,no,['CHV','COSTAR','CST','DXP','HPO','MSH','MTH','NCI','NCI_CTCAE','NDFRT','SNOMEDCT_US'],[34/10],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([negation(nega,no,[9/2],['C0016928':'Gait'],[21/4]),negation(nega,no,[46/2],['C0039070':'SYNCOPE'],[49/7]),negation(nega,no,[46/2],['C0036572':'Seizures'],[58/8])]).
utterance('00000000.tx.1',"NM:      No sensory, gait, strength deficits. ",0/46,[]).
phrase('NM',[head([lexmatch([nm]),inputmatch(['NM']),tag(noun),tokens([nm])])],0/2,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0312860','NM','Neutrophil migration, function',[nm],[celf],[[[1,1],[1,1],0]],yes,no,['GO','MTH','NLMSubSyn','OMIM','SNMI','SNOMEDCT_US'],[0/2],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],2/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('No sensory, gait,',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),mod([lexmatch([sensory]),inputmatch([sensory]),tag(adj),tokens([sensory])]),punc([inputmatch([',']),tokens([])]),head([lexmatch([gait]),inputmatch([gait]),tag(noun),tokens([gait])]),punc([inputmatch([',']),tokens([])])],9/17,[]).
candidates(7,5,0,2,[]).
mappings([map(-888,[ev(-694,'C0445254','Sensory','Sensory (qualifier value)',[sensory],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNOMEDCT_US'],[12/7],0,0),ev(-861,'C0016928','Gait','Gait',[gait],[fndg],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','CSP','LNC','MSH','NCI','SNM','SNMI','SNOMEDCT_US'],[21/4],0,1)])]).
phrase('strength deficits.',[mod([lexmatch([strength]),inputmatch([strength]),tag(noun),tokens([strength])]),head([lexmatch([deficits]),inputmatch([deficits]),tag(noun),tokens([deficits])]),punc([inputmatch(['.']),tokens([])])],27/18,[]).
candidates(6,2,0,4,[]).
mappings([map(-888,[ev(-694,'C0808080','Strength','STRENGTH (attribute)',[strength],[idcn],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH'],[27/8],0,0),ev(-861,'C2987487',deficits,'Deficit',[deficits],[qlco],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI'],[36/8],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"No syncope, seizures.",46/21,[]).
phrase('No syncope,',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([syncope]),inputmatch([syncope]),tag(noun),tokens([syncope])]),punc([inputmatch([',']),tokens([])])],46/11,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0039070','SYNCOPE','Syncope',[syncope],[sosy],[[[1,1],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[49/7],0,1)])]).
phrase('seizures.',[head([lexmatch([seizures]),inputmatch([seizures]),tag(noun),tokens([seizures])]),punc([inputmatch(['.']),tokens([])])],58/9,[]).
candidates(2,1,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0036572','Seizures','Seizures',[seizures],[sosy],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','OMIM','PDQ','SNM','SNMI','SNOMEDCT_US'],[58/8],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([negation(nega,no,[8/2],['C0009269':'COLD INTOLERANCE'],[41/16]),negation(nega,no,[8/2],['C0085602':'POLYDIPSIA'],[21/10]),negation(nega,no,[8/2],['C0032617':'POLYURIA'],[11/8])]).
utterance('00000000.tx.1',"Endoc:  No polyuria, polydipsia, heat or cold intolerance.",0/58,[]).
phrase('Endoc',[head([inputmatch(['Endoc']),tag(noun),tokens([endoc])])],0/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(:,[punc([inputmatch([:]),tokens([])])],5/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('No polyuria,',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([polyuria]),inputmatch([polyuria]),tag(noun),tokens([polyuria])]),punc([inputmatch([',']),tokens([])])],8/12,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0032617','POLYURIA','Polyuria',[polyuria],[sosy],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','MSH','MTH','NCI','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[11/8],0,1)])]).
phrase('polydipsia,',[head([lexmatch([polydipsia]),inputmatch([polydipsia]),tag(noun),tokens([polydipsia])]),punc([inputmatch([',']),tokens([])])],21/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0085602','POLYDIPSIA','Polydipsia',[polydipsia],[sosy],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','ICPC','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[21/10],0,1)])]).
phrase(heat,[head([lexmatch([heat]),inputmatch([heat]),tag(noun),tokens([heat])])],33/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0018837','Heat','Heat (physical force)',[heat],[npop],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','MSH','MTH','SNM','SNMI','SNOMEDCT_US'],[33/4],0,0)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],38/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('cold intolerance.',[mod([lexmatch([cold]),inputmatch([cold]),tag(adj),tokens([cold])]),head([lexmatch([intolerance]),inputmatch([intolerance]),tag(noun),tokens([intolerance])]),punc([inputmatch(['.']),tokens([])])],41/17,[]).
candidates(9,1,0,8,[]).
mappings([map(-1000,[ev(-1000,'C0009269','COLD INTOLERANCE','Cold intolerance',[cold,intolerance],[sosy],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','COSTAR','DXP','MTH','SNM','SNMI','SNOMEDCT_US'],[41/16],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([negation(nega,no,[9/2],['C0003862':'ARTHRALGIAS'],[22/11]),negation(nega,no,[9/2],['C0231528':'MYALGIAS'],[12/8])]).
utterance('00000000.tx.1',"BMJ:     No myalgias, arthralgias.",0/34,[]).
phrase('BMJ',[head([lexmatch([bmj]),inputmatch(['BMJ']),tag(noun),tokens([bmj])])],0/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(:,[punc([inputmatch([:]),tokens([])])],3/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('No myalgias,',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([myalgias]),inputmatch([myalgias]),tag(noun),tokens([myalgias])]),punc([inputmatch([',']),tokens([])])],9/12,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0231528','MYALGIAS','Myalgia',[myalgias],[sosy],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICPC','LNC','MSH','MTH','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','QMR','SNM','SNMI','SNOMEDCT_US'],[12/8],0,1)])]).
phrase('arthralgias.',[head([lexmatch([arthralgias]),inputmatch([arthralgias]),tag(noun),tokens([arthralgias])]),punc([inputmatch(['.']),tokens([])])],22/12,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0003862','ARTHRALGIAS','Arthralgia',[arthralgias],[sosy],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','ICF','ICF-CY','LNC','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[22/11],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([negation(nega,no,[10/2],['C1299586':'Difficulty'],[44/10]),negation(nega,no,[10/2],['C0015672':'FATIGUE'],[29/7]),negation(nega,no,[10/2],['C0015967':'FEVER'],[22/5]),negation(nega,no,[10/2],['C1262477':'wt loss'],[13/7])]).
utterance('00000000.tx.1',"Other:    No wt loss, fever, fatigue, sleep difficulty.",0/55,[]).
phrase('Other',[det([lexmatch([other]),inputmatch(['Other']),tag(det),tokens([other])])],0/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(:,[punc([inputmatch([:]),tokens([])])],5/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('No wt loss,',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),mod([lexmatch([wt]),inputmatch([wt]),tag(noun),tokens([wt])]),head([lexmatch([loss]),inputmatch([loss]),tag(noun),tokens([loss])]),punc([inputmatch([',']),tokens([])])],10/11,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1262477','wt loss','Weight decreased',[wt,loss],[fndg],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','COSTAR','CSP','CST','DXP','HPO','ICD9CM','ICPC','LCH_NW','LNC','MSH','MTH','NCI','NCI_CTCAE','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[13/7],0,1)])]).
phrase('fever,',[head([lexmatch([fever]),inputmatch([fever]),tag(noun),tokens([fever])]),punc([inputmatch([',']),tokens([])])],22/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0015967','FEVER','Fever',[fever],[fndg],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CHV','COSTAR','CSP','CST','DXP','GO','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','QMR','SNM','SNMI','SNOMEDCT_US'],[22/5],0,1)])]).
phrase('fatigue,',[head([lexmatch([fatigue]),inputmatch([fatigue]),tag(noun),tokens([fatigue])]),punc([inputmatch([',']),tokens([])])],29/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0015672','FATIGUE','Fatigue',[fatigue],[sosy],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','PDQ','SNM','SNMI','SNOMEDCT_US'],[29/7],0,1)])]).
phrase('sleep difficulty.',[mod([lexmatch([sleep]),inputmatch([sleep]),tag(noun),tokens([sleep])]),head([lexmatch([difficulty]),inputmatch([difficulty]),tag(noun),tokens([difficulty])]),punc([inputmatch(['.']),tokens([])])],38/17,[]).
candidates(5,3,0,2,[]).
mappings([map(-888,[ev(-694,'C0037313','Sleep','Sleep',[sleep],[orgf],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NICHD','SNM','SNMI','SNOMEDCT_US'],[38/5],0,0),ev(-861,'C1299586','Difficulty','Has difficulty doing (qualifier value)',[difficulty],[fndg],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[44/10],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Physical Examination",0/20,[]).
phrase('Physical Examination',[head([lexmatch(['physical examination']),inputmatch(['Physical','Examination']),tag(noun),tokens([physical,examination])])],0/20,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C0031809','PHYSICAL EXAMINATION','Physical Examination',[physical,examination],[hlca],[[[1,2],[1,2],0]],yes,no,['AIR','AOD','AOT','CHV','ICD9CM','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NCI_NICHD','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[0/20],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"BP 170/70 (!)  ",0/15,[]).
phrase('BP 170/70',[mod([lexmatch([bp]),inputmatch(['BP']),tag(noun),tokens([bp])]),shapes([inputmatch(['170',/,'70']),features([fraction]),tokens(['170','70'])])],0/9,[]).
candidates(4,0,0,4,[]).
mappings([map(-802,[ev(-827,'C1415692','Bp','HP gene',[bp],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH','NCI','OMIM'],[0/2],0,0),ev(-827,'C3842584','70%','70%',['70'],[fndg],[[[3,3],[1,1],0]],yes,no,['LNC'],[7/2],0,0)])]).
phrase('(!',[punc([inputmatch(['(']),tokens([])]),punc([inputmatch([!]),tokens([])])],10/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(')',[punc([inputmatch([')']),tokens([])])],12/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.2',"P 56 RSR",15/8,[]).
phrase('P 56 RSR',[mod([lexmatch([p]),inputmatch(['P']),tag(noun),tokens([p])]),shapes([inputmatch(['56']),features([integer]),tokens(['56'])]),head([lexmatch([rsr]),inputmatch(['RSR']),tag(noun),tokens([rsr])])],15/8,[]).
candidates(3,0,0,3,[]).
mappings([map(-802,[ev(-660,'C2603361','P\'','P prime',[p],[clna],[[[1,1],[1,1],0]],no,no,['LNC','MTH'],[15/1],0,0),ev(-827,'C2984918','RSR\'','RSR\' by ECG Finding',[rsr],[fndg],[[[3,3],[1,1],0]],yes,no,['NCI','NCI_CDISC'],[20/3],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"HEENT  PERLA.  ",0/15,[]).
phrase('HEENT  PERLA.',[mod([lexmatch([heent]),inputmatch(['HEENT']),tag(noun),tokens([heent])]),head([lexmatch([perla]),inputmatch(['PERLA']),tag(noun),tokens([perla])]),punc([inputmatch(['.']),tokens([])])],0/13,[]).
candidates(2,0,0,2,[]).
mappings([map(-888,[ev(-694,'C1512338','HEENT','HEENT',[heent],[blor],[[[1,1],[1,1],0]],no,no,['LNC','NCI','OMIM'],[0/5],0,0),ev(-861,'C1462919','Perla','Perla',[perla],[euka],[[[2,2],[1,1],0]],yes,no,['NCBI'],[7/5],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Pharynx benign",15/14,[]).
phrase('Pharynx',[head([lexmatch([pharynx]),inputmatch(['Pharynx']),tag(noun),tokens([pharynx])])],15/7,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1278903','Pharynx','Entire pharynx',[pharynx],[bpoc],[[[1,1],[1,1],0]],yes,no,['MTH','NLMSubSyn','SNOMEDCT_US'],[15/7],0,0)])]).
phrase(benign,[head([lexmatch([benign]),inputmatch([benign]),tag(adj),tokens([benign])])],23/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0205183','BENIGN','Benign',[benign],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','NCI','NCI_CDISC','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[23/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([negation(nega,no,[39/2],['C0007280':'CAROTID BRUIT'],[42/13])]).
utterance('00000000.tx.1',"Neck:  Supple.  ",0/16,[]).
phrase('Neck',[head([lexmatch([neck]),inputmatch(['Neck']),tag(noun),tokens([neck])])],0/4,[]).
candidates(5,2,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0027530','NECK','Neck',[neck],[blor],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[0/4],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],4/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Supple.',[head([lexmatch([supple]),inputmatch(['Supple']),tag(adj),tokens([supple])]),punc([inputmatch(['.']),tokens([])])],7/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0332254','Supple','Supple',[supple],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','SNMI','SNOMEDCT_US'],[7/6],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Thyroid not enlarged.  ",16/23,[]).
phrase('Thyroid',[head([lexmatch([thyroid]),inputmatch(['Thyroid']),tag(noun),tokens([thyroid])])],16/7,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0040132','Thyroid, NOS','Thyroid Gland',[thyroid],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','FMA','ICF','ICF-CY','LCH','LCH_NW','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US','UWDA'],[16/7],0,0)])]).
phrase(not,[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])])],24/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[24/3],0,0)])]).
phrase('enlarged.',[verb([lexmatch([enlarged]),inputmatch([enlarged]),tag(verb),tokens([enlarged])]),punc([inputmatch(['.']),tokens([])])],28/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0442800','Enlarged','Enlarged',[enlarged],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','SNMI','SNOMEDCT_US'],[28/8],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"No carotid bruit",39/16,[]).
phrase('No carotid bruit',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),mod([lexmatch([carotid]),inputmatch([carotid]),tag(adj),tokens([carotid])]),head([lexmatch([bruit]),inputmatch([bruit]),tag(noun),tokens([bruit])])],39/16,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0007280','CAROTID BRUIT','Carotid bruit',[carotid,bruit],[fndg],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','COSTAR','DXP','MTH','SNOMEDCT_US'],[42/13],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([negation(nega,no,[8/2],['C0497156':'LYMPHADENOPATHY'],[11/15])]).
utterance('00000000.tx.1',"LN'S:   No lymphadenopathy",0/26,[]).
phrase('LN\'S',[head([lexmatch(['ln\'s']),inputmatch(['LN','\'','S']),tag(noun),tokens([ln,s])])],0/4,[]).
candidates(3,0,0,3,[]).
mappings([map(-861,[ev(-861,'C1428884',ln,'MLPH gene',[ln],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[0/2],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],4/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('No lymphadenopathy',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([lymphadenopathy]),inputmatch([lymphadenopathy]),tag(noun),tokens([lymphadenopathy])])],8/18,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0497156','LYMPHADENOPATHY','Lymphadenopathy',[lymphadenopathy],[fndg],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[11/15],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Lungs:   Clear to percussion and auscultation",0/45,[]).
phrase('Lungs',[head([lexmatch([lungs]),inputmatch(['Lungs']),tag(noun),tokens([lungs])])],0/5,[]).
candidates(7,6,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0024109','LUNGS','Lung',[lungs],[bpoc],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[0/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],5/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Clear to percussion',[head([lexmatch([clear]),inputmatch(['Clear']),tag(adj),tokens([clear])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),mod([lexmatch([percussion]),inputmatch([percussion]),tag(noun),tokens([percussion])])],9/19,[]).
candidates(4,0,0,4,[]).
mappings([map(-746,[ev(-790,'C1709157','Clear','Negative Surgical Margin',[clear],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[9/5],0,0),ev(-623,'C1880282','PERCUSSION','Dental Percussion Procedure',[percussion],[diap],[[[3,3],[1,1],0]],no,no,['MTH','NCI','NCI_CDISC'],[18/10],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],29/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(auscultation,[head([lexmatch([auscultation]),inputmatch([auscultation]),tag(noun),tokens([auscultation])])],33/12,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0004339','AUSCULTATION','Auscultation',[auscultation],[diap],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','SNM','SNMI','SNOMEDCT_US'],[33/12],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([negation(nega,no,[22/2],['C0018808':murmurs],[25/7])]).
utterance('00000000.tx.1',"Heart:  Not enlarged. ",0/22,[]).
phrase('Heart',[head([lexmatch([heart]),inputmatch(['Heart']),tag(noun),tokens([heart])])],0/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0018787','HEART','Heart',[heart],[bpoc],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[0/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],5/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Not',[adv([lexmatch([not]),inputmatch(['Not']),tag(adv),tokens([not])])],8/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[8/3],0,0)])]).
phrase('enlarged.',[verb([lexmatch([enlarged]),inputmatch([enlarged]),tag(verb),tokens([enlarged])]),punc([inputmatch(['.']),tokens([])])],12/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1293134','Enlarged','Enlargement procedure',[enlarged],[topp],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[12/8],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"No murmurs",22/10,[]).
phrase('No murmurs',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([murmurs]),inputmatch([murmurs]),tag(noun),tokens([murmurs])])],22/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0018808',murmurs,'Heart murmur',[murmurs],[fndg],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CHV','COSTAR','DXP','HPO','ICD10CM','ICPC','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[25/7],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([negation(nega,no,[18/2],['C0684239':tenderness],[43/10])]).
utterance('00000000.tx.1',"Abdomen:   Soft.  ",0/18,[]).
phrase('Abdomen',[head([lexmatch([abdomen]),inputmatch(['Abdomen']),tag(noun),tokens([abdomen])])],0/7,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0000726','ABDOMEN','Abdomen',[abdomen],[blor],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NCI-GLOSS','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[0/7],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],7/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Soft.',[head([lexmatch([soft]),inputmatch(['Soft']),tag(adj),tokens([soft])]),punc([inputmatch(['.']),tokens([])])],11/5,[]).
candidates(3,1,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0205358','Soft','Soft',[soft],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[11/4],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"No organomegaly, masses. tenderness.",18/36,[]).
phrase('No organomegaly,',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([organomegaly]),inputmatch([organomegaly]),tag(noun),tokens([organomegaly])]),punc([inputmatch([',']),tokens([])])],18/16,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('masses. tenderness.',[mod([lexmatch([masses]),inputmatch([masses]),tag(noun),tokens([masses])]),punc([inputmatch(['.']),tokens([])]),head([lexmatch([tenderness]),inputmatch([tenderness]),tag(noun),tokens([tenderness])]),punc([inputmatch(['.']),tokens([])])],35/19,[]).
candidates(7,1,0,6,[]).
mappings([map(-872,[ev(-661,'C1306372','*Mass','Mass, a measure of quantity of matter',[mass],[qnco],[[[1,1],[1,1],1]],no,no,['CHV','HL7V2.5','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[35/6],0,0),ev(-861,'C0684239',tenderness,'Emotional tenderness',[tenderness],[menp],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','MTH'],[43/10],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Rectal: Prostate 2x enlarged, symm, no masses",0/45,[]).
phrase('Rectal',[head([lexmatch([rectal]),inputmatch(['Rectal']),tag(adj),tokens([rectal])])],0/6,[]).
candidates(3,2,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0205052','Rectal',rectal,[rectal],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V2.5','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[0/6],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],6/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Prostate 2x',[mod([lexmatch([prostate]),inputmatch(['Prostate']),tag(noun),tokens([prostate])]),head([inputmatch(['2x']),tag(noun),tokens(['2x'])])],8/11,[]).
candidates(3,1,0,2,[]).
mappings([map(-694,[ev(-694,'C1278980','Prostate','Entire prostate',[prostate],[bpoc],[[[1,1],[1,1],0]],no,no,['MTH','NLMSubSyn','SNOMEDCT_US'],[8/8],0,0)])]).
phrase(enlarged,[verb([lexmatch([enlarged]),inputmatch([enlarged]),tag(verb),tokens([enlarged])])],20/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1293134','Enlarged','Enlargement procedure',[enlarged],[topp],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[20/8],0,0)])]).
phrase(',',[punc([inputmatch([',']),tokens([])])],28/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('symm,',[head([inputmatch([symm]),tag(noun),tokens([symm])]),punc([inputmatch([',']),tokens([])])],30/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no masses',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([masses]),inputmatch([masses]),tag(noun),tokens([masses])])],36/9,[]).
candidates(4,0,0,4,[]).
mappings([map(-966,[ev(-966,'C1306372','*Mass','Mass, a measure of quantity of matter',[mass],[qnco],[[[1,1],[1,1],1]],yes,no,['CHV','HL7V2.5','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[39/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([negation(nega,no,[25/2],['C0013604':'EDEMA'],[28/5])]).
utterance('00000000.tx.1',"Extremities:  Full ROM.  ",0/25,[]).
phrase('Extremities',[head([lexmatch([extremities]),inputmatch(['Extremities']),tag(noun),tokens([extremities])])],0/11,[]).
candidates(7,5,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0015385','Extremities','Limb structure',[extremities],[bpoc],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','LNC','MSH','MTH','NCI','NCI_CDISC','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[0/11],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],11/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Full ROM.',[mod([lexmatch([full]),inputmatch(['Full']),tag(adj),tokens([full])]),head([lexmatch([rom]),inputmatch(['ROM']),tag(noun),tokens([rom])]),punc([inputmatch(['.']),tokens([])])],14/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-694,[ev(-694,'C0443225','Full','Full',[full],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','NCI','SNOMEDCT_US'],[14/4],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"No edema.  ",25/11,[]).
phrase('No edema.',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([edema]),inputmatch([edema]),tag(noun),tokens([edema])]),punc([inputmatch(['.']),tokens([])])],25/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0013604','EDEMA','Edema',[edema],[patf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET','UWDA'],[28/5],0,1)])]).
'EOU'.
utterance('00000000.tx.3',"Pedal pulses intact",36/19,[]).
phrase('Pedal',[head([lexmatch([pedal]),inputmatch(['Pedal']),tag(noun),tokens([pedal])])],36/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0016504','Pedal','Foot',[pedal],[bpoc],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[36/5],0,0)])]).
phrase(pulses,[verb([lexmatch([pulses]),inputmatch([pulses]),tag(verb),tokens([pulses])])],42/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C0391850','PULSES','Physiologic pulse',[pulses],[phsf],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[42/6],0,0)])]).
phrase(intact,[head([lexmatch([intact]),inputmatch([intact]),tag(adj),tokens([intact])])],49/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1554187','Intact','Gender Status - Intact',[intact],[fndg],[[[1,1],[1,1],0]],yes,no,['HL7V3.0','MTH'],[49/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Neurological:  Grossly normal",0/29,[]).
phrase('Neurological',[head([lexmatch([neurological]),inputmatch(['Neurological']),tag(adj),tokens([neurological])])],0/12,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0205494','NEUROLOGICAL','Neurologic (qualifier value)',[neurological],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','ICPC','LNC','MTH','NCI','NCI_NCI-GLOSS','OMIM','SNMI','SNOMEDCT_US'],[0/12],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],12/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Grossly normal',[adv([lexmatch([grossly]),inputmatch(['Grossly']),tag(adv),tokens([grossly])]),head([lexmatch([normal]),inputmatch([normal]),tag(adj),tokens([normal])])],15/14,[]).
candidates(3,0,0,3,[]).
mappings([map(-861,[ev(-861,'C0439166','% normal','Percent normal',[normal],[qnco],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','SNOMEDCT_US'],[23/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Impression and plan:",0/20,[]).
phrase('Impression',[head([lexmatch([impression]),inputmatch(['Impression']),tag(noun),tokens([impression])])],0/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1998467','Impression','Impression',[impression],[qlco],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[0/10],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],11/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(plan,[head([lexmatch([plan]),inputmatch([plan]),tag(noun),tokens([plan])])],15/4,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1301732','Plan','Planned',[plan],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNOMEDCT_US'],[15/4],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],19/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"GERD - same program",0/19,[]).
phrase('GERD - same program',[mod([lexmatch([gerd]),inputmatch(['GERD']),tag(noun),tokens([gerd])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([same]),inputmatch([same]),tag(adj),tokens([same])]),head([lexmatch([program]),inputmatch([program]),tag(noun),tokens([program])])],0/19,[]).
candidates(5,0,0,5,[]).
mappings([map(-851,[ev(-660,'C0017168','GERD','Gastroesophageal reflux disease',[gerd],[dsyn],[[[1,1],[1,1],0]],no,no,['CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','MTHMST','NCI','NCI_CTCAE','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[0/4],0,0),ev(-660,'C0445247','SAME','Same',[same],[qlco],[[[2,2],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_FDA','SNOMEDCT_US'],[7/4],0,0),ev(-827,'C2728259','Program','Program',[program],[phsu],[[[3,3],[1,1],0]],yes,no,['MTH','RXNORM'],[12/7],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"CAD - Repeat lipids; ",0/21,[]).
phrase('CAD - Repeat lipids',[mod([lexmatch([cad]),inputmatch(['CAD']),tag(noun),tokens([cad])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([repeat]),inputmatch(['Repeat']),tag(noun),tokens([repeat])]),head([lexmatch([lipids]),inputmatch([lipids]),tag(noun),tokens([lipids])])],0/19,[]).
candidates(5,0,0,5,[]).
mappings([map(-851,[ev(-660,'C3813548','CAD','CALD1 wt Allele',[cad],[gngm],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[0/3],0,0),ev(-660,'C0205341','Repeat','Repeat',[repeat],[ftcn],[[[2,2],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[6/6],0,0),ev(-827,'C0023779','Lipids','Lipids',[lipids],[orch],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NDFRT','PDQ','SNM','SNMI','SNOMEDCT_US','UWDA'],[13/6],0,0)])]).
phrase(;,[punc([inputmatch([;]),tokens([])])],19/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.2',"make appt to see Y Ullrich",21/26,[]).
phrase(make,[verb([lexmatch([make]),inputmatch([make]),tag(verb),tokens([make])])],21/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1881534','Make','Make - Instruction Imperative',[make],[ftcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[21/4],0,0)])]).
phrase(appt,[head([lexmatch([appt]),inputmatch([appt]),tag(noun),tokens([appt])])],26/4,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0245203','APPT','4-azido-7-phenylpyrazolo-(1,5a)-1,3,5-triazine',[appt],[bacs,orch],[[[1,1],[1,1],0]],yes,no,['MSH','MTH'],[26/4],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],31/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0040363','TO','Togo',[to],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LCH','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[31/2],0,0)])]).
phrase(see,[verb([lexmatch([see]),inputmatch([see]),tag(verb),tokens([see])])],34/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[34/3],0,0)])]).
phrase('Y Ullrich',[mod([lexmatch([y]),inputmatch(['Y']),tag(noun),tokens([y])]),head([lexmatch([ullrich]),inputmatch(['Ullrich']),tag(noun),tokens([ullrich])])],38/9,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"HT  Add dyazide 1 qd to program",0/31,[]).
phrase('HT',[head([lexmatch([ht]),inputmatch(['HT']),tag(noun),tokens([ht])])],0/2,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0018510','HT','Haiti',[ht],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LCH','LNC','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[0/2],0,0)])]).
phrase('Add',[verb([lexmatch([add]),inputmatch(['Add']),tag(verb),tokens([add])])],4/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1883712','Add','Add - instruction imperative',[add],[ftcn],[[[1,1],[1,1],0]],yes,no,['HL7V3.0','MTH','NCI'],[4/3],0,0)])]).
phrase('dyazide 1 qd',[mod([lexmatch([dyazide]),inputmatch([dyazide]),tag(noun),tokens([dyazide])]),shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([qd]),inputmatch([qd]),tag(noun),tokens([qd])])],8/12,[]).
candidates(2,0,0,2,[]).
mappings([map(-802,[ev(-660,'C0058829','Dyazide','Dyazide',[dyazide],[orch,phsu],[[[1,1],[1,1],0]],no,no,['CHV','MSH','RXNORM'],[8/7],0,0),ev(-827,'C0332173','QD','Daily',[qd],[tmco],[[[3,3],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[18/2],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],21/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[21/2],0,0)])]).
phrase(program,[verb([lexmatch([program]),inputmatch([program]),tag(verb),tokens([program])])],24/7,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C2728259','Program','Program',[program],[phsu],[[[1,1],[1,1],0]],yes,no,['MTH','RXNORM'],[24/7],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Hyperlipidemia - consider doubling Lipitor - as per Yosef Ullrich",0/65,[]).
phrase('Hyperlipidemia -',[head([lexmatch([hyperlipidemia]),inputmatch(['Hyperlipidemia']),tag(noun),tokens([hyperlipidemia])]),punc([inputmatch([-]),tokens([])])],0/16,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0020473','HYPERLIPIDEMIA','Hyperlipidemia',[hyperlipidemia],[dsyn],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','ICD10CM','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NDFRT','OMIM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[0/14],0,0)])]).
phrase(consider,[verb([lexmatch([consider]),inputmatch([consider]),tag(verb),tokens([consider])])],17/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0750591',consider,consider,[consider],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV'],[17/8],0,0)])]).
phrase('doubling Lipitor -',[mod([lexmatch([doubling]),inputmatch([doubling]),tag(adj),tokens([doubling])]),head([lexmatch([lipitor]),inputmatch(['Lipitor']),tag(noun),tokens([lipitor])]),punc([inputmatch([-]),tokens([])])],26/18,[]).
candidates(4,1,0,3,[]).
mappings([map(-888,[ev(-694,'C1705764','Doubling','Doubling',[doubling],[acty],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[26/8],0,0),ev(-861,'C0593906','Lipitor','Lipitor',[lipitor],[orch,phsu],[[[2,2],[1,1],0]],yes,no,['CHV','CSP','MSH','NCI','NCI_NCI-GLOSS','PDQ','RXNORM'],[35/7],0,0)])]).
phrase('as per Yosef Ullrich',[prep([lexmatch([as]),inputmatch([as]),tag(prep),tokens([as])]),prep([lexmatch([per]),inputmatch([per]),tag(prep),tokens([per])]),mod([inputmatch(['Yosef']),tag(noun),tokens([yosef])]),mod([lexmatch([ullrich]),inputmatch(['Ullrich']),tag(noun),tokens([ullrich])])],45/20,[]).
candidates(1,0,0,1,[]).
mappings([map(-770,[ev(-770,'C0004340','AS','Australia',[as],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','HL7V3.0','LCH','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[45/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Forty minutes spent with patient in counsselling and coordinating care.",1/71,[]).
phrase('Forty minutes',[mod([lexmatch([forty]),inputmatch(['Forty']),tag(noun),tokens([forty])]),head([lexmatch([minutes]),inputmatch([minutes]),tag(noun),tokens([minutes])])],1/13,[]).
candidates(6,0,0,6,[]).
mappings([map(-888,[ev(-694,'C3816449','Forty','Forty',[forty],[qnco],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[1/5],0,0),ev(-861,'C0702093','/minute','Per Minute',[minute],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_CDISC','NCI_UCUM','SNOMEDCT_US'],[7/7],0,0)])]).
phrase('spent with patient',[verb([lexmatch([spent]),inputmatch([spent]),tag(verb),tokens([spent])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([patient]),inputmatch([patient]),tag(noun),tokens([patient])])],15/18,[]).
candidates(5,0,0,5,[]).
mappings([map(-730,[ev(-756,'C0680968',spend,spending,[spend],[qnco],[[[1,1],[1,1],1]],yes,no,['AOD','CHV'],[15/5],0,0),ev(-790,'C0030705','*^patient','Patients',[patient],[podg],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_DICOM','NCI_FDA','SNOMEDCT_US'],[26/7],0,0)])]).
phrase('in counsselling',[prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),head([inputmatch([counsselling]),tag(noun),tokens([counsselling])])],34/15,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],50/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('coordinating care.',[mod([lexmatch([coordinating]),inputmatch([coordinating]),tag(adj),tokens([coordinating])]),head([lexmatch([care]),inputmatch([care]),tag(noun),tokens([care])]),punc([inputmatch(['.']),tokens([])])],54/18,[]).
candidates(4,1,0,3,[]).
mappings([map(-888,[ev(-694,'C0427184',coordinating,'No incoordination',[coordinating],[fndg],[[[1,1],[1,1],0]],no,no,['CHV','MTH','SNOMEDCT_US'],[54/12],0,0),ev(-861,'C1947933','Care','care activity',[care],[acty],[[[2,2],[1,1],0]],yes,no,['MTH','NCI'],[67/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"______________________________",0/30,[]).
phrase('______________________________',[punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])]),punc([inputmatch(['_']),tokens([])])],0/30,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Ulysses Gilbert",0/15,[]).
phrase('Ulysses Gilbert',[mod([lexmatch([ulysses]),inputmatch(['Ulysses']),tag(noun),tokens([ulysses])]),head([lexmatch([gilbert]),inputmatch(['Gilbert']),tag(noun),tokens([gilbert])])],0/15,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C1551090','Gilbert','Units Of Measure - Gilbert',[gilbert],[qnco],[[[2,2],[1,1],0]],yes,no,['HL7V3.0','MTH','NCI','NCI_NCI-HL7'],[8/7],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-02.xml outputs/221-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-02.xml',outfile-'outputs/221-02-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"]]></TEXT>   <TAGS></TAGS> </root>",0/34,[]).
phrase(']',[punc([inputmatch([']']),tokens([])])],0/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(']',[punc([inputmatch([']']),tokens([])])],1/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(>,[punc([inputmatch([>]),tokens([])])],2/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</TEXT',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([text]),inputmatch(['TEXT']),tag(noun),tokens([text])])],3/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1705606','Text','Text Line',[text],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[5/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],9/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<TAGS',[punc([inputmatch([<]),tokens([])]),head([lexmatch([tags]),inputmatch(['TAGS']),tag(noun),tokens([tags])])],13/5,[]).
candidates(4,3,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1139855',tags,'Tags (device)',[tags],[medd],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[14/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],18/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</TAGS',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([tags]),inputmatch(['TAGS']),tag(noun),tokens([tags])])],19/6,[]).
candidates(4,3,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1139855',tags,'Tags (device)',[tags],[medd],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[21/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],25/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</root',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([root]),inputmatch([root]),tag(noun),tokens([root])])],27/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1318154','Root','Root body part',[root],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH'],[29/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],33/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
