args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"<?xml version=""1.0"" encoding=""UTF-8""?> <root>   <TEXT><![CDATA[",0/63,[]).
phrase('<?xml version',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([?]),tokens([])]),mod([lexmatch([xml]),inputmatch([xml]),tag(noun),tokens([xml])]),head([lexmatch([version]),inputmatch([version]),tag(noun),tokens([version])])],0/13,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C1707981','XML','Extensible Markup Language',[xml],[inpr],[[[1,1],[1,1],0]],no,no,['HL7V3.0','NCI'],[2/3],0,0),ev(-861,'C0333052','Version','Version',[version],[ftcn],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','MTHICD9','NCI','NCI_CDISC'],[6/7],0,0)])]).
phrase('="1.0"',[punc([inputmatch([=]),tokens([])]),punc([inputmatch(['"']),tokens([])]),shapes([inputmatch(['1','.','0']),features([real_number]),tokens(['1','0'])]),punc([inputmatch(['"']),tokens([])])],13/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-861,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[15/1],0,0),ev(-861,'C3842591','0%','0%',['0'],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC'],[17/1],0,0)])]).
phrase(encoding,[verb([lexmatch([encoding]),inputmatch([encoding]),tag(verb),tokens([encoding])])],20/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1547699','Encoding','MIME encoding',[encoding],[idcn],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH'],[20/8],0,0)])]).
phrase('="UTF-8"?',[punc([inputmatch([=]),tokens([])]),punc([inputmatch(['"']),tokens([])]),mod([lexmatch([utf]),inputmatch(['UTF']),tag(noun),tokens([utf])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['8']),features([integer]),tokens(['8'])]),punc([inputmatch(['"']),tokens([])]),punc([inputmatch([?]),tokens([])])],28/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1555005','UTF-8','UTF-8',[utf,'8'],[inpr],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['HL7V3.0'],[30/5],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],37/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<root',[punc([inputmatch([<]),tokens([])]),head([lexmatch([root]),inputmatch([root]),tag(noun),tokens([root])])],39/5,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1318154','Root','Root body part',[root],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH'],[40/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],44/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<TEXT',[punc([inputmatch([<]),tokens([])]),head([lexmatch([text]),inputmatch(['TEXT']),tag(noun),tokens([text])])],48/5,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1705606','Text','Text Line',[text],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[49/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],53/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<!',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([!]),tokens([])])],54/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('[CDATA',[punc([inputmatch(['[']),tokens([])]),head([inputmatch(['CDATA']),tag(noun),tokens([cdata])])],56/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0640049','CDATA','3-chloro-4-dimethylaminothioangelicin',[cdata],[orch],[[[1,1],[1,1],0]],yes,no,['MSH'],[57/5],0,0)])]).
phrase('[',[punc([inputmatch(['[']),tokens([])])],62/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Record Date: 2070-12-01",0/23,[]).
phrase('Record Date',[mod([lexmatch([record]),inputmatch(['Record']),tag(noun),tokens([record])]),head([lexmatch([date]),inputmatch(['Date']),tag(noun),tokens([date])])],0/11,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-694,'C0034869','Record','Records',[record],[inpr],[[[1,1],[1,1],0]],no,no,['CHV','HL7V3.0','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA'],[0/6],0,0),ev(-861,'C0011008','DATE','Date in time',[date],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MSH','MTH','NCI','NCI_CareLex','NCI_NICHD','SNOMEDCT_US'],[7/4],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],11/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('2070-12-01',[shapes([inputmatch(['2070']),features([integer]),tokens(['2070'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['12']),features([integer]),tokens(['12'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['01']),features([integer]),tokens(['01'])])],13/10,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Narrative History",0/17,[]).
phrase('Narrative History',[mod([lexmatch([narrative]),inputmatch(['Narrative']),tag(adj),tokens([narrative])]),head([lexmatch([history]),inputmatch(['History']),tag(noun),tokens([history])])],0/17,[]).
candidates(9,2,0,7,[]).
mappings([map(-888,[ev(-694,'C1135957','Narrative','Narration',[narrative],[socb],[[[1,1],[1,1],0]],no,no,['CHV','MSH','MTH','NCI'],[0/9],0,0),ev(-861,'C2004062','History','History of previous events',[history],[fndg],[[[2,2],[1,1],0]],yes,no,['CHV','LCH','MTH','NCI'],[10/7],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Patient  presents for an annual exam.",1/37,[]).
phrase('Patient',[head([lexmatch([patient]),inputmatch(['Patient']),tag(noun),tokens([patient])])],1/7,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C0030705','*^patient','Patients',[patient],[podg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_DICOM','NCI_FDA','SNOMEDCT_US'],[1/7],0,0)])]).
phrase('presents for an annual exam.',[verb([lexmatch([presents]),inputmatch([presents]),tag(verb),tokens([presents])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),det([lexmatch([an]),inputmatch([an]),tag(det),tokens([an])]),mod([lexmatch([annual]),inputmatch([annual]),tag(adj),tokens([annual])]),mod([lexmatch([exam]),inputmatch([exam]),tag(noun),tokens([exam])]),punc([inputmatch(['.']),tokens([])])],10/28,[]).
candidates(4,0,0,4,[]).
mappings([map(-696,[ev(-760,'C0150312','Present','Present',[present],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[10/8],0,0),ev(-760,'C0332181','Annual','Annual',[annual],[tmco],[[[4,4],[1,1],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[26/6],0,0),ev(-760,'C0582103','Exam','Medical Examination',[exam],[hlca],[[[5,5],[1,1],0]],yes,no,['CHV','CSP','LCH','MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[33/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Seen few weeks ago for hair breaking.",0/37,[]).
phrase('Seen',[verb([lexmatch([seen]),inputmatch(['Seen']),tag(verb),tokens([seen])])],0/4,[]).
candidates(3,2,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0205397','Seen',seen,[seen],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','SNMI','SNOMEDCT_US'],[0/4],0,0)])]).
phrase('few weeks ago for hair breaking.',[mod([lexmatch([few]),inputmatch([few]),tag(adj),tokens([few])]),head([lexmatch([weeks]),inputmatch([weeks]),tag(noun),tokens([weeks])]),adv([lexmatch([ago]),inputmatch([ago]),tag(adv),tokens([ago])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([hair]),inputmatch([hair]),tag(noun),tokens([hair])]),mod([lexmatch([breaking]),inputmatch([breaking]),tag(noun),tokens([breaking])]),punc([inputmatch(['.']),tokens([])])],5/32,[]).
candidates(14,8,0,6,[]).
mappings([map(-719,[ev(-586,'C0205388','Few','Few',[few],[qnco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','NCI','SNMI','SNOMEDCT_US'],[5/3],0,0),ev(-753,'C0439230','WEEKS',week,[weeks],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_UCUM','SNOMEDCT_US'],[9/5],0,0),ev(-623,'C0239792','HAIR BREAKING','hair breaking',[hair,breaking],[fndg],[[[5,5],[1,1],0],[[6,6],[2,2],0]],no,no,['CHV','DXP'],[23/13],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"GYN - thinks about 2 years since last period. ",0/46,[]).
phrase('GYN -',[head([lexmatch([gyn]),inputmatch(['GYN']),tag(noun),tokens([gyn])]),punc([inputmatch([-]),tokens([])])],0/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0018417','GYN','Gynecology',[gyn],[bmod],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[0/3],0,0)])]).
phrase('thinks about 2 years since last period.',[verb([lexmatch([thinks]),inputmatch([thinks]),tag(verb),tokens([thinks])]),prep([lexmatch([about]),inputmatch([about]),tag(prep),tokens([about])]),shapes([inputmatch(['2']),features([integer]),tokens(['2'])]),mod([lexmatch([years]),inputmatch([years]),tag(noun),tokens([years])]),adv([lexmatch([since]),inputmatch([since]),tag(adv),tokens([since])]),mod([lexmatch([last]),inputmatch([last]),tag(adj),tokens([last])]),mod([lexmatch([period]),inputmatch([period]),tag(noun),tokens([period])]),punc([inputmatch(['.']),tokens([])])],6/39,[]).
candidates(8,4,0,4,[]).
mappings([map(-652,[ev(-748,'C0039869',think,'Thinking, function',[think],[menp],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','ICF','ICF-CY','MSH','MTH','NCI','SNM','SNOMEDCT_US'],[6/6],0,0),ev(-748,'C0439234','YEARS',year,[years],[tmco],[[[4,4],[1,1],0]],yes,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[21/5],0,0),ev(-748,'C1948053','Period','Period (temporal qualifier)',[period],[tmco],[[[7,7],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNOMEDCT_US'],[38/6],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Having some tolerable hot flashes.  ",46/36,[]).
phrase('Having',[aux([lexmatch([having]),inputmatch(['Having']),tag(aux),tokens([having])])],46/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('some tolerable hot flashes.',[det([lexmatch([some]),inputmatch([some]),tag(det),tokens([some])]),mod([lexmatch([tolerable]),inputmatch([tolerable]),tag(adj),tokens([tolerable])]),head([lexmatch(['hot flashes']),inputmatch([hot,flashes]),tag(noun),tokens([hot,flashes])]),punc([inputmatch(['.']),tokens([])])],53/27,[]).
candidates(8,1,0,7,[]).
mappings([map(-865,[ev(-589,'C3274448','TOLERABILITY','Tolerability Study',[tolerability],[resa],[[[1,1],[1,1],3]],no,no,['NCI','NCI_CDISC'],[58/9],0,0),ev(-901,'C0600142','HOT FLASHES','Hot flushes',[hot,flashes],[sosy],[[[2,3],[1,2],0]],yes,no,['CHV','COSTAR','CSP','CST','MEDLINEPLUS','MSH','MTH','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','PDQ','SNM','SNMI','SNOMEDCT_US'],[68/11],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Last saw Dr Foust of gyn in 4/66, Pap smear done then. ",82/55,[]).
phrase('Last saw Dr Foust of gyn',[mod([lexmatch([last]),inputmatch(['Last']),tag(adj),tokens([last])]),mod([lexmatch([saw]),inputmatch([saw]),tag(noun),tokens([saw])]),mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),head([inputmatch(['Foust']),tag(noun),tokens([foust])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([gyn]),inputmatch([gyn]),tag(noun),tokens([gyn])])],82/24,[]).
candidates(9,0,0,9,[]).
mappings([map(-530,[ev(-586,'C1517741','Last','Last',[last],[qlco],[[[1,1],[1,1],0]],no,no,['NCI'],[82/4],0,0),ev(-586,'C0183089','SAW','saw (device)',[saw],[medd],[[[2,2],[1,1],0]],no,no,['CHV','MTH','SNOMEDCT_US','SPN'],[87/3],0,0),ev(-586,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[3,3],[1,1],0]],no,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[91/2],0,0),ev(-586,'C0018417','GYN','Gynecology',[gyn],[bmod],[[[6,6],[1,1],0]],no,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[103/3],0,0)])]).
phrase('in 4/66,',[prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),shapes([inputmatch(['4',/,'66']),features([fraction]),tokens(['4','66'])]),punc([inputmatch([',']),tokens([])])],107/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C3838679','4+','4+ Answer to question',['4'],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[110/1],0,0)])]).
phrase('Pap smear',[head([lexmatch(['pap smear']),inputmatch(['Pap',smear]),tag(noun),tokens([pap,smear])])],116/9,[]).
candidates(7,0,0,7,[]).
mappings([map(-1000,[ev(-1000,'C0079104','PAP Smear','Pap smear',[pap,smear],[diap],[[[1,2],[1,2],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','PDQ','SNOMEDCT_US'],[116/9],0,0)])]).
phrase(done,[aux([lexmatch([done]),inputmatch([done]),tag(aux),tokens([done])])],126/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('then.',[adv([lexmatch([then]),inputmatch([then]),tag(adv),tokens([then])]),punc([inputmatch(['.']),tokens([])])],131/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1883708','Then','Then',[then],[tmco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[131/4],0,0)])]).
'EOU'.
utterance('00000000.tx.4',"Diff exam secondary to way uterus tipped.",137/41,[]).
phrase('Diff exam',[mod([lexmatch([diff]),inputmatch(['Diff']),tag(noun),tokens([diff])]),head([lexmatch([exam]),inputmatch([exam]),tag(noun),tokens([exam])])],137/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C0582103','Exam','Medical Examination',[exam],[hlca],[[[2,2],[1,1],0]],yes,no,['CHV','CSP','LCH','MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[142/4],0,0)])]).
phrase('secondary to way uterus tipped.',[head([lexmatch([secondary]),inputmatch([secondary]),tag(adj),tokens([secondary])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),mod([lexmatch([way]),inputmatch([way]),tag(noun),tokens([way])]),mod([lexmatch([uterus]),inputmatch([uterus]),tag(noun),tokens([uterus])]),mod([lexmatch([tipped]),inputmatch([tipped]),tag(noun),tokens([tipped])]),punc([inputmatch(['.']),tokens([])])],147/31,[]).
candidates(9,0,0,9,[]).
mappings([map(-743,[ev(-806,'C0175668','Secondary to','Secondary to',[secondary,to],[tmco],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[147/12],0,0),ev(-593,'C0042149','UTERUS','Uterus',[uterus],[bpoc],[[[4,4],[1,1],0]],no,no,['AOD','CHV','CSP','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US','UWDA'],[164/6],0,0),ev(-560,'C1710425','Tip','Tip Device Component',[tip],[medd],[[[5,5],[1,1],1]],no,no,['MTH','NCI','NCI_FDA'],[171/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Exercise - Started walking at work again daily 1 mile. also watching diet now.",0/78,[]).
phrase('Exercise - Started walking at work again daily 1 mile.',[mod([lexmatch([exercise]),inputmatch(['Exercise']),tag(noun),tokens([exercise])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([started]),inputmatch(['Started']),tag(adj),tokens([started])]),head([lexmatch([walking]),inputmatch([walking]),tag(noun),tokens([walking])]),prep([lexmatch([at]),inputmatch([at]),tag(prep),tokens([at])]),mod([lexmatch([work]),inputmatch([work]),tag(noun),tokens([work])]),adv([lexmatch([again]),inputmatch([again]),tag(adv),tokens([again])]),adv([lexmatch([daily]),inputmatch([daily]),tag(adv),tokens([daily])]),shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),mod([lexmatch([mile]),inputmatch([mile]),tag(noun),tokens([mile])]),punc([inputmatch(['.']),tokens([])])],0/54,[]).
candidates(10,1,0,9,[]).
mappings([map(-664,[ev(-575,'C1522704','Exercise','Exercise Pain Management',[exercise],[topp],[[[1,1],[1,1],0]],no,no,['MTH','NCI','NLMSubSyn'],[0/8],0,0),ev(-575,'C1272689','Started','Started',[started],[qlco],[[[2,2],[1,1],0]],no,no,['CHV','MTH','SNOMEDCT_US'],[11/7],0,0),ev(-742,'C0080331','Walking','Walking (activity)',[walking],[dora],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','CSP','ICF','ICF-CY','LCH_NW','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[19/7],0,0),ev(-575,'C0043227','Work','Work',[work],[ocac],[[[5,5],[1,1],0]],no,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[30/4],0,0),ev(-575,'C0332173','Daily','Daily',[daily],[tmco],[[[7,7],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[41/5],0,0),ev(-575,'C2347127',mile,'British Mile',[mile],[qnco],[[[9,9],[1,1],0]],no,no,['HL7V3.0','MTH','NCI','NCI_NCI-HL7'],[49/4],0,0)])]).
phrase(also,[adv([lexmatch([also]),inputmatch([also]),tag(adv),tokens([also])])],55/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(watching,[verb([lexmatch([watching]),inputmatch([watching]),tag(verb),tokens([watching])])],60/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C2371283','Watching','Watching',[watching],[menp],[[[1,1],[1,1],0]],yes,no,['ICF','ICF-CY'],[60/8],0,0)])]).
phrase('diet now.',[head([lexmatch([diet]),inputmatch([diet]),tag(noun),tokens([diet])]),adv([lexmatch([now]),inputmatch([now]),tag(adv),tokens([now])]),punc([inputmatch(['.']),tokens([])])],69/9,[]).
candidates(9,2,0,7,[]).
mappings([map(-888,[ev(-861,'C0012155','Diet','Diet',[diet],[food],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US'],[69/4],0,0),ev(-694,'C1948052','Now','Now (temporal qualifier)',[now],[tmco],[[[2,2],[1,1],0]],no,no,['MTH','NCI'],[74/3],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Problems",0/8,[]).
phrase('Problems',[head([lexmatch([problems]),inputmatch(['Problems']),tag(noun),tokens([problems])])],0/8,[]).
candidates(3,2,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1546466','Problems','Problems - What subject filter',[problems],[idcn],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH'],[0/8],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"FH breast cancer : 37 yo s -died 41",0/35,[]).
phrase('FH breast cancer',[mod([lexmatch([fh]),inputmatch(['FH']),tag(noun),tokens([fh])]),head([lexmatch(['breast cancer']),inputmatch([breast,cancer]),tag(noun),tokens([breast,cancer])])],0/16,[]).
candidates(14,7,0,7,[]).
mappings([map(-901,[ev(-901,'C0006142','-- Breast Cancer','Malignant neoplasm of breast',[breast,cancer],[neop],[[[2,3],[1,2],0]],yes,no,['AOD','CCS','CHV','CSP','ICD10CM','ICPC','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NLMSubSyn','OMIM','PDQ','SNOMEDCT_US'],[3/13],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],17/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('37 yo',[shapes([inputmatch(['37']),features([integer]),tokens(['37'])]),head([lexmatch([yo]),inputmatch([yo]),tag(noun),tokens([yo])])],19/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C1413296','Yo','CDR2 gene',[yo],[gngm],[[[2,2],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[22/2],0,0)])]).
phrase('s -',[aux([lexmatch([s]),inputmatch([s,-]),tag(aux),tokens([s])])],25/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(died,[verb([lexmatch([died]),inputmatch([died]),tag(verb),tokens([died])])],28/4,[]).
candidates(8,5,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0011065','Died','Cessation of life',[died],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','GO','ICPC','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','SNOMEDCT_US'],[28/4],0,0)])]).
phrase('41',[shapes([inputmatch(['41']),features([integer]),tokens(['41'])])],33/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"FH myocardial infarction : mother died 66 yo",0/44,[]).
phrase('FH myocardial infarction',[mod([lexmatch([fh]),inputmatch(['FH']),tag(noun),tokens([fh])]),head([lexmatch(['myocardial infarction']),inputmatch([myocardial,infarction]),tag(noun),tokens([myocardial,infarction])])],0/24,[]).
candidates(8,1,0,7,[]).
mappings([map(-901,[ev(-901,'C2926063','Myocardial infarction','Myocardial infarction:Finding:Point in time:^Patient:Ordinal',[myocardial,infarction],[clna],[[[2,3],[1,2],0]],yes,no,['LNC','MTH','NLMSubSyn'],[3/21],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],25/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(mother,[head([lexmatch([mother]),inputmatch([mother]),tag(noun),tokens([mother])])],27/6,[]).
candidates(3,2,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0026591','Mother','Mother (person)',[mother],[famg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[27/6],0,0)])]).
phrase(died,[verb([lexmatch([died]),inputmatch([died]),tag(verb),tokens([died])])],34/4,[]).
candidates(8,5,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1546956','Died','Patient Outcome - Died',[died],[fndg],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH','NLMSubSyn','SNOMEDCT_US'],[34/4],0,0)])]).
phrase('66 yo',[shapes([inputmatch(['66']),features([integer]),tokens(['66'])]),head([lexmatch([yo]),inputmatch([yo]),tag(noun),tokens([yo])])],39/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C1413296','Yo','CDR2 gene',[yo],[gngm],[[[2,2],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[42/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Hypertension -excellent today - check chem 7, meds renewed",0/58,[]).
phrase('Hypertension -excellent today - check chem 7,',[mod([lexmatch([hypertension]),inputmatch(['Hypertension']),tag(noun),tokens([hypertension])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([excellent]),inputmatch([excellent]),tag(adj),tokens([excellent])]),mod([lexmatch([today]),inputmatch([today]),tag(noun),tokens([today])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([check]),inputmatch([check]),tag(noun),tokens([check])]),head([lexmatch(['chem 7']),inputmatch([chem,'7']),tag(noun),tokens([chem,'7'])]),punc([inputmatch([',']),tokens([])])],0/45,[]).
candidates(10,0,0,10,[]).
mappings([map(-827,[ev(-632,'C1963138','Hypertension','Hypertension Adverse Event',[hypertension],[fndg],[[[1,1],[1,1],0]],no,no,['MTH','NCI','NCI_CTCAE'],[0/12],0,0),ev(-632,'C1548784','Excellent','Excellent - Specimen Quality',[excellent],[qlco],[[[2,2],[1,1],0]],no,no,['HL7V2.5','MTH'],[14/9],0,0),ev(-632,'C0310367','Today','Today',[today],[antb,orch],[[[3,3],[1,1],0]],no,no,['CHV','MTH','RXNORM'],[24/5],0,0),ev(-632,'C1283174','Check','Checking (action)',[check],[acty],[[[4,4],[1,1],0]],no,no,['LNC','MTH','NCI','SNOMEDCT_US'],[32/5],0,0),ev(-827,'C2237045','Chem 7','Basic Metabolic Panel Blood Test',[chem,'7'],[lbpr],[[[5,6],[1,2],0]],yes,no,['CHV','LNC','MTH'],[38/6],0,0)])]).
phrase(meds,[head([lexmatch([meds]),inputmatch([meds]),tag(noun),tokens([meds])])],46/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3280240','MEDS','MICROCEPHALY, EPILEPSY, AND DIABETES SYNDROME',[meds],[dsyn],[[[1,1],[1,1],0]],yes,no,['OMIM'],[46/4],0,0)])]).
phrase(renewed,[verb([lexmatch([renewed]),inputmatch([renewed]),tag(verb),tokens([renewed])])],51/7,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Uterine fibroids : u/s 2062 - to follow-up with gyn. ",0/53,[]).
phrase('Uterine fibroids',[head([lexmatch(['uterine fibroids']),inputmatch(['Uterine',fibroids]),tag(noun),tokens([uterine,fibroids])])],0/16,[]).
candidates(5,1,0,4,[]).
mappings([map(-1000,[ev(-1000,'C0042133','Uterine Fibroids','Uterine Fibroids',[uterine,fibroids],[neop],[[[1,2],[1,2],0]],yes,no,['CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','LCH_NW','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','OMIM','PDQ','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[0/16],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],17/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('u/s 2062 - to follow-up with gyn.',[mod([lexmatch(['u/s']),inputmatch([u,/,s]),tag(noun),tokens([u,s])]),shapes([inputmatch(['2062']),features([integer]),tokens(['2062'])]),punc([inputmatch([-]),tokens([])]),adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])]),head([lexmatch(['follow-up']),inputmatch([follow,-,up]),tag(adj),tokens([follow,up])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([gyn]),inputmatch([gyn]),tag(noun),tokens([gyn])]),punc([inputmatch(['.']),tokens([])])],19/33,[]).
candidates(9,0,0,9,[]).
mappings([map(-699,[ev(-604,'C0041703','U S','United States',[u,s],[geoa],[[[1,1],[1,1],0],[[2,2],[2,2],0]],no,no,['AOD','CHV','CSP','HL7V3.0','LCH','LNC','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[19/1,20/1],0,0),ev(-770,'C1522577','Follow Up','follow-up',[follow,up],[hlca],[[[5,5],[1,1],0],[[6,6],[2,2],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS'],[33/9],0,0),ev(-578,'C0018417','GYN','Gynecology',[gyn],[bmod],[[[8,8],[1,1],0]],no,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[48/3],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Still seem unchanged",53/20,[]).
phrase('Still',[adv([lexmatch([still]),inputmatch(['Still']),tag(adv),tokens([still])])],53/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(seem,[verb([lexmatch([seem]),inputmatch([seem]),tag(verb),tokens([seem])])],59/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(unchanged,[head([lexmatch([unchanged]),inputmatch([unchanged]),tag(adj),tokens([unchanged])])],64/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C2346711','Unchanged','About The Same',[unchanged],[qlco],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[64/9],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Smoking : quit 2/67 s/p MI - still not smoking!",0/47,[]).
phrase('Smoking',[head([lexmatch([smoking]),inputmatch(['Smoking']),tag(noun),tokens([smoking])])],0/7,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0453996','Smoking','Tobacco smoking behavior',[smoking],[inbe],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','DXP','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[0/7],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],8/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('quit 2/67 s/p MI - still',[mod([lexmatch([quit]),inputmatch([quit]),tag(noun),tokens([quit])]),shapes([inputmatch(['2',/,'67']),features([fraction]),tokens(['2','67'])]),prep([lexmatch(['s/p']),inputmatch([s,/,p]),tag(prep),tokens([s,p])]),mod([lexmatch([mi]),inputmatch(['MI']),tag(noun),tokens([mi])]),punc([inputmatch([-]),tokens([])]),adv([lexmatch([still]),inputmatch([still]),tag(adv),tokens([still])])],10/24,[]).
candidates(4,0,0,4,[]).
mappings([map(-706,[ev(-748,'C0748223','QUIT','QUIT',[quit],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[10/4],0,0),ev(-774,'C1440961','Mi-2','Mi-2',[mi,'2'],[imft],[[[6,6],[1,1],0],[[2,2],[2,2],0]],yes,no,['LNC'],[15/1,24/2],0,0)])]).
phrase('not smoking!',[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])]),head([lexmatch([smoking]),inputmatch([smoking]),tag(noun),tokens([smoking])]),punc([inputmatch([!]),tokens([])])],35/12,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-694,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],no,no,['LNC','MTH','NCI'],[35/3],0,0),ev(-861,'C0453996','Smoking','Tobacco smoking behavior',[smoking],[inbe],[[[2,2],[1,1],0]],yes,no,['CHV','CSP','DXP','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[39/7],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"borderline diabetes mellitus : 4/63 125 , follow hgbaic - was 5.7 in 3/67, recheck glc and a1c today",0/100,[]).
phrase('borderline diabetes mellitus',[mod([lexmatch([borderline]),inputmatch([borderline]),tag(adj),tokens([borderline])]),head([lexmatch(['diabetes mellitus']),inputmatch([diabetes,mellitus]),tag(noun),tokens([diabetes,mellitus])])],0/28,[]).
candidates(7,1,0,6,[]).
mappings([map(-1000,[ev(-1000,'C0856873','Borderline Diabetes Mellitus','borderline diabetes',[borderline,diabetes,mellitus],[dsyn],[[[1,1],[1,1],0],[[2,3],[2,3],0]],yes,no,['CHV','NLMSubSyn'],[0/28],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],29/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('4/63 125 ,',[shapes([inputmatch(['4',/,'63']),features([fraction]),tokens(['4','63'])]),shapes([inputmatch(['125']),features([integer]),tokens(['125'])]),punc([inputmatch([',']),tokens([])])],31/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-827,[ev(-827,'C3838679','4+','4+ Answer to question',['4'],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[31/1],0,0)])]).
phrase(follow,[verb([lexmatch([follow]),inputmatch([follow]),tag(verb),tokens([follow])])],42/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1719822','Follow','Follow',[follow],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','SNOMEDCT_US'],[42/6],0,0)])]).
phrase('hgbaic -',[head([inputmatch([hgbaic]),tag(noun),tokens([hgbaic])]),punc([inputmatch([-]),tokens([])])],49/8,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(was,[aux([lexmatch([was]),inputmatch([was]),tag(aux),tokens([was])])],58/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('5.7 in 3/67,',[shapes([inputmatch(['5','.','7']),features([real_number]),tokens(['5','7'])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),shapes([inputmatch(['3',/,'67']),features([fraction]),tokens(['3','67'])]),punc([inputmatch([',']),tokens([])])],62/12,[]).
candidates(2,0,0,2,[]).
mappings([map(-760,[ev(-760,'C0439084','>5','>5',['5'],[qnco],[[[1,1],[1,1],0]],yes,no,['SNOMEDCT_US'],[62/1],0,0)])]).
phrase('recheck glc',[mod([lexmatch([recheck]),inputmatch([recheck]),tag(noun),tokens([recheck])]),head([lexmatch([glc]),inputmatch([glc]),tag(noun),tokens([glc])])],75/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C0008556','GLC','Chromatography, Gas-Liquid',[glc],[lbpr],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','HL7V3.0','MSH','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[83/3],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],87/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('a1c today',[mod([inputmatch([a1c]),tag(noun),tokens([a1c])]),head([lexmatch([today]),inputmatch([today]),tag(noun),tokens([today])])],91/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C0310367','Today','Today',[today],[antb,orch],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','RXNORM'],[95/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([negation(nega,denies,[80/6],['C1963093':'Dizziness'],[95/9])]).
utterance('00000000.tx.1',"VPB : 2065 - ETT showed freq PVC's, bigeminy and couplets, nondx for ischemia - denies palp or dizziness",0/104,[]).
phrase('VPB',[head([lexmatch([vpb]),inputmatch(['VPB']),tag(noun),tokens([vpb])])],0/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0151636','VPB','Premature ventricular contractions',[vpb],[patf],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LNC','MSH','MTH','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[0/3],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],4/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('2065 - ETT',[shapes([inputmatch(['2065']),features([integer]),tokens(['2065'])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([ett]),inputmatch(['ETT']),tag(noun),tokens([ett])])],6/10,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(showed,[verb([lexmatch([showed]),inputmatch([showed]),tag(verb),tokens([showed])])],17/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-966,[ev(-966,'C1547282','Show','Show',[show],[anim],[[[1,1],[1,1],1]],yes,no,['HL7V2.5','HL7V3.0'],[17/6],0,0)])]).
phrase('freq PVC\'s,',[mod([inputmatch([freq]),tag(noun),tokens([freq])]),head([lexmatch([pvc]),inputmatch(['PVC\'s']),tag(noun),tokens([pvc])]),punc([inputmatch([',']),tokens([])])],24/11,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-694,'C1414814','FREQ','NCS1 gene',[freq],[gngm],[[[1,1],[1,1],0]],no,no,['HGNC','MTH','OMIM'],[24/4],0,0),ev(-861,'C0151636','PVC\'S','Premature ventricular contractions',[pvc],[patf],[[[2,2],[1,1],0]],yes,no,['CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LNC','MSH','MTH','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[29/5],0,0)])]).
phrase(bigeminy,[head([lexmatch([bigeminy]),inputmatch([bigeminy]),tag(noun),tokens([bigeminy])])],36/8,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1963278','Bigeminy','Bigeminy Adverse Event',[bigeminy],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CTCAE'],[36/8],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],45/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('couplets,',[head([lexmatch([couplets]),inputmatch([couplets]),tag(noun),tokens([couplets])]),punc([inputmatch([',']),tokens([])])],49/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0429001','Couplets','Paired ventricular premature complexes',[couplets],[patf],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_CDISC','NLMSubSyn','OMIM','SNOMEDCT_US'],[49/8],0,0)])]).
phrase('nondx for ischemia -',[head([inputmatch([nondx]),tag(noun),tokens([nondx])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([ischemia]),inputmatch([ischemia]),tag(noun),tokens([ischemia])]),punc([inputmatch([-]),tokens([])])],59/20,[]).
candidates(2,1,0,1,[]).
mappings([map(-623,[ev(-623,'C0022116','ISCHEMIA','Ischemia',[ischemia],[patf],[[[3,3],[1,1],0]],no,no,['AOD','CHV','COSTAR','CSP','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US'],[69/8],0,0)])]).
phrase(denies,[verb([lexmatch([denies]),inputmatch([denies]),tag(verb),tokens([denies])])],80/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C2700401','Deny','Deny (action)',[deny],[acty],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[80/6],0,0)])]).
phrase(palp,[head([lexmatch([palp]),inputmatch([palp]),tag(noun),tokens([palp])])],87/4,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1412365','PALP','ALPP gene',[palp],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH','NCI','NLMSubSyn','OMIM'],[87/4],0,0)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],92/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(dizziness,[head([lexmatch([dizziness]),inputmatch([dizziness]),tag(noun),tokens([dizziness])])],95/9,[]).
candidates(6,3,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1963093','Dizziness','Dizziness Adverse Event',[dizziness],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CTCAE'],[95/9],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Coronary artery disease : s/p ant SEMI + stent LAD 2/67, Dr Oakley, ETT Clarkfield 3/67 - neg scan for ischemia. ",0/113,[]).
phrase('Coronary artery disease',[head([lexmatch(['coronary artery disease']),inputmatch(['Coronary',artery,disease]),tag(noun),tokens([coronary,artery,disease])])],0/23,[]).
candidates(16,4,0,12,[]).
mappings([map(-1000,[ev(-1000,'C1956346','CORONARY ARTERY DISEASE','Coronary Artery Disease',[coronary,artery,disease],[dsyn],[[[1,3],[1,3],0]],yes,no,['AOD','COSTAR','CSP','CST','DXP','HPO','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','OMIM','SNMI','SNOMEDCT_US'],[0/23],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],24/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s/p ant SEMI + stent LAD 2/67,',[prep([lexmatch(['s/p']),inputmatch([s,/,p]),tag(prep),tokens([s,p])]),mod([lexmatch([ant]),inputmatch([ant]),tag(noun),tokens([ant])]),mod([lexmatch([semi]),inputmatch(['SEMI']),tag(noun),tokens([semi])]),punc([inputmatch([+]),tokens([])]),mod([lexmatch([stent]),inputmatch([stent]),tag(noun),tokens([stent])]),mod([lexmatch([lad]),inputmatch(['LAD']),tag(noun),tokens([lad])]),shapes([inputmatch(['2',/,'67']),features([fraction]),tokens(['2','67'])]),punc([inputmatch([',']),tokens([])])],26/30,[]).
candidates(3,0,0,3,[]).
mappings([map(-728,[ev(-799,'C0003455','Ant','Ants',[ant],[euka],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','MSH','MTH','NCBI','SNM','SNMI','SNOMEDCT_US'],[30/3],0,0),ev(-799,'C0038257','Stent','Stent, device',[stent],[medd],[[[3,3],[1,1],0]],yes,no,['CHV','CSP','MSH','MTH','SNMI','SNOMEDCT_US'],[41/5],0,0)])]).
phrase('Dr Oakley,',[mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),head([lexmatch([oakley]),inputmatch(['Oakley']),tag(noun),tokens([oakley])]),punc([inputmatch([',']),tokens([])])],57/10,[]).
candidates(5,0,0,5,[]).
mappings([map(-694,[ev(-694,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[1,1],[1,1],0]],no,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[57/2],0,0)])]).
phrase('ETT Clarkfield 3/67 - neg scan for ischemia.',[mod([lexmatch([ett]),inputmatch(['ETT']),tag(noun),tokens([ett])]),mod([inputmatch(['Clarkfield']),tag(noun),tokens([clarkfield])]),shapes([inputmatch(['3',/,'67']),features([fraction]),tokens(['3','67'])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([neg]),inputmatch([neg]),tag(noun),tokens([neg])]),head([lexmatch([scan]),inputmatch([scan]),tag(noun),tokens([scan])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([ischemia]),inputmatch([ischemia]),tag(noun),tokens([ischemia])]),punc([inputmatch(['.']),tokens([])])],68/44,[]).
candidates(6,1,0,5,[]).
mappings([map(-645,[ev(-578,'C3853545','NEG','Negative - answer',[neg],[qlco],[[[5,5],[1,1],0]],no,no,['MTH','NCI'],[90/3],0,0),ev(-744,'C0441633','Scan','Scanning',[scan],[diap],[[[6,6],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNOMEDCT_US'],[94/4],0,0),ev(-578,'C0022116','ISCHEMIA','Ischemia',[ischemia],[patf],[[[8,8],[1,1],0]],no,no,['AOD','CHV','COSTAR','CSP','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US'],[103/8],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"No CP's, palp.  ",113/16,[]).
phrase('No CP\'s,',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([cp]),inputmatch(['CP\'s']),tag(noun),tokens([cp])]),punc([inputmatch([',']),tokens([])])],113/8,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('palp.',[head([lexmatch([palp]),inputmatch([palp]),tag(noun),tokens([palp])]),punc([inputmatch(['.']),tokens([])])],122/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1412365','PALP','ALPP gene',[palp],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH','NCI','NLMSubSyn','OMIM'],[122/4],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Saw Dr Oakley today.  ",129/22,[]).
phrase('Saw Dr Oakley today.',[mod([lexmatch([saw]),inputmatch(['Saw']),tag(noun),tokens([saw])]),mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),mod([lexmatch([oakley]),inputmatch(['Oakley']),tag(noun),tokens([oakley])]),head([lexmatch([today]),inputmatch([today]),tag(noun),tokens([today])]),punc([inputmatch(['.']),tokens([])])],129/20,[]).
candidates(8,0,0,8,[]).
mappings([map(-775,[ev(-645,'C0183089','SAW','saw (device)',[saw],[medd],[[[1,1],[1,1],0]],no,no,['CHV','MTH','SNOMEDCT_US','SPN'],[129/3],0,0),ev(-645,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[2,2],[1,1],0]],no,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[133/2],0,0),ev(-812,'C0310367','Today','Today',[today],[antb,orch],[[[4,4],[1,1],0]],yes,no,['CHV','MTH','RXNORM'],[143/5],0,0)])]).
'EOU'.
utterance('00000000.tx.4',"Off plavix for the last several months which was what Dr Oakley intended.  ",151/75,[]).
phrase('Off plavix for the last several months',[prep([lexmatch([off]),inputmatch(['Off']),tag(prep),tokens([off])]),head([lexmatch([plavix]),inputmatch([plavix]),tag(noun),tokens([plavix])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch([last]),inputmatch([last]),tag(adj),tokens([last])]),mod([lexmatch([several]),inputmatch([several]),tag(adj),tokens([several])]),mod([lexmatch([months]),inputmatch([months]),tag(noun),tokens([months])])],151/38,[]).
candidates(5,2,0,3,[]).
mappings([map(-656,[ev(-581,'C1518543','Off','Off',[off],[qlco],[[[1,1],[1,1],0]],no,no,['NCI','SNOMEDCT_US'],[151/3],0,0),ev(-748,'C0633084','Plavix','Plavix',[plavix],[orch,phsu],[[[2,2],[1,1],0]],yes,no,['CHV','MSH','NCI','PDQ','RXNORM'],[155/6],0,0),ev(-581,'C0439231','MONTHS',month,[months],[tmco],[[[7,7],[1,1],0]],no,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[183/6],0,0)])]).
phrase(which,[pron([lexmatch([which]),inputmatch([which]),tag(pron),tokens([which])])],190/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(was,[aux([lexmatch([was]),inputmatch([was]),tag(aux),tokens([was])])],196/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('what Dr Oakley',[pron([lexmatch([what]),inputmatch([what]),tag(pron),tokens([what])]),mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),head([lexmatch([oakley]),inputmatch(['Oakley']),tag(noun),tokens([oakley])])],200/14,[]).
candidates(5,0,0,5,[]).
mappings([map(-694,[ev(-694,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[1,1],[1,1],0]],no,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[205/2],0,0)])]).
phrase('intended.',[verb([lexmatch([intended]),inputmatch([intended]),tag(verb),tokens([intended])]),punc([inputmatch(['.']),tokens([])])],215/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1551357',intended,'intended - ParticipationSignature',[intended],[fndg],[[[1,1],[1,1],0]],yes,no,['HL7V3.0','MTH'],[215/8],0,0)])]).
'EOU'.
utterance('00000000.tx.5',"She was ""pleased"" with everything.",226/34,[]).
phrase('She',[pron([lexmatch([she]),inputmatch(['She']),tag(pron),tokens([she])])],226/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(was,[aux([lexmatch([was]),inputmatch([was]),tag(aux),tokens([was])])],230/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('"',[punc([inputmatch(['"']),tokens([])])],234/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(pleased,[verb([lexmatch([pleased]),inputmatch([pleased]),tag(verb),tokens([pleased])])],235/7,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('"',[punc([inputmatch(['"']),tokens([])])],242/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('with everything.',[prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),pron([lexmatch([everything]),inputmatch([everything]),tag(pron),tokens([everything])]),punc([inputmatch(['.']),tokens([])])],244/16,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"thyroid nodule : 2065, hot, follow TSH. ",0/40,[]).
phrase('thyroid nodule',[head([lexmatch(['thyroid nodule']),inputmatch([thyroid,nodule]),tag(noun),tokens([thyroid,nodule])])],0/14,[]).
candidates(16,11,0,5,[]).
mappings([map(-1000,[ev(-1000,'C0040137','THYROID NODULE','Thyroid Nodule',[thyroid,nodule],[neop],[[[1,2],[1,2],0]],yes,no,['CHV','COSTAR','DXP','MSH','MTH','MTHICD9','NCI','NDFRT','SNM','SNMI','SNOMEDCT_US'],[0/14],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],15/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('2065,',[shapes([inputmatch(['2065']),features([integer]),tokens(['2065'])]),punc([inputmatch([',']),tokens([])])],17/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('hot,',[head([lexmatch([hot]),inputmatch([hot]),tag(adj),tokens([hot])]),punc([inputmatch([',']),tokens([])])],23/4,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0444519','Hot','Hot sensation quality',[hot],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NLMSubSyn','SNOMEDCT_US'],[23/3],0,0)])]).
phrase(follow,[verb([lexmatch([follow]),inputmatch([follow]),tag(verb),tokens([follow])])],28/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1719822','Follow','Follow',[follow],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','SNOMEDCT_US'],[28/6],0,0)])]).
phrase('TSH.',[head([lexmatch([tsh]),inputmatch(['TSH']),tag(noun),tokens([tsh])]),punc([inputmatch(['.']),tokens([])])],35/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.2',"Will recheck today.  ",40/21,[]).
phrase('Will',[modal([lexmatch([will]),inputmatch(['Will']),tag(modal),tokens([will])])],40/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(recheck,[verb([lexmatch([recheck]),inputmatch([recheck]),tag(verb),tokens([recheck])])],45/7,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('today.',[head([lexmatch([today]),inputmatch([today]),tag(noun),tokens([today])]),punc([inputmatch(['.']),tokens([])])],53/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0310367','Today','Today',[today],[antb,orch],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','RXNORM'],[53/5],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Has appt with Dr Dolan in April to discuss treatment of the subclinical hyperthyroidism - I would favor this given history of CAD, mild VEA in past.",61/148,[]).
phrase('Has',[aux([lexmatch([has]),inputmatch(['Has']),tag(aux),tokens([has])])],61/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('appt with Dr Dolan',[head([lexmatch([appt]),inputmatch([appt]),tag(noun),tokens([appt])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),mod([inputmatch(['Dolan']),tag(noun),tokens([dolan])])],65/18,[]).
candidates(7,0,0,7,[]).
mappings([map(-708,[ev(-770,'C0245203','APPT','4-azido-7-phenylpyrazolo-(1,5a)-1,3,5-triazine',[appt],[bacs,orch],[[[1,1],[1,1],0]],yes,no,['MSH','MTH'],[65/4],0,0),ev(-604,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[3,3],[1,1],0]],no,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[75/2],0,0)])]).
phrase('in April',[prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),head([lexmatch([april]),inputmatch(['April']),tag(noun),tokens([april])])],84/8,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C3715025','APRIL','TNFSF13 wt Allele',[april],[gngm],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[87/5],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],93/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[93/2],0,0)])]).
phrase(discuss,[verb([lexmatch([discuss]),inputmatch([discuss]),tag(verb),tokens([discuss])])],96/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C2584313','Discuss','Discussion (communication)',[discuss],[socb],[[[1,1],[1,1],0]],yes,no,['ICF','ICF-CY','MTH','NCI'],[96/7],0,0)])]).
phrase('treatment of the subclinical hyperthyroidism - I',[head([lexmatch([treatment]),inputmatch([treatment]),tag(noun),tokens([treatment])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch([subclinical]),inputmatch([subclinical]),tag(adj),tokens([subclinical])]),mod([lexmatch([hyperthyroidism]),inputmatch([hyperthyroidism]),tag(noun),tokens([hyperthyroidism])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([i]),inputmatch(['I']),tag(noun),tokens([i])])],104/48,[]).
candidates(12,0,0,12,[]).
mappings([map(-725,[ev(-753,'C0087111','Treatment','Therapeutic procedure',[treatment],[topp],[[[1,1],[1,1],0]],yes,no,['AOD','AOT','CHV','CSP','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','MTHHH','MTHMST','NCI','NCI_NCI-GLOSS','NCI_NCI-HL7','NCI_NICHD','NLMSubSyn','SNMI','SNOMEDCT_US'],[104/9],0,0),ev(-623,'C1998045','Subclinical hyperthyroidism','Subclinical hyperthyroidism',[subclinical,hyperthyroidism],[dsyn],[[[4,4],[1,1],0],[[5,5],[2,2],0]],no,no,['SNOMEDCT_US'],[121/27],0,0),ev(-586,'C0021966','I-','Iodides',[i],[inch],[[[6,6],[1,1],0]],no,no,['AOD','CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CRCH','NDFRT','RXNORM','SNMI','SNOMEDCT_US'],[151/1],0,0)])]).
phrase(would,[modal([lexmatch([would]),inputmatch([would]),tag(modal),tokens([would])])],153/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(favor,[verb([lexmatch([favor]),inputmatch([favor]),tag(verb),tokens([favor])])],159/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0309049','FAVOR',favor,[favor],[orch,phsu,vita],[[[1,1],[1,1],0]],yes,no,['CHV','SNMI','SNOMEDCT_US'],[159/5],0,0)])]).
phrase('this given history of CAD,',[det([lexmatch([this]),inputmatch([this]),tag(det),tokens([this])]),mod([lexmatch([given]),inputmatch([given]),tag(adj),tokens([given])]),head([lexmatch([history]),inputmatch([history]),tag(noun),tokens([history])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([cad]),inputmatch(['CAD']),tag(noun),tokens([cad])]),punc([inputmatch([',']),tokens([])])],165/26,[]).
candidates(10,2,0,8,[]).
mappings([map(-687,[ev(-593,'C1080058','This','This (eukaryote)',[this],[euka],[[[1,1],[1,1],0]],no,no,['CHV','MTH','NCBI'],[165/4],0,0),ev(-760,'C2004062','History','History of previous events',[history],[fndg],[[[3,3],[1,1],0]],yes,no,['CHV','LCH','MTH','NCI'],[176/7],0,0),ev(-593,'C3813548','CAD','CALD1 wt Allele',[cad],[gngm],[[[5,5],[1,1],0]],no,no,['MTH','NCI'],[187/3],0,0)])]).
phrase('mild VEA in past.',[mod([lexmatch([mild]),inputmatch([mild]),tag(adj),tokens([mild])]),head([lexmatch([vea]),inputmatch(['VEA']),tag(noun),tokens([vea])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([past]),inputmatch([past]),tag(noun),tokens([past])]),punc([inputmatch(['.']),tokens([])])],192/17,[]).
candidates(2,0,0,2,[]).
mappings([map(-541,[ev(-604,'C2945599','MILD','Mild (qualifier value)',[mild],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[192/4],0,0),ev(-604,'C1444637','Past','Past',[past],[tmco],[[[4,4],[1,1],0]],no,no,['NCI','SNOMEDCT_US'],[204/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([negation(nega,not,[186/3],['C3844332':'Not sure'],[186/8])]).
utterance('00000000.tx.1',"Hyperlipidemia : CRF mild chol, cigs, HTN, Fhx and known hx CAD in pt. ",0/71,[]).
phrase('Hyperlipidemia',[head([lexmatch([hyperlipidemia]),inputmatch(['Hyperlipidemia']),tag(noun),tokens([hyperlipidemia])])],0/14,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0020473','HYPERLIPIDEMIA','Hyperlipidemia',[hyperlipidemia],[dsyn],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','ICD10CM','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NDFRT','OMIM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[0/14],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],15/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('CRF mild chol,',[mod([lexmatch([crf]),inputmatch(['CRF']),tag(noun),tokens([crf])]),mod([lexmatch([mild]),inputmatch([mild]),tag(adj),tokens([mild])]),head([lexmatch([chol]),inputmatch([chol]),tag(noun),tokens([chol])]),punc([inputmatch([',']),tokens([])])],17/14,[]).
candidates(2,0,0,2,[]).
mappings([map(-790,[ev(-660,'C2945599','MILD','Mild (qualifier value)',[mild],[qlco],[[[2,2],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[21/4],0,0),ev(-827,'C0201950','CHOL','Cholesterol measurement test',[chol],[lbpr],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[26/4],0,0)])]).
phrase('cigs,',[head([lexmatch([cigs]),inputmatch([cigs]),tag(noun),tokens([cigs])]),punc([inputmatch([',']),tokens([])])],32/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('HTN,',[head([lexmatch([htn]),inputmatch(['HTN']),tag(noun),tokens([htn])]),punc([inputmatch([',']),tokens([])])],38/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0020538','HTN','Hypertensive disease',[htn],[dsyn],[[[1,1],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[38/3],0,0)])]).
phrase('Fhx',[head([lexmatch([fhx]),inputmatch(['Fhx']),tag(noun),tokens([fhx])])],43/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1428412','FHX','FOXJ2 gene',[fhx],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH'],[43/3],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],47/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('known hx CAD in pt.',[mod([lexmatch([known]),inputmatch([known]),tag(adj),tokens([known])]),mod([lexmatch([hx]),inputmatch([hx]),tag(noun),tokens([hx])]),head([lexmatch([cad]),inputmatch(['CAD']),tag(noun),tokens([cad])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([pt]),inputmatch([pt]),tag(noun),tokens([pt])]),punc([inputmatch(['.']),tokens([])])],51/19,[]).
candidates(7,0,0,7,[]).
mappings([map(-761,[ev(-797,'C3275096','KNOWN CAD','Known Coronary Artery Disease',[known,cad],[qnco],[[[1,1],[1,1],0],[[3,3],[2,2],0]],yes,no,['NCI','NCI_CDISC','NLMSubSyn'],[51/5,60/3],0,0),ev(-593,'C0262926','Hx','Medical History',[hx],[fndg],[[[2,2],[1,1],0]],no,no,['AIR','AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','NCI_NICHD','NLMSubSyn','SNOMEDCT_US'],[57/2],0,0),ev(-593,'C0699718','PT','Physical therapy (field)',[pt],[bmod],[[[5,5],[1,1],0]],no,no,['CHV','LNC','MTH','NLMSubSyn'],[67/2],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Check lfts and cholesterol today. ",71/34,[]).
phrase('Check lfts',[mod([lexmatch([check]),inputmatch(['Check']),tag(noun),tokens([check])]),head([lexmatch([lfts]),inputmatch([lfts]),tag(noun),tokens([lfts])])],71/10,[]).
candidates(3,0,0,3,[]).
mappings([map(-872,[ev(-694,'C1283174','Check','Checking (action)',[check],[acty],[[[1,1],[1,1],0]],no,no,['LNC','MTH','NCI','SNOMEDCT_US'],[71/5],0,0),ev(-827,'C0023901','LFT','Liver Function Tests',[lft],[lbpr],[[[2,2],[1,1],1]],yes,no,['AOD','CHV','LCH','LCH_NW','MSH','MTH','MTHMST','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[77/4],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],82/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('cholesterol today.',[mod([lexmatch([cholesterol]),inputmatch([cholesterol]),tag(noun),tokens([cholesterol])]),head([lexmatch([today]),inputmatch([today]),tag(noun),tokens([today])]),punc([inputmatch(['.']),tokens([])])],86/18,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0008377','CHOLESTEROL','Cholesterol',[cholesterol],[bacs,orch],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHSPL','NCI','NCI_CRCH','NCI_DCP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[86/11],0,0),ev(-861,'C0750526','Today','Today (temporal qualifier)',[today],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI'],[98/5],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Went back on lipitor for the last 3 weeks.  ",105/44,[]).
phrase('Went',[verb([lexmatch([went]),inputmatch(['Went']),tag(verb),tokens([went])])],105/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('back on lipitor',[head([lexmatch([back]),inputmatch([back]),tag(adj),tokens([back])]),prep([lexmatch([on]),inputmatch([on]),tag(prep),tokens([on])]),mod([lexmatch([lipitor]),inputmatch([lipitor]),tag(noun),tokens([lipitor])])],110/15,[]).
candidates(5,0,0,5,[]).
mappings([map(-746,[ev(-790,'C0004600','BACK','Back',[back],[blor],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNM','SNMI','SNOMEDCT_US','UWDA'],[110/4],0,0),ev(-623,'C0593906','Lipitor','Lipitor',[lipitor],[orch,phsu],[[[3,3],[1,1],0]],no,no,['CHV','CSP','MSH','NCI','NCI_NCI-GLOSS','PDQ','RXNORM'],[118/7],0,0)])]).
phrase('for the last 3 weeks.',[prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch([last]),inputmatch([last]),tag(adj),tokens([last])]),shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),head([lexmatch([weeks]),inputmatch([weeks]),tag(noun),tokens([weeks])]),punc([inputmatch(['.']),tokens([])])],126/21,[]).
candidates(3,1,0,2,[]).
mappings([map(-802,[ev(-660,'C1517741','Last','Last',[last],[qlco],[[[1,1],[1,1],0]],no,no,['NCI'],[134/4],0,0),ev(-827,'C0439230','WEEKS',week,[weeks],[tmco],[[[3,3],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_UCUM','SNOMEDCT_US'],[141/5],0,0)])]).
'EOU'.
utterance('00000000.tx.4',"Does note a bit of achiness in legs, not sure if related to it or not - will let us know if so.",149/95,[]).
phrase('Does',[aux([lexmatch([does]),inputmatch(['Does']),tag(aux),tokens([does])])],149/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(note,[verb([lexmatch([note]),inputmatch([note]),tag(verb),tokens([note])])],154/4,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1317574','Note','Note (document)',[note],[inpr],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI'],[154/4],0,0)])]).
phrase('a bit of achiness',[det([lexmatch([a]),inputmatch([a]),tag(det),tokens([a])]),head([lexmatch([bit]),inputmatch([bit]),tag(noun),tokens([bit])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([achiness]),inputmatch([achiness]),tag(noun),tokens([achiness])])],159/17,[]).
candidates(2,0,0,2,[]).
mappings([map(-658,[ev(-770,'C1553019','Bit','bit - unit of measure',[bit],[qnco],[[[2,2],[1,1],0]],yes,no,['HL7V3.0','MTH','NCI'],[161/3],0,0),ev(-504,'C0234238','ACHE','Ache',[ache],[sosy],[[[4,4],[1,1],6]],no,no,['CHV','CST','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[168/8],0,0)])]).
phrase('in legs,',[prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),head([lexmatch([legs]),inputmatch([legs]),tag(noun),tokens([legs])]),punc([inputmatch([',']),tokens([])])],177/8,[]).
candidates(3,2,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1140621','Legs','Leg',[legs],[blor],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NICHD','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET','UWDA'],[180/4],0,0)])]).
phrase('not sure',[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])]),head([lexmatch([sure]),inputmatch([sure]),tag(adj),tokens([sure])])],186/8,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C3844332','Not sure','Not sure',[not,sure],[fndg],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['LNC'],[186/8],0,1)])]).
phrase(if,[conj([lexmatch([if]),inputmatch([if]),tag(conj),tokens([if])])],195/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('related to it',[verb([lexmatch([related]),inputmatch([related]),tag(verb),tokens([related])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])])],198/13,[]).
candidates(3,1,0,2,[]).
mappings([map(-790,[ev(-790,'C0439849','Related','Relationships',[related],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V2.5','LNC','MTH','NCI','SNOMEDCT_US'],[198/7],0,0)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],212/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('not -',[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])]),punc([inputmatch([-]),tokens([])])],215/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[215/3],0,0)])]).
phrase(will,[modal([lexmatch([will]),inputmatch([will]),tag(modal),tokens([will])])],221/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(let,[adv([lexmatch([let]),inputmatch([let]),tag(adv),tokens([let])])],226/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0406636','LET','Lupus erythematosus tumidus',[let],[dsyn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[226/3],0,0)])]).
phrase(us,[pron([lexmatch([us]),inputmatch([us]),tag(pron),tokens([us])])],230/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(know,[verb([lexmatch([know]),inputmatch([know]),tag(verb),tokens([know])])],233/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(if,[conj([lexmatch([if]),inputmatch([if]),tag(conj),tokens([if])])],238/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('so.',[adv([lexmatch([so]),inputmatch([so]),tag(adv),tokens([so])]),punc([inputmatch(['.']),tokens([])])],241/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0037640','SO','Somalia',[so],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','DXP','LCH','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[241/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Medications",0/11,[]).
phrase('Medications',[head([lexmatch([medications]),inputmatch(['Medications']),tag(noun),tokens([medications])])],0/11,[]).
candidates(4,1,0,3,[]).
mappings([map(-1000,[ev(-1000,'C2598133','Medications','Medications:-:Point in time:^Patient:-',[medications],[clna],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[0/11],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Asa (ACETYLSALICYLIC Acid) 325MG, 1 Tablet(s) PO QD",0/51,[]).
phrase('Asa',[head([lexmatch([asa]),inputmatch(['Asa']),tag(noun),tokens([asa])])],0/3,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0004057','ASA','Aspirin',[asa],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','MSH','MTH','MTHSPL','NCI','NCI_DCP','NCI_DTP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[0/3],0,0)])]).
phrase('(ACETYLSALICYLIC Acid',[punc([inputmatch(['(']),tokens([])]),head([lexmatch(['acetylsalicylic acid']),inputmatch(['ACETYLSALICYLIC','Acid']),tag(noun),tokens([acetylsalicylic,acid])])],4/21,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0004057','Acetylsalicylic Acid','Aspirin',[acetylsalicylic,acid],[orch,phsu],[[[1,2],[1,2],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','MSH','MTH','MTHSPL','NCI','NCI_DCP','NCI_DTP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[5/20],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],25/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('325MG,',[head([inputmatch(['325MG']),tag(noun),tokens(['325mg'])]),punc([inputmatch([',']),tokens([])])],27/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],34/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[34/1],0,0),ev(-861,'C0039225','TABLET','Tablet Dosage Form',[tablet],[bodm],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NDFRT','RXNORM','SNMI','SNOMEDCT_US','VANDF'],[36/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],42/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],43/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],46/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[46/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[49/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Lipitor (ATORVASTATIN) 10MG, 1 Tablet(s) PO QD",0/46,[]).
phrase('Lipitor',[head([lexmatch([lipitor]),inputmatch(['Lipitor']),tag(noun),tokens([lipitor])])],0/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0593906','Lipitor','Lipitor',[lipitor],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','MSH','NCI','NCI_NCI-GLOSS','PDQ','RXNORM'],[0/7],0,0)])]).
phrase('(ATORVASTATIN',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([atorvastatin]),inputmatch(['ATORVASTATIN']),tag(noun),tokens([atorvastatin])])],8/13,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0286651','ATORVASTATIN',atorvastatin,[atorvastatin],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[9/12],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],21/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('10MG,',[head([inputmatch(['10MG']),tag(noun),tokens(['10mg'])]),punc([inputmatch([',']),tokens([])])],23/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],29/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[29/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[31/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],37/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],38/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],41/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[41/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[44/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Nitroglycerin 1/150 (0.4 Mg) 1 TAB SL x1 PRN prn CP",0/51,[]).
phrase('Nitroglycerin 1/150',[mod([lexmatch([nitroglycerin]),inputmatch(['Nitroglycerin']),tag(noun),tokens([nitroglycerin])]),shapes([inputmatch(['1',/,'150']),features([fraction]),tokens(['1','150'])])],0/19,[]).
candidates(6,4,0,2,[]).
mappings([map(-827,[ev(-827,'C0017887','NITROGLYCERIN','Nitroglycerin',[nitroglycerin],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[0/13],0,0)])]).
phrase('(0.4 Mg',[punc([inputmatch(['(']),tokens([])]),shapes([inputmatch(['0','.','4']),features([real_number]),tokens(['0','4'])]),head([lexmatch([mg]),inputmatch(['Mg']),tag(noun),tokens([mg])])],20/7,[]).
candidates(5,0,0,5,[]).
mappings([map(-802,[ev(-660,'C3842591','0%','0%',['0'],[fndg],[[[1,1],[1,1],0]],no,no,['LNC'],[21/1],0,0),ev(-827,'C2346927','Mg++','Magnesium Cation',[mg],[elii,phsu],[[[3,3],[1,1],0]],yes,no,['MTH','MTHSPL','NCI','NCI_CRCH','NCI_FDA','RXNORM'],[25/2],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],27/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('1 TAB SL x1 PRN prn CP',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),mod([lexmatch([tab]),inputmatch(['TAB']),tag(noun),tokens([tab])]),mod([lexmatch([sl]),inputmatch(['SL']),tag(noun),tokens([sl])]),mod([inputmatch([x1]),tag(noun),tokens([x1])]),mod([lexmatch([prn]),inputmatch(['PRN']),tag(noun),tokens([prn])]),mod([lexmatch([prn]),inputmatch([prn]),tag(noun),tokens([prn])]),head([lexmatch([cp]),inputmatch(['CP']),tag(noun),tokens([cp])])],29/22,[]).
candidates(5,0,0,5,[]).
mappings([map(-540,[ev(-629,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[29/1],0,0),ev(-629,'C1705223','Tab','Tablet Dosing Unit',[tab],[qnco],[[[2,2],[1,1],0]],no,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[31/3],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Norvasc (AMLODIPINE) 5MG, 1 Tablet(s) PO QD",0/43,[]).
phrase('Norvasc',[head([lexmatch([norvasc]),inputmatch(['Norvasc']),tag(noun),tokens([norvasc])])],0/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0162712','Norvasc','Norvasc',[norvasc],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','MSH','MTH','RXNORM'],[0/7],0,0)])]).
phrase('(AMLODIPINE',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([amlodipine]),inputmatch(['AMLODIPINE']),tag(noun),tokens([amlodipine])])],8/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0051696','AMLODIPINE','Amlodipine',[amlodipine],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[9/10],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],19/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('5MG,',[head([inputmatch(['5MG']),tag(noun),tokens(['5mg'])]),punc([inputmatch([',']),tokens([])])],21/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],26/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[26/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[28/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],34/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],35/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],38/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[38/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[41/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Zestril (LISINOPRIL) 40MG, 1 Tablet(s) PO QD",0/44,[]).
phrase('Zestril',[head([lexmatch([zestril]),inputmatch(['Zestril']),tag(noun),tokens([zestril])])],0/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0678140','Zestril','Zestril',[zestril],[aapp,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','NCI','NCI_NCI-GLOSS','RXNORM'],[0/7],0,0)])]).
phrase('(LISINOPRIL',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([lisinopril]),inputmatch(['LISINOPRIL']),tag(noun),tokens([lisinopril])])],8/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0065374','LISINOPRIL','Lisinopril',[lisinopril],[aapp,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LNC','MSH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[9/10],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],19/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('40MG,',[head([inputmatch(['40MG']),tag(noun),tokens(['40mg'])]),punc([inputmatch([',']),tokens([])])],21/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],27/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[27/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[29/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],35/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],36/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],39/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[39/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[42/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"ATENOLOL 50MG, 1 Tablet(s) PO QD",0/32,[]).
phrase('ATENOLOL 50MG,',[mod([lexmatch([atenolol]),inputmatch(['ATENOLOL']),tag(noun),tokens([atenolol])]),head([inputmatch(['50MG']),tag(noun),tokens(['50mg'])]),punc([inputmatch([',']),tokens([])])],0/14,[]).
candidates(1,0,0,1,[]).
mappings([map(-694,[ev(-694,'C0004147','ATENOLOL','Atenolol',[atenolol],[orch,phsu],[[[1,1],[1,1],0]],no,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[0/8],0,0)])]).
phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],15/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[15/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[17/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],23/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],24/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],27/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[27/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[30/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Hctz (HYDROCHLOROTHIAZIDE) 25MG, 1 Tablet(s) PO QD",0/50,[]).
phrase('Hctz',[head([lexmatch([hctz]),inputmatch(['Hctz']),tag(noun),tokens([hctz])])],0/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0020261','HCTZ','Hydrochlorothiazide',[hctz],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[0/4],0,0)])]).
phrase('(HYDROCHLOROTHIAZIDE',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([hydrochlorothiazide]),inputmatch(['HYDROCHLOROTHIAZIDE']),tag(noun),tokens([hydrochlorothiazide])])],5/20,[]).
candidates(4,3,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0020261','HYDROCHLOROTHIAZIDE','Hydrochlorothiazide',[hydrochlorothiazide],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[6/19],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],25/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('25MG,',[head([inputmatch(['25MG']),tag(noun),tokens(['25mg'])]),punc([inputmatch([',']),tokens([])])],27/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],33/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[33/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[35/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],41/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],42/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],45/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[45/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[48/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Allergies",0/9,[]).
phrase('Allergies',[head([lexmatch([allergies]),inputmatch(['Allergies']),tag(noun),tokens([allergies])])],0/9,[]).
candidates(7,6,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0020517','Allergies','Hypersensitivity',[allergies],[patf],[[[1,1],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','GO','HL7V2.5','HL7V3.0','ICD10CM','ICF','ICF-CY','ICPC','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[0/9],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Ceclor (CEFACLOR) - Rash",0/24,[]).
phrase('Ceclor',[head([lexmatch([ceclor]),inputmatch(['Ceclor']),tag(noun),tokens([ceclor])])],0/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0701133','Ceclor','Ceclor',[ceclor],[antb,orch],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','RXNORM','SNMI'],[0/6],0,0)])]).
phrase('(CEFACLOR',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([cefaclor]),inputmatch(['CEFACLOR']),tag(noun),tokens([cefaclor])])],7/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0007537','CEFACLOR','Cefaclor',[cefaclor],[antb,orch],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[8/8],0,0)])]).
phrase(') -',[punc([inputmatch([')']),tokens([])]),punc([inputmatch([-]),tokens([])])],16/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Rash',[head([lexmatch([rash]),inputmatch(['Rash']),tag(noun),tokens([rash])])],20/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0015230','RASH','Exanthema',[rash],[sosy],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CST','HPO','ICD10CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[20/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Family History",0/14,[]).
phrase('Family History',[head([lexmatch(['family history']),inputmatch(['Family','History']),tag(noun),tokens([family,history])])],0/14,[]).
candidates(13,3,0,10,[]).
mappings([map(-1000,[ev(-1000,'C0241889','FAMILY HISTORY','Family history',[family,history],[fndg],[[[1,2],[1,2],0]],yes,no,['CHV','CSP','DXP','MEDLINEPLUS','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNOMEDCT_US'],[0/14],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"father -HTN, 78 now",0/19,[]).
phrase('father -HTN,',[mod([lexmatch([father]),inputmatch([father]),tag(noun),tokens([father])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([htn]),inputmatch(['HTN']),tag(noun),tokens([htn])]),punc([inputmatch([',']),tokens([])])],0/12,[]).
candidates(2,0,0,2,[]).
mappings([map(-888,[ev(-694,'C0015671','Father','Father (person)',[father],[famg],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[0/6],0,0),ev(-861,'C0020538','HTN','Hypertensive disease',[htn],[dsyn],[[[2,2],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[8/3],0,0)])]).
phrase('78 now',[shapes([inputmatch(['78']),features([integer]),tokens(['78'])]),adv([lexmatch([now]),inputmatch([now]),tag(adv),tokens([now])])],13/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C1948052','Now','Now (temporal qualifier)',[now],[tmco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI'],[16/3],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"mother-HTN, MI at 58 and 62 - died then",0/39,[]).
phrase('mother-HTN,',[mod([lexmatch([mother]),inputmatch([mother]),tag(noun),tokens([mother])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([htn]),inputmatch(['HTN']),tag(noun),tokens([htn])]),punc([inputmatch([',']),tokens([])])],0/11,[]).
candidates(4,2,0,2,[]).
mappings([map(-888,[ev(-694,'C0026591','Mother','Mother (person)',[mother],[famg],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[0/6],0,0),ev(-861,'C0020538','HTN','Hypertensive disease',[htn],[dsyn],[[[2,2],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[7/3],0,0)])]).
phrase('MI at 58',[head([lexmatch([mi]),inputmatch(['MI']),tag(noun),tokens([mi])]),prep([lexmatch([at]),inputmatch([at]),tag(prep),tokens([at])]),shapes([inputmatch(['58']),features([integer]),tokens(['58'])])],12/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-790,[ev(-790,'C3810814','MI','Myocardial Infarction ECG Assessment',[mi],[diap],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NLMSubSyn'],[12/2],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],21/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('62 -',[shapes([inputmatch(['62']),features([integer]),tokens(['62'])]),punc([inputmatch([-]),tokens([])])],25/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(died,[verb([lexmatch([died]),inputmatch([died]),tag(verb),tokens([died])])],30/4,[]).
candidates(8,5,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1546956','Died','Patient Outcome - Died',[died],[fndg],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH','NLMSubSyn','SNOMEDCT_US'],[30/4],0,0)])]).
phrase(then,[adv([lexmatch([then]),inputmatch([then]),tag(adv),tokens([then])])],35/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1883708','Then','Then',[then],[tmco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[35/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"siblings-sister finally died from breast CA after 4 year battle, dx age 37.     ",0/80,[]).
phrase('siblings-sister',[mod([lexmatch([siblings]),inputmatch([siblings]),tag(noun),tokens([siblings])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([sister]),inputmatch([sister]),tag(noun),tokens([sister])])],0/15,[]).
candidates(2,0,0,2,[]).
mappings([map(-888,[ev(-694,'C0037047','Siblings','Sibling',[siblings],[famg],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','HL7V3.0','LNC','MSH','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[0/8],0,0),ev(-861,'C0337514','Sister','Sister',[sister],[famg],[[[2,2],[1,1],0]],yes,no,['CHV','CSP','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[9/6],0,0)])]).
phrase(finally,[adv([lexmatch([finally]),inputmatch([finally]),tag(adv),tokens([finally])])],16/7,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('died from breast CA',[verb([lexmatch([died]),inputmatch([died]),tag(verb),tokens([died])]),prep([lexmatch([from]),inputmatch([from]),tag(prep),tokens([from])]),mod([lexmatch([breast]),inputmatch([breast]),tag(noun),tokens([breast])]),mod([lexmatch([ca]),inputmatch(['CA']),tag(noun),tokens([ca])])],24/19,[]).
candidates(16,10,0,6,[]).
mappings([map(-733,[ev(-770,'C0011065','Died','Cessation of life',[died],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','GO','ICPC','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','SNOMEDCT_US'],[24/4],0,0),ev(-770,'C1268990','Breast','Entire breast',[breast],[bpoc],[[[3,3],[1,1],0]],yes,no,['MTH','SNOMEDCT_US'],[34/6],0,0),ev(-770,'C3887642','CA','Hippocampus Proper',[ca],[bpoc],[[[4,4],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','MSH','MTH','NCI'],[41/2],0,0)])]).
phrase('after 4 year battle,',[prep([lexmatch([after]),inputmatch([after]),tag(prep),tokens([after])]),shapes([inputmatch(['4']),features([integer]),tokens(['4'])]),mod([lexmatch([year]),inputmatch([year]),tag(noun),tokens([year])]),head([lexmatch([battle]),inputmatch([battle]),tag(noun),tokens([battle])]),punc([inputmatch([',']),tokens([])])],44/20,[]).
candidates(3,0,0,3,[]).
mappings([map(-623,[ev(-660,'C3838679','4+','4+ Answer to question',['4'],[fndg],[[[1,1],[1,1],0]],no,no,['LNC','MTH'],[50/1],0,0),ev(-660,'C0439508','/Year','per year',[year],[tmco],[[[2,2],[1,1],0]],no,no,['CHV','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[52/4],0,0)])]).
phrase('dx age 37.',[mod([lexmatch([dx]),inputmatch([dx]),tag(noun),tokens([dx])]),mod([lexmatch([age]),inputmatch([age]),tag(noun),tokens([age])]),shapes([inputmatch(['37']),features([integer]),tokens(['37'])]),punc([inputmatch(['.']),tokens([])])],65/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-790,[ev(-827,'C3538936','DX','Device Exposure Domain',[dx],[idcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC'],[65/2],0,0),ev(-827,'C0001779','AGE','Age',[age],[orga],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','LNC','MTH','NCI','NCI_BRIDG','NCI_CDISC','NCI_FDA','NCI_NICHD','SNMI','SNOMEDCT_US'],[68/3],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"7 sisters - one with DM,and 2 brothers - ok",80/43,[]).
phrase('7 sisters - one with DM,',[shapes([inputmatch(['7']),features([integer]),tokens(['7'])]),mod([lexmatch([sisters]),inputmatch([sisters]),tag(noun),tokens([sisters])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([one]),inputmatch([one]),tag(noun),tokens([one])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([dm]),inputmatch(['DM']),tag(noun),tokens([dm])]),punc([inputmatch([',']),tokens([])])],80/24,[]).
candidates(2,0,0,2,[]).
mappings([map(-695,[ev(-593,'C0337514','Sisters','Sister',[sisters],[famg],[[[2,2],[1,1],0]],no,no,['CHV','CSP','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[82/7],0,0),ev(-760,'C0205447','ONE','One',[one],[qnco],[[[3,3],[1,1],0]],yes,no,['LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[92/3],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],104/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('2 brothers - ok',[shapes([inputmatch(['2']),features([integer]),tokens(['2'])]),mod([lexmatch([brothers]),inputmatch([brothers]),tag(noun),tokens([brothers])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([ok]),inputmatch([ok]),tag(noun),tokens([ok])])],108/15,[]).
candidates(5,0,0,5,[]).
mappings([map(-623,[ev(-660,'C2981700','2+','2+ Score, WHO',['2'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[108/1],0,0),ev(-660,'C0337527','Brothers','Brothers',[brothers],[famg],[[[2,2],[1,1],0]],no,no,['CHV','CSP','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[110/8],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"No change since previous annual.",0/32,[]).
phrase('No change',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([change]),inputmatch([change]),tag(noun),tokens([change])])],0/9,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0443172',change,'Changed status',[change],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NLMSubSyn','SNOMEDCT_US'],[3/6],0,0)])]).
phrase(since,[conj([lexmatch([since]),inputmatch([since]),tag(conj),tokens([since])])],10/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('previous annual.',[mod([lexmatch([previous]),inputmatch([previous]),tag(adj),tokens([previous])]),head([lexmatch([annual]),inputmatch([annual]),tag(adj),tokens([annual])]),punc([inputmatch(['.']),tokens([])])],16/16,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0205156','Previous','Previous',[previous],[tmco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[16/8],0,0),ev(-861,'C0332181','Annual','Annual',[annual],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[25/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Social History^Iworking for Convergys as Sculptor, married, one son - 26 yo who lives with them.",0/95,[]).
phrase('Social History\tworking for Convergys',[mod([lexmatch(['social history']),inputmatch(['Social','History']),tag(noun),tokens([social,history])]),head([lexmatch([working]),inputmatch([working]),tag(noun),tokens([working])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([inputmatch(['Convergys']),tag(noun),tokens([convergys])])],0/36,[]).
candidates(12,2,0,10,[]).
mappings([map(-763,[ev(-640,'C0424945','Social history','Social and personal history',[social,history],[fndg],[[[1,2],[1,2],0]],no,no,['CHV','MTH','SNOMEDCT_US'],[0/14],0,0),ev(-760,'C0043227','Working','Work',[working],[ocac],[[[3,3],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[15/7],0,0)])]).
phrase('as Sculptor,',[prep([lexmatch([as]),inputmatch([as]),tag(prep),tokens([as])]),head([lexmatch([sculptor]),inputmatch(['Sculptor']),tag(noun),tokens([sculptor])]),punc([inputmatch([',']),tokens([])])],37/12,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0335049','Sculptor','Sculptor',[sculptor],[prog],[[[1,1],[1,1],0]],yes,no,['SNM','SNMI','SNOMEDCT_US'],[40/8],0,0)])]).
phrase(married,[verb([lexmatch([married]),inputmatch([married]),tag(verb),tokens([married])])],50/7,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0024841','Married','Marriage, life event',[married],[fndg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','MSH','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[50/7],0,0)])]).
phrase(',',[punc([inputmatch([',']),tokens([])])],57/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('one son - 26 yo',[mod([lexmatch([one]),inputmatch([one]),tag(noun),tokens([one])]),mod([lexmatch([son]),inputmatch([son]),tag(noun),tokens([son])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['26']),features([integer]),tokens(['26'])]),head([lexmatch([yo]),inputmatch([yo]),tag(noun),tokens([yo])])],59/15,[]).
candidates(3,0,0,3,[]).
mappings([map(-775,[ev(-645,'C0205447','ONE','One',[one],[qnco],[[[1,1],[1,1],0]],no,no,['LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[59/3],0,0),ev(-645,'C0037683','Son','Son (person)',[son],[famg],[[[2,2],[1,1],0]],no,no,['AOD','CHV','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[63/3],0,0),ev(-812,'C1413296','Yo','CDR2 gene',[yo],[gngm],[[[4,4],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[72/2],0,0)])]).
phrase(who,[pron([lexmatch([who]),inputmatch([who]),tag(pron),tokens([who])])],75/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('lives with them.',[verb([lexmatch([lives]),inputmatch([lives]),tag(verb),tokens([lives])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),pron([lexmatch([them]),inputmatch([them]),tag(pron),tokens([them])]),punc([inputmatch(['.']),tokens([])])],79/16,[]).
candidates(4,0,0,4,[]).
mappings([map(-790,[ev(-790,'C0595998',lives,'Household composition',[lives],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','SNOMEDCT_US'],[79/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Review of Systems",0/17,[]).
phrase('Review of Systems',[head([lexmatch([review]),inputmatch(['Review']),tag(noun),tokens([review])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([systems]),inputmatch(['Systems']),tag(noun),tokens([systems])])],0/17,[]).
candidates(12,3,0,9,[]).
mappings([map(-1000,[ev(-1000,'C0488564','Review of systems','Review of systems:Finding:Point in time:^Patient:Narrative:Reported',[review,of,systems],[clna],[[[1,1],[1,1],0],[[2,2],[2,2],0],[[3,3],[3,3],0]],yes,no,['LNC','MTH'],[0/17],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"The following systems were reviewed today and were negative unless indicated otherwise in the history noted above: Constitutional, HEENT, Breast,CVS, GI, GYN, Skin, Musculoskeletal, Neuro, Psych, Respiratory, and Allergic",0/221,[]).
phrase('The following systems',[det([lexmatch([the]),inputmatch(['The']),tag(det),tokens([the])]),mod([lexmatch([following]),inputmatch([following]),tag(adj),tokens([following])]),head([lexmatch([systems]),inputmatch([systems]),tag(noun),tokens([systems])])],0/21,[]).
candidates(9,4,0,5,[]).
mappings([map(-872,[ev(-694,'C0332282','Following','Following',[following],[tmco],[[[1,1],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[4/9],0,0),ev(-827,'C1704459','System','Device Component System',[system],[mnob],[[[2,2],[1,1],1]],yes,no,['MTH','NCI','NCI_FDA','NLMSubSyn'],[14/7],0,0)])]).
phrase(were,[aux([lexmatch([were]),inputmatch([were]),tag(aux),tokens([were])])],22/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(reviewed,[verb([lexmatch([reviewed]),inputmatch([reviewed]),tag(verb),tokens([reviewed])])],27/8,[]).
candidates(3,1,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0282443',reviewed,'Review [Publication Type]',[reviewed],[inpr],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','MSH','MTH'],[27/8],0,0)])]).
phrase(today,[head([lexmatch([today]),inputmatch([today]),tag(noun),tokens([today])])],36/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0310367','Today','Today',[today],[antb,orch],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','RXNORM'],[36/5],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],42/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(were,[aux([lexmatch([were]),inputmatch([were]),tag(aux),tokens([were])])],46/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(negative,[head([lexmatch([negative]),inputmatch([negative]),tag(adj),tokens([negative])])],51/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-1000,[ev(-1000,'C0205160','Negative','Negative',[negative],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','SNMI','SNOMEDCT_US'],[51/8],0,0)])]).
phrase(unless,[conj([lexmatch([unless]),inputmatch([unless]),tag(conj),tokens([unless])])],60/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(indicated,[verb([lexmatch([indicated]),inputmatch([indicated]),tag(verb),tokens([indicated])])],67/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1444656','Indicated','Indicated',[indicated],[fndg],[[[1,1],[1,1],0]],yes,no,['SNOMEDCT_US'],[67/9],0,0)])]).
phrase('otherwise in the history',[adv([lexmatch([otherwise]),inputmatch([otherwise]),tag(adv),tokens([otherwise])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch([history]),inputmatch([history]),tag(noun),tokens([history])])],77/24,[]).
candidates(8,2,0,6,[]).
mappings([map(-770,[ev(-770,'C2004062','History','History of previous events',[history],[fndg],[[[4,4],[1,1],0]],yes,no,['CHV','LCH','MTH','NCI'],[94/7],0,0)])]).
phrase(noted,[verb([lexmatch([noted]),inputmatch([noted]),tag(verb),tokens([noted])])],102/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-966,[ev(-966,'C1317574','Note','Note (document)',[note],[inpr],[[[1,1],[1,1],1]],yes,no,['CHV','LNC','MTH','NCI'],[102/5],0,0)])]).
phrase(above,[head([lexmatch([above]),inputmatch([above]),tag(adj),tokens([above])])],108/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1282910','Above','Upper',[above],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','FMA','HL7V2.5','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US','UWDA'],[108/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],113/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Constitutional,',[head([lexmatch([constitutional]),inputmatch(['Constitutional']),tag(noun),tokens([constitutional])]),punc([inputmatch([',']),tokens([])])],115/15,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1511487','Constitutional','Constitutional',[constitutional],[idcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[115/14],0,0)])]).
phrase('HEENT,',[head([lexmatch([heent]),inputmatch(['HEENT']),tag(noun),tokens([heent])]),punc([inputmatch([',']),tokens([])])],131/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1512338','HEENT','HEENT',[heent],[blor],[[[1,1],[1,1],0]],yes,no,['LNC','NCI','OMIM'],[131/5],0,0)])]).
phrase('Breast,',[head([lexmatch([breast]),inputmatch(['Breast']),tag(noun),tokens([breast])]),punc([inputmatch([',']),tokens([])])],138/7,[]).
candidates(7,5,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1268990','Breast','Entire breast',[breast],[bpoc],[[[1,1],[1,1],0]],yes,no,['MTH','SNOMEDCT_US'],[138/6],0,0)])]).
phrase('CVS,',[head([lexmatch([cvs]),inputmatch(['CVS']),tag(noun),tokens([cvs])]),punc([inputmatch([',']),tokens([])])],145/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('GI,',[head([lexmatch([gi]),inputmatch(['GI']),tag(noun),tokens([gi])]),punc([inputmatch([',']),tokens([])])],150/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3539617','GI','Digestive System Findings Domain',[gi],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NLMSubSyn'],[150/2],0,0)])]).
phrase('GYN,',[head([lexmatch([gyn]),inputmatch(['GYN']),tag(noun),tokens([gyn])]),punc([inputmatch([',']),tokens([])])],154/4,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0205480','GYN','Gynecologic',[gyn],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[154/3],0,0)])]).
phrase('Skin,',[head([lexmatch([skin]),inputmatch(['Skin']),tag(noun),tokens([skin])]),punc([inputmatch([',']),tokens([])])],159/5,[]).
candidates(7,4,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1278993','Skin','Entire skin',[skin],[bdsy],[[[1,1],[1,1],0]],yes,no,['MTH','NLMSubSyn','SNOMEDCT_US'],[159/4],0,0)])]).
phrase('Musculoskeletal,',[head([lexmatch([musculoskeletal]),inputmatch(['Musculoskeletal']),tag(adj),tokens([musculoskeletal])]),punc([inputmatch([',']),tokens([])])],165/16,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C2707260','Musculoskeletal','Musculoskeletal:-:Point in time:^Patient:-',[musculoskeletal],[clna],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[165/15],0,0)])]).
phrase('Neuro,',[head([lexmatch([neuro]),inputmatch(['Neuro']),tag(adj),tokens([neuro])]),punc([inputmatch([',']),tokens([])])],182/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Psych,',[head([lexmatch([psych]),inputmatch(['Psych']),tag(noun),tokens([psych])]),punc([inputmatch([',']),tokens([])])],189/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1306597',psych,'Psychiatric problem',[psych],[mobd],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','ICPC','LNC','MTH'],[189/5],0,0)])]).
phrase('Respiratory,',[head([lexmatch([respiratory]),inputmatch(['Respiratory']),tag(adj),tokens([respiratory])]),punc([inputmatch([',']),tokens([])])],196/12,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0521346','RESPIRATORY',respiratory,[respiratory],[ftcn],[[[1,1],[1,1],0]],yes,no,['ICPC','LNC','MTH','NCI','OMIM','SNMI'],[196/11],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],209/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Allergic',[head([lexmatch([allergic]),inputmatch(['Allergic']),tag(adj),tokens([allergic])])],213/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0700624','Allergic',allergic,[allergic],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','NCI','SNMI'],[213/8],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Physical Exam",0/13,[]).
phrase('Physical Exam',[mod([lexmatch([physical]),inputmatch(['Physical']),tag(adj),tokens([physical])]),head([lexmatch([exam]),inputmatch(['Exam']),tag(noun),tokens([exam])])],0/13,[]).
candidates(6,0,0,6,[]).
mappings([map(-1000,[ev(-1000,'C1744699','Physical Exam','Physical Exam Domain',[physical,exam],[inpr],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['MTH','NCI','NCI_CDISC','NLMSubSyn'],[0/13],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Vital signs",0/11,[]).
phrase('Vital signs',[head([lexmatch(['vital signs']),inputmatch(['Vital',signs]),tag(noun),tokens([vital,signs])])],0/11,[]).
candidates(8,1,0,7,[]).
mappings([map(-1000,[ev(-1000,'C0150404','Vital signs','Taking vital signs',[vital,signs],[hlca],[[[1,2],[1,2],0]],yes,no,['CHV','MTH','SNM','SNMI','SNOMEDCT_US'],[0/11],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"134/86      65 inches    weight -210 down 2 lbs since last year.",0/64,[]).
phrase('134/86      65 inches    weight -210 down 2 lbs since last year.',[shapes([inputmatch(['134',/,'86']),features([fraction]),tokens(['134','86'])]),shapes([inputmatch(['65']),features([integer]),tokens(['65'])]),mod([lexmatch([inches]),inputmatch([inches]),tag(noun),tokens([inches])]),mod([lexmatch([weight]),inputmatch([weight]),tag(noun),tokens([weight])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['210']),features([integer]),tokens(['210'])]),prep([lexmatch([down]),inputmatch([down]),tag(prep),tokens([down])]),shapes([inputmatch(['2']),features([integer]),tokens(['2'])]),mod([lexmatch([lbs]),inputmatch([lbs]),tag(noun),tokens([lbs])]),adv([lexmatch([since]),inputmatch([since]),tag(adv),tokens([since])]),mod([lexmatch([last]),inputmatch([last]),tag(adj),tokens([last])]),mod([lexmatch([year]),inputmatch([year]),tag(noun),tokens([year])]),punc([inputmatch(['.']),tokens([])])],0/64,[]).
candidates(14,3,0,11,[]).
mappings([map(-622,[ev(-736,'C3843765','65+','65+',['65'],[fndg],[[[3,3],[1,1],0]],yes,no,['LNC'],[12/2],0,0),ev(-736,'C0439204',inches,'Inch Unit of Length',[inches],[qnco],[[[4,4],[1,1],0]],yes,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCI-HL7','NCI_NCPDP','NCI_NICHD','NCI_UCUM','SNOMEDCT_US'],[15/6],0,0),ev(-736,'C0043100','WEIGHT','Weight',[weight],[qnco],[[[5,5],[1,1],0]],yes,no,['AOD','CHV','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_FDA','OMIM','SNMI','SNOMEDCT_US'],[25/6],0,0),ev(-736,'C0439219',lbs,'Pounds',[lbs],[qnco],[[[9,9],[1,1],0]],yes,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_ICH','NCI_NCPDP','NCI_NICHD','NCI_UCUM','SNOMEDCT_US'],[44/3],0,0),ev(-736,'C0439508','/Year','per year',[year],[tmco],[[[12,12],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[59/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"General:  appears well",0/22,[]).
phrase('General',[head([lexmatch([general]),inputmatch(['General']),tag(adj),tokens([general])])],0/7,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0205246','General','Generalized',[general],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V3.0','HPO','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[0/7],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],7/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(appears,[verb([lexmatch([appears]),inputmatch([appears]),tag(verb),tokens([appears])])],10/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0700364','APPEAR','Appearance',[appear],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[10/7],0,0)])]).
phrase(well,[adv([lexmatch([well]),inputmatch([well]),tag(adv),tokens([well])])],18/4,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0205170','Well','Good',[well],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_FDA','SNMI','SNOMEDCT_US'],[18/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"HEENT:  EOMI, PERRL, OP normal",0/30,[]).
phrase('HEENT',[head([lexmatch([heent]),inputmatch(['HEENT']),tag(noun),tokens([heent])])],0/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1512338','HEENT','HEENT',[heent],[blor],[[[1,1],[1,1],0]],yes,no,['LNC','NCI','OMIM'],[0/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],5/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('EOMI,',[head([lexmatch([eomi]),inputmatch(['EOMI']),tag(noun),tokens([eomi])]),punc([inputmatch([',']),tokens([])])],8/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PERRL,',[head([inputmatch(['PERRL']),tag(noun),tokens([perrl])]),punc([inputmatch([',']),tokens([])])],14/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1642390','PERRL','Pupil equal round and reacting to light',[perrl],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC','NCI','SNOMEDCT_US'],[14/5],0,0)])]).
phrase('OP',[head([lexmatch([op]),inputmatch(['OP']),tag(noun),tokens([op])])],21/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(normal,[head([lexmatch([normal]),inputmatch([normal]),tag(adj),tokens([normal])])],24/6,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0439166','% normal','Percent normal',[normal],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','SNOMEDCT_US'],[24/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([negation(nega,'no suspicious',[6/13],['C0221198':lesions],[20/7])]).
utterance('00000000.tx.1',"Skin: no suspicious lesions",0/27,[]).
phrase('Skin',[head([lexmatch([skin]),inputmatch(['Skin']),tag(noun),tokens([skin])])],0/4,[]).
candidates(7,4,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0444099','Skin','Skin Specimen',[skin],[bdsu],[[[1,1],[1,1],0]],yes,no,['HL7V3.0','MTH','NLMSubSyn','SNOMEDCT_US'],[0/4],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],4/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no suspicious lesions',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([suspicious]),inputmatch([suspicious]),tag(adj),tokens([suspicious])]),head([lexmatch([lesions]),inputmatch([lesions]),tag(noun),tokens([lesions])])],6/21,[]).
candidates(5,3,0,2,[]).
mappings([map(-888,[ev(-694,'C0750493','Suspicious',suspicious,[suspicious],[idcn],[[[1,1],[1,1],0]],no,no,['CHV','LNC'],[9/10],0,0),ev(-861,'C0221198',lesions,'Lesion',[lesions],[fndg],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[20/7],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([negation(nega,no,[7/2],['C0018021':'THYROMEGALY'],[10/11]),negation(nega,no,[23/2],['C0006318':bruits],[26/6])]).
utterance('00000000.tx.1',"Neck:  no thyromegaly, no bruits",0/32,[]).
phrase('Neck',[head([lexmatch([neck]),inputmatch(['Neck']),tag(noun),tokens([neck])])],0/4,[]).
candidates(5,2,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0027530','NECK','Neck',[neck],[blor],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[0/4],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],4/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no thyromegaly,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([thyromegaly]),inputmatch([thyromegaly]),tag(noun),tokens([thyromegaly])]),punc([inputmatch([',']),tokens([])])],7/15,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0018021','THYROMEGALY','Goiter',[thyromegaly],[patf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[10/11],0,1)])]).
phrase('no bruits',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([bruits]),inputmatch([bruits]),tag(noun),tokens([bruits])])],23/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0006318',bruits,'Bruit',[bruits],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','DXP','MTHICD9','SNM','SNMI','SNOMEDCT_US'],[26/6],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([negation(nega,no,[7/2],['C0749155':'Supraclavicular lymphadenopathy'],[33/31])]).
utterance('00000000.tx.1',"Nodes: no cervical, axillary, or supraclavicular lymphadenopathy",0/64,[]).
phrase('Nodes',[head([lexmatch([nodes]),inputmatch(['Nodes']),tag(noun),tokens([nodes])])],0/5,[]).
candidates(12,11,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0746922',nodes,'Anatomic Node',[nodes],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI'],[0/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],5/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no cervical, axillary,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([cervical]),inputmatch([cervical]),tag(adj),tokens([cervical])]),punc([inputmatch([',']),tokens([])]),head([lexmatch([axillary]),inputmatch([axillary]),tag(adj),tokens([axillary])]),punc([inputmatch([',']),tokens([])])],7/22,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0027530','Cervical','Neck',[cervical],[blor],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[10/8],0,0),ev(-861,'C0004454','Axillary','Axilla',[axillary],[blor],[[[2,2],[1,1],0]],yes,no,['CHV','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US','UWDA'],[20/8],0,0)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],30/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('supraclavicular lymphadenopathy',[mod([lexmatch([supraclavicular]),inputmatch([supraclavicular]),tag(adj),tokens([supraclavicular])]),head([lexmatch([lymphadenopathy]),inputmatch([lymphadenopathy]),tag(noun),tokens([lymphadenopathy])])],33/31,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0749155','Supraclavicular lymphadenopathy','Supraclavicular lymphadenopathy',[supraclavicular,lymphadenopathy],[patf],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['MTH','NLMSubSyn','SNOMEDCT_US'],[33/31],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([negation(nega,no,[9/2],['C0149741':'NIPPLE DISCHARGE'],[12/16]),negation(nega,no,[9/2],['C0332523':'Retraction'],[32/10])]).
utterance('00000000.tx.1',"Breast - no nipple discharge or retraction, no dominant masses",0/62,[]).
phrase('Breast -',[head([lexmatch([breast]),inputmatch(['Breast']),tag(noun),tokens([breast])]),punc([inputmatch([-]),tokens([])])],0/8,[]).
candidates(7,5,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1268990','Breast','Entire breast',[breast],[bpoc],[[[1,1],[1,1],0]],yes,no,['MTH','SNOMEDCT_US'],[0/6],0,0)])]).
phrase('no nipple discharge',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([nipple]),inputmatch([nipple]),tag(noun),tokens([nipple])]),head([lexmatch([discharge]),inputmatch([discharge]),tag(noun),tokens([discharge])])],9/19,[]).
candidates(12,4,0,8,[]).
mappings([map(-1000,[ev(-1000,'C0149741','NIPPLE DISCHARGE','nipple discharge',[nipple,discharge],[sosy],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','COSTAR','DXP','ICD10CM','LNC','MTH','MTHICD9','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNMI','SNOMEDCT_US'],[12/16],0,1)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],29/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('retraction,',[head([lexmatch([retraction]),inputmatch([retraction]),tag(noun),tokens([retraction])]),punc([inputmatch([',']),tokens([])])],32/11,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0332523','Retraction','Retraction (finding)',[retraction],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','SNM','SNMI','SNOMEDCT_US'],[32/10],0,1)])]).
phrase('no dominant masses',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([dominant]),inputmatch([dominant]),tag(adj),tokens([dominant])]),head([lexmatch([masses]),inputmatch([masses]),tag(noun),tokens([masses])])],44/18,[]).
candidates(5,0,0,5,[]).
mappings([map(-872,[ev(-694,'C1527180','Dominant','Dominant',[dominant],[ftcn],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[47/8],0,0),ev(-827,'C1306372','*Mass','Mass, a measure of quantity of matter',[mass],[qnco],[[[2,2],[1,1],1]],yes,no,['CHV','HL7V2.5','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[56/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([negation(nega,no,[31/2],['C0035508':'RHONCHI'],[34/7]),negation(nega,no,[31/2],['C0035508':'Wheeze'],[45/6])]).
utterance('00000000.tx.1',"Chest:  clear to auscultation, no rhonchi or wheeze",0/51,[]).
phrase('Chest',[head([lexmatch([chest]),inputmatch(['Chest']),tag(noun),tokens([chest])])],0/5,[]).
candidates(7,5,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0817096','CHEST','Chest',[chest],[blor],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[0/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],5/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('clear to auscultation,',[head([lexmatch([clear]),inputmatch([clear]),tag(adj),tokens([clear])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),mod([lexmatch([auscultation]),inputmatch([auscultation]),tag(noun),tokens([auscultation])]),punc([inputmatch([',']),tokens([])])],8/22,[]).
candidates(3,0,0,3,[]).
mappings([map(-746,[ev(-790,'C1709157','Clear','Negative Surgical Margin',[clear],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[8/5],0,0),ev(-623,'C0004339','AUSCULTATION','Auscultation',[auscultation],[diap],[[[3,3],[1,1],0]],no,no,['AOD','CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','SNM','SNMI','SNOMEDCT_US'],[17/12],0,0)])]).
phrase('no rhonchi',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([rhonchi]),inputmatch([rhonchi]),tag(noun),tokens([rhonchi])])],31/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0035508','RHONCHI','Rhonchi',[rhonchi],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','DXP','LNC','MSH','MTH','NCI','NCI_NICHD','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[34/7],0,1)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],42/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(wheeze,[head([lexmatch([wheeze]),inputmatch([wheeze]),tag(noun),tokens([wheeze])])],45/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0035508','Wheeze','Rhonchi',[wheeze],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','DXP','LNC','MSH','MTH','NCI','NCI_NICHD','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[45/6],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([negation(nega,no,[22/2],['C3842105':'Rubs'],[34/4]),negation(nega,no,[22/2],['C0018808':murmurs],[25/7])]).
utterance('00000000.tx.1',"COR:  regular S1, S2, no murmurs, rubs or gallops",0/49,[]).
phrase('COR',[head([lexmatch([cor]),inputmatch(['COR']),tag(noun),tokens([cor])])],0/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0018787','Cor','Heart',[cor],[bpoc],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[0/3],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],3/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('regular S1,',[mod([lexmatch([regular]),inputmatch([regular]),tag(adj),tokens([regular])]),head([lexmatch([s1]),inputmatch(['S1']),tag(noun),tokens([s1])]),punc([inputmatch([',']),tokens([])])],6/11,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0205272','Regular','Regular',[regular],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[6/7],0,0),ev(-861,'C3715215','S1','S1',[s1],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC','MTH'],[14/2],0,0)])]).
phrase('S2,',[head([lexmatch([s2]),inputmatch(['S2']),tag(noun),tokens([s2])]),punc([inputmatch([',']),tokens([])])],18/3,[]).
candidates(5,0,0,5,[]).
mappings([map(-1000,[ev(-1000,'C1419718','S2','RPS2 gene',[s2],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[18/2],0,0)])]).
phrase('no murmurs,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([murmurs]),inputmatch([murmurs]),tag(noun),tokens([murmurs])]),punc([inputmatch([',']),tokens([])])],22/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0018808',murmurs,'Heart murmur',[murmurs],[fndg],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CHV','COSTAR','DXP','HPO','ICD10CM','ICPC','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[25/7],0,1)])]).
phrase(rubs,[verb([lexmatch([rubs]),inputmatch([rubs]),tag(verb),tokens([rubs])])],34/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3842105','Rubs','Rubs',[rubs],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC'],[34/4],0,1)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],39/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(gallops,[head([lexmatch([gallops]),inputmatch([gallops]),tag(noun),tokens([gallops])])],42/7,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Abd:  soft, NT, no HSM or masses",0/32,[]).
phrase('Abd',[head([lexmatch([abd]),inputmatch(['Abd']),tag(noun),tokens([abd])])],0/3,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0000726',abd,'Abdomen',[abd],[blor],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NCI-GLOSS','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[0/3],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],3/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('soft, NT,',[mod([lexmatch([soft]),inputmatch([soft]),tag(adj),tokens([soft])]),punc([inputmatch([',']),tokens([])]),head([lexmatch([nt]),inputmatch(['NT']),tag(noun),tokens([nt])]),punc([inputmatch([',']),tokens([])])],6/9,[]).
candidates(6,1,0,5,[]).
mappings([map(-888,[ev(-694,'C0205358','Soft','Soft',[soft],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[6/4],0,0),ev(-861,'C0332126','NT','No treatment required for',[nt],[qlco],[[[2,2],[1,1],0]],yes,no,['CCS','MTH','NLMSubSyn','SNMI','SNOMEDCT_US'],[12/2],0,0)])]).
phrase('no HSM',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([hsm]),inputmatch(['HSM']),tag(noun),tokens([hsm])])],16/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1537594','HSM','LRRC4B gene',[hsm],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH'],[19/3],0,0)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],23/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(masses,[head([lexmatch([masses]),inputmatch([masses]),tag(noun),tokens([masses])])],26/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-966,[ev(-966,'C1306372','*Mass','Mass, a measure of quantity of matter',[mass],[qnco],[[[1,1],[1,1],1]],yes,no,['CHV','HL7V2.5','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[26/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([negation(nega,no,[18/2],['C0041834':'ERYTHEMA'],[21/8]),negation(nega,no,[18/2],['C0038999':'SWELLING'],[31/8]),negation(nega,no,[18/2],['C0684239':tenderness],[44/10])]).
utterance('00000000.tx.1',"Musculoskeletal:  no erythema, swelling, or tenderness",0/54,[]).
phrase('Musculoskeletal',[head([lexmatch([musculoskeletal]),inputmatch(['Musculoskeletal']),tag(adj),tokens([musculoskeletal])])],0/15,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0497254','MUSCULOSKELETAL','Musculoskeletal',[musculoskeletal],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','ICPC','LNC','MTH','NCI','NCI_NCI-GLOSS'],[0/15],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],15/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no erythema,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([erythema]),inputmatch([erythema]),tag(noun),tokens([erythema])]),punc([inputmatch([',']),tokens([])])],18/12,[]).
candidates(2,1,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0041834','ERYTHEMA','Erythema',[erythema],[sosy],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[21/8],0,1)])]).
phrase(swelling,[verb([lexmatch([swelling]),inputmatch([swelling]),tag(verb),tokens([swelling])])],31/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0038999','SWELLING','Swelling',[swelling],[fndg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','ICPC','LNC','MTH','NCI','NCI_FDA','SNM','SNMI','SNOMEDCT_US'],[31/8],0,1)])]).
phrase(',',[punc([inputmatch([',']),tokens([])])],39/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],41/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(tenderness,[head([lexmatch([tenderness]),inputmatch([tenderness]),tag(noun),tokens([tenderness])])],44/10,[]).
candidates(3,1,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0684239',tenderness,'Emotional tenderness',[tenderness],[menp],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','MTH'],[44/10],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Ext:  no CCE    ,",0/17,[]).
phrase('Ext',[head([lexmatch([ext]),inputmatch(['Ext']),tag(noun),tokens([ext])])],0/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(:,[punc([inputmatch([:]),tokens([])])],3/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no CCE    ,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([cce]),inputmatch(['CCE']),tag(noun),tokens([cce])]),punc([inputmatch([',']),tokens([])])],6/11,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Neuro:  grossly non-focal",0/25,[]).
phrase('Neuro',[head([lexmatch([neuro]),inputmatch(['Neuro']),tag(adj),tokens([neuro])])],0/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(:,[punc([inputmatch([:]),tokens([])])],5/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('grossly non-focal',[adv([lexmatch([grossly]),inputmatch([grossly]),tag(adv),tokens([grossly])]),head([lexmatch(['non-focal']),inputmatch([non,-,focal]),tag(adj),tokens([non,focal])])],8/17,[]).
candidates(4,2,0,2,[]).
mappings([map(-790,[ev(-827,'C1518422','Non','Negation',[non],[ftcn],[[[2,2],[1,1],0]],yes,no,['LNC','MTH','NCI'],[16/3],0,0),ev(-827,'C0205234','Focal','Focal',[focal],[spco],[[[3,3],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[20/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Health maintenance",0/18,[]).
phrase('Health maintenance',[mod([lexmatch([health]),inputmatch(['Health']),tag(noun),tokens([health])]),head([lexmatch([maintenance]),inputmatch([maintenance]),tag(noun),tokens([maintenance])])],0/18,[]).
candidates(5,2,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0262500','HEALTH MAINTENANCE','Health maintenance',[health,maintenance],[hlca],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','COSTAR','MTH','NLMSubSyn'],[0/18],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Influenza Vaccine 11/29/2067",0/28,[]).
phrase('Influenza Vaccine 11/29/2067',[mod([lexmatch(['influenza vaccine']),inputmatch(['Influenza','Vaccine']),tag(noun),tokens([influenza,vaccine])]),shapes([inputmatch(['11',/,'29']),features([fraction]),tokens(['11','29'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2067']),features([integer]),tokens(['2067'])])],0/28,[]).
candidates(12,5,0,7,[]).
mappings([map(-790,[ev(-840,'C2708137','Influenza vaccine','Influenza vaccine:-:Point in time:^Patient:-',[influenza,vaccine],[clna],[[[1,2],[1,2],0]],yes,no,['LNC','MTH','NLMSubSyn'],[0/17],0,0),ev(-804,'C3843708','29+','29+',['29'],[fndg],[[[4,4],[1,1],0]],yes,no,['LNC'],[21/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Cholesterol 11/29/2067 182",0/26,[]).
phrase('Cholesterol 11/29/2067 182',[mod([lexmatch([cholesterol]),inputmatch(['Cholesterol']),tag(noun),tokens([cholesterol])]),shapes([inputmatch(['11',/,'29']),features([fraction]),tokens(['11','29'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2067']),features([integer]),tokens(['2067'])]),shapes([inputmatch(['182']),features([integer]),tokens(['182'])])],0/26,[]).
candidates(2,0,0,2,[]).
mappings([map(-742,[ev(-804,'C0008377','CHOLESTEROL','Cholesterol',[cholesterol],[bacs,orch],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHSPL','NCI','NCI_CRCH','NCI_DCP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[0/11],0,0),ev(-804,'C3843708','29+','29+',['29'],[fndg],[[[3,3],[1,1],0]],yes,no,['LNC'],[15/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Mammogram 03/01/64 BilScrMammo(MC)",0/34,[]).
phrase('Mammogram 03/01/64 BilScrMammo',[mod([lexmatch([mammogram]),inputmatch(['Mammogram']),tag(noun),tokens([mammogram])]),shapes([inputmatch(['03',/,'01']),features([fraction]),tokens(['03','01'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['64']),features([integer]),tokens(['64'])]),head([inputmatch(['BilScrMammo']),tag(noun),tokens([bilscrmammo])])],0/30,[]).
candidates(1,0,0,1,[]).
mappings([map(-637,[ev(-637,'C0024671','Mammogram','Mammography',[mammogram],[diap],[[[1,1],[1,1],0]],no,no,['CCS','CHV','CSP','LNC','MEDLINEPLUS','MSH','MTH','MTHHH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[0/9],0,0)])]).
phrase('(MC',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([mc]),inputmatch(['MC']),tag(noun),tokens([mc])])],30/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0024403','MC','Macao',[mc],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','LCH','MSH','MTH','NCI','NCI_CDISC'],[31/2],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],33/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Pap Smear 03/12/2066 See report in Results",0/42,[]).
phrase('Pap Smear 03/12/2066',[mod([lexmatch(['pap smear']),inputmatch(['Pap','Smear']),tag(noun),tokens([pap,smear])]),shapes([inputmatch(['03',/,'12']),features([fraction]),tokens(['03','12'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2066']),features([integer]),tokens(['2066'])])],0/20,[]).
candidates(7,0,0,7,[]).
mappings([map(-840,[ev(-840,'C0079104','PAP Smear','Pap smear',[pap,smear],[diap],[[[1,2],[1,2],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','PDQ','SNOMEDCT_US'],[0/9],0,0)])]).
phrase('See',[verb([lexmatch([see]),inputmatch(['See']),tag(verb),tokens([see])])],21/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[21/3],0,0)])]).
phrase('report in Results',[head([lexmatch([report]),inputmatch([report]),tag(noun),tokens([report])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([results]),inputmatch(['Results']),tag(noun),tokens([results])])],25/17,[]).
candidates(6,0,0,6,[]).
mappings([map(-730,[ev(-790,'C0684224','Report','Report (document)',[report],[inpr],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[25/6],0,0),ev(-590,'C2825142','Result','Experimental Result',[result],[fndg],[[[3,3],[1,1],1]],no,no,['MTH','NCI','NLMSubSyn'],[35/7],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"UA-Protein 03/12/2066 NEGATIVE",0/30,[]).
phrase('UA-Protein 03/12/2066 NEGATIVE',[mod([lexmatch([ua]),inputmatch(['UA']),tag(noun),tokens([ua])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([protein]),inputmatch(['Protein']),tag(noun),tokens([protein])]),shapes([inputmatch(['03',/,'12']),features([fraction]),tokens(['03','12'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2066']),features([integer]),tokens(['2066'])]),head([lexmatch([negative]),inputmatch(['NEGATIVE']),tag(noun),tokens([negative])])],0/30,[]).
candidates(8,0,0,8,[]).
mappings([map(-756,[ev(-632,'C0042014','UA','Urinalysis',[ua],[lbpr],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','LCH_NW','LNC','MSH','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[0/2],0,0),ev(-632,'C0033684','PROTEIN','Proteins',[protein],[aapp,bacs],[[[2,2],[1,1],0]],no,no,['AOD','CHV','CSP','FMA','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_DCP','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','UWDA','VANDF'],[3/7],0,0),ev(-799,'C0205160','Negative','Negative',[negative],[qlco],[[[6,6],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','SNMI','SNOMEDCT_US'],[22/8],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"HBA1C 06/15/2068 5.80",0/21,[]).
phrase('HBA1C 06/15/2068 5.80',[mod([lexmatch([hba1c]),inputmatch(['HBA1C']),tag(noun),tokens([hba1c])]),shapes([inputmatch(['06',/,'15']),features([fraction]),tokens(['06','15'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2068']),features([integer]),tokens(['2068'])]),shapes([inputmatch(['5','.','80']),features([real_number]),tokens(['5','80'])])],0/21,[]).
candidates(1,0,0,1,[]).
mappings([map(-799,[ev(-799,'C3842583','80%','80%',['80'],[fndg],[[[6,6],[1,1],0]],yes,no,['LNC'],[19/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"TD Booster 12/28/59",0/19,[]).
phrase('TD Booster 12/28/59',[mod([lexmatch([td]),inputmatch(['TD']),tag(noun),tokens([td])]),mod([lexmatch([booster]),inputmatch(['Booster']),tag(noun),tokens([booster])]),shapes([inputmatch(['12',/,'28']),features([fraction]),tokens(['12','28'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['59']),features([integer]),tokens(['59'])])],0/19,[]).
candidates(3,0,0,3,[]).
mappings([map(-728,[ev(-804,'C0041061','TD','Trinidad and Tobago',[td],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[0/2],0,0),ev(-804,'C1697762','Booster','Booster Immunization - ActSubstanceAdministrationCode',[booster],[topp],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_NCI-GLOSS'],[3/7],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Triglycerides 11/29/2067 61",0/27,[]).
phrase('Triglycerides 11/29/2067 61',[mod([lexmatch([triglycerides]),inputmatch(['Triglycerides']),tag(noun),tokens([triglycerides])]),shapes([inputmatch(['11',/,'29']),features([fraction]),tokens(['11','29'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2067']),features([integer]),tokens(['2067'])]),shapes([inputmatch(['61']),features([integer]),tokens(['61'])])],0/27,[]).
candidates(2,0,0,2,[]).
mappings([map(-742,[ev(-804,'C0041004','TRIGLYCERIDES','Triglycerides',[triglycerides],[bacs,orch],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_CRCH','NDFRT','SNM','SNMI','SNOMEDCT_US','VANDF'],[0/13],0,0),ev(-804,'C3843708','29+','29+',['29'],[fndg],[[[3,3],[1,1],0]],yes,no,['LNC'],[17/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Cholesterol-LDL 11/29/2067 119",0/30,[]).
phrase('Cholesterol-LDL 11/29/2067 119',[mod([lexmatch([cholesterol]),inputmatch(['Cholesterol']),tag(noun),tokens([cholesterol])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([ldl]),inputmatch(['LDL']),tag(noun),tokens([ldl])]),shapes([inputmatch(['11',/,'29']),features([fraction]),tokens(['11','29'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2067']),features([integer]),tokens(['2067'])]),shapes([inputmatch(['119']),features([integer]),tokens(['119'])])],0/30,[]).
candidates(3,0,0,3,[]).
mappings([map(-768,[ev(-827,'C0023824','cholesterol ldl','LDL Cholesterol Lipoproteins',[cholesterol,ldl],[bacs,orch],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','LNC','MSH','MTH','NDFRT','NLMSubSyn','SNMI','SNOMEDCT_US'],[0/15],0,0),ev(-799,'C3843708','29+','29+',['29'],[fndg],[[[4,4],[1,1],0]],yes,no,['LNC'],[19/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Hct (Hematocrit) 03/16/2067 40.0",0/32,[]).
phrase('Hct (Hematocrit',[mod([lexmatch([hct]),inputmatch(['Hct','(']),tag(noun),tokens([hct])]),head([lexmatch([hematocrit]),inputmatch(['Hematocrit']),tag(noun),tokens([hematocrit])])],0/15,[]).
candidates(5,0,0,5,[]).
mappings([map(-1000,[ev(-1000,'C0018935','Hct - Haematocrit','Hematocrit procedure',[hct,haematocrit],[lbpr],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[0/3,5/10],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],15/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('03/16/2067 40.0',[shapes([inputmatch(['03',/,'16']),features([fraction]),tokens(['03','16'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2067']),features([integer]),tokens(['2067'])]),shapes([inputmatch(['40','.','0']),features([real_number]),tokens(['40','0'])])],17/15,[]).
candidates(3,0,0,3,[]).
mappings([map(-728,[ev(-804,'C3842587','40%','40%',['40'],[qnco],[[[4,4],[1,1],0]],yes,no,['LNC'],[28/2],0,0),ev(-804,'C3842591','0%','0%',['0'],[fndg],[[[5,5],[1,1],0]],yes,no,['LNC'],[31/1],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Cholesterol-HDL 11/29/2067 51",0/29,[]).
phrase('Cholesterol-HDL 11/29/2067 51',[mod([lexmatch([cholesterol]),inputmatch(['Cholesterol']),tag(noun),tokens([cholesterol])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([hdl]),inputmatch(['HDL']),tag(noun),tokens([hdl])]),shapes([inputmatch(['11',/,'29']),features([fraction]),tokens(['11','29'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2067']),features([integer]),tokens(['2067'])]),shapes([inputmatch(['51']),features([integer]),tokens(['51'])])],0/29,[]).
candidates(4,0,0,4,[]).
mappings([map(-768,[ev(-827,'C0023822','cholesterol hdl','High Density Lipoprotein Cholesterol',[cholesterol,hdl],[bacs,orch],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','MSH','MTH','NDFRT','NLMSubSyn','SNMI','SNOMEDCT_US'],[0/15],0,0),ev(-799,'C3843708','29+','29+',['29'],[fndg],[[[4,4],[1,1],0]],yes,no,['LNC'],[19/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Hgb (Hemoglobin) 03/16/2067 13.3",0/32,[]).
phrase('Hgb',[head([lexmatch([hgb]),inputmatch(['Hgb']),tag(noun),tokens([hgb])])],0/3,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C0019029','HgB','Hemoglobin concentration result',[hgb],[lbtr],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NLMSubSyn'],[0/3],0,0)])]).
phrase('(Hemoglobin',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([hemoglobin]),inputmatch(['Hemoglobin']),tag(noun),tokens([hemoglobin])])],4/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0019046','Haemoglobin','Hemoglobin',[haemoglobin],[aapp,bacs],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US','UWDA'],[5/10],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],15/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('03/16/2067 13.3',[shapes([inputmatch(['03',/,'16']),features([fraction]),tokens(['03','16'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2067']),features([integer]),tokens(['2067'])]),shapes([inputmatch(['13','.','3']),features([real_number]),tokens(['13','3'])])],17/15,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Assessment and Plan",0/19,[]).
phrase('Assessment',[head([lexmatch([assessment]),inputmatch(['Assessment']),tag(noun),tokens([assessment])])],0/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1516048','Assessment','Assessed',[assessment],[acty],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_NCI-GLOSS'],[0/10],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],11/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Plan',[head([lexmatch([plan]),inputmatch(['Plan']),tag(noun),tokens([plan])])],15/4,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1301732','Plan','Planned',[plan],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNOMEDCT_US'],[15/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"1.  ",0/4,[]).
phrase('1.',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),punc([inputmatch(['.']),tokens([])])],0/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[0/1],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Health Maintenance - Pap smear with gyn soon, mammo - very overdue - stressed needs to do this again and promises, Stool cards. ",4/128,[]).
phrase('Health Maintenance - Pap smear with gyn soon,',[mod([lexmatch([health]),inputmatch(['Health']),tag(noun),tokens([health])]),mod([lexmatch([maintenance]),inputmatch(['Maintenance']),tag(noun),tokens([maintenance])]),punc([inputmatch([-]),tokens([])]),head([lexmatch(['pap smear']),inputmatch(['Pap',smear]),tag(noun),tokens([pap,smear])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([gyn]),inputmatch([gyn]),tag(noun),tokens([gyn])]),adv([lexmatch([soon]),inputmatch([soon]),tag(adv),tokens([soon])]),punc([inputmatch([',']),tokens([])])],4/45,[]).
candidates(14,2,0,12,[]).
mappings([map(-737,[ev(-612,'C0262500','HEALTH MAINTENANCE','Health maintenance',[health,maintenance],[hlca],[[[1,1],[1,1],0],[[2,2],[2,2],0]],no,no,['CHV','COSTAR','MTH','NLMSubSyn'],[4/18],0,0),ev(-778,'C0079104','PAP Smear','Pap smear',[pap,smear],[diap],[[[3,4],[1,2],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','PDQ','SNOMEDCT_US'],[25/9],0,0),ev(-581,'C0205480','GYN','Gynecologic',[gyn],[spco],[[[6,6],[1,1],0]],no,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[40/3],0,0)])]).
phrase('mammo - very overdue - stressed needs to do',[mod([inputmatch([mammo]),tag(noun),tokens([mammo])]),punc([inputmatch([-]),tokens([])]),adv([lexmatch([very]),inputmatch([very]),tag(adv),tokens([very])]),mod([lexmatch([overdue]),inputmatch([overdue]),tag(adj),tokens([overdue])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([stressed]),inputmatch([stressed]),tag(adj),tokens([stressed])]),mod([lexmatch([needs]),inputmatch([needs]),tag(noun),tokens([needs])]),head([lexmatch(['to do']),inputmatch([to,do]),tag(noun),tokens([to,do])])],50/43,[]).
candidates(5,0,0,5,[]).
mappings([map(-537,[ev(-629,'C2984081','Very','Very Much',[very],[qlco],[[[2,2],[1,1],0]],no,no,['LNC','MTH','NCI'],[58/4],0,0),ev(-629,'C0038435',stressed,'Stress',[stressed],[fndg],[[[4,4],[1,1],0]],no,no,['AOD','CHV','CSP','LNC','MEDLINEPLUS','MTH','NCI','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US'],[73/8],0,0),ev(-629,'C0027552','Needs','Needs',[needs],[qlco],[[[5,5],[1,1],0]],no,no,['CHV','MSH','MTH','NCI','SNOMEDCT_US'],[82/5],0,0)])]).
phrase('this again',[det([lexmatch([this]),inputmatch([this]),tag(det),tokens([this])]),adv([lexmatch([again]),inputmatch([again]),tag(adv),tokens([again])])],94/10,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],105/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('promises,',[head([lexmatch([promises]),inputmatch([promises]),tag(noun),tokens([promises])]),punc([inputmatch([',']),tokens([])])],109/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-966,[ev(-966,'C1555307',promise,promise,[promise],[idcn],[[[1,1],[1,1],1]],yes,no,['HL7V3.0'],[109/8],0,0)])]).
phrase('Stool cards.',[mod([lexmatch([stool]),inputmatch(['Stool']),tag(noun),tokens([stool])]),head([lexmatch([cards]),inputmatch([cards]),tag(noun),tokens([cards])]),punc([inputmatch(['.']),tokens([])])],119/12,[]).
candidates(3,0,0,3,[]).
mappings([map(-872,[ev(-694,'C0183622','Stool','Stool seat',[stool],[medd],[[[1,1],[1,1],0]],no,no,['MTH','SNOMEDCT_US'],[119/5],0,0),ev(-827,'C3275277','Card','Card (document)',[card],[inpr],[[[2,2],[1,1],1]],yes,no,['MTH','NCI'],[125/5],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Declined sig for now but promises to think about it.",132/52,[]).
phrase('Declined sig for now',[mod([lexmatch([declined]),inputmatch(['Declined']),tag(adj),tokens([declined])]),head([lexmatch([sig]),inputmatch([sig]),tag(noun),tokens([sig])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),adv([lexmatch([now]),inputmatch([now]),tag(adv),tokens([now])])],132/20,[]).
candidates(2,0,0,2,[]).
mappings([map(-708,[ev(-770,'C1515092','SIG','Surveillance Implementation Group',[sig],[hcro],[[[2,2],[1,1],0]],yes,no,['MTH','NCI'],[141/3],0,0),ev(-604,'C1948052','Now','Now (temporal qualifier)',[now],[tmco],[[[4,4],[1,1],0]],no,no,['MTH','NCI'],[149/3],0,0)])]).
phrase(but,[conj([lexmatch([but]),inputmatch([but]),tag(conj),tokens([but])])],153/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(promises,[verb([lexmatch([promises]),inputmatch([promises]),tag(verb),tokens([promises])])],157/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1555307',promise,promise,[promise],[idcn],[[[1,1],[1,1],0]],yes,no,['HL7V3.0'],[157/8],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],166/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[166/2],0,0)])]).
phrase(think,[verb([lexmatch([think]),inputmatch([think]),tag(verb),tokens([think])])],169/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0039869',think,'Thinking, function',[think],[menp],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','ICF','ICF-CY','MSH','MTH','NCI','SNM','SNOMEDCT_US'],[169/5],0,0)])]).
phrase(about,[adv([lexmatch([about]),inputmatch([about]),tag(adv),tokens([about])])],175/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('it.',[pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])]),punc([inputmatch(['.']),tokens([])])],181/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([negation(nega,not,[41/3],['C3842296':'Else'],[73/4])]).
utterance('00000000.tx.1',"2. ",0/3,[]).
phrase('2.',[shapes([inputmatch(['2']),features([integer]),tokens(['2'])]),punc([inputmatch(['.']),tokens([])])],0/2,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C2981700','2+','2+ Score, WHO',['2'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[0/1],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Menopause - calcium, consider BD when not overwhelmed with everything else - much prefer she concentrate on the appts, Pap smear and mammo.",3/139,[]).
phrase('Menopause - calcium,',[mod([lexmatch([menopause]),inputmatch(['Menopause']),tag(noun),tokens([menopause])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([calcium]),inputmatch([calcium]),tag(noun),tokens([calcium])]),punc([inputmatch([',']),tokens([])])],3/20,[]).
candidates(13,6,0,7,[]).
mappings([map(-888,[ev(-694,'C0567312','Menopause','Menopause present (finding)',[menopause],[fndg],[[[1,1],[1,1],0]],no,no,['MTH','SNOMEDCT_US'],[3/9],0,0),ev(-861,'C0006675','CALCIUM','Calcium',[calcium],[bacs,elii,phsu],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[15/7],0,0)])]).
phrase(consider,[verb([lexmatch([consider]),inputmatch([consider]),tag(verb),tokens([consider])])],24/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0750591',consider,consider,[consider],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV'],[24/8],0,0)])]).
phrase('BD',[head([lexmatch([bd]),inputmatch(['BD']),tag(noun),tokens([bd])])],33/2,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0005126','BD','Bermuda',[bd],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[33/2],0,0)])]).
phrase(when,[conj([lexmatch([when]),inputmatch([when]),tag(conj),tokens([when])])],36/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(not,[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])])],41/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[41/3],0,0)])]).
phrase('overwhelmed with everything else -',[verb([lexmatch([overwhelmed]),inputmatch([overwhelmed]),tag(verb),tokens([overwhelmed])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),pron([lexmatch([everything]),inputmatch([everything]),tag(pron),tokens([everything])]),adv([lexmatch([else]),inputmatch([else]),tag(adv),tokens([else])]),punc([inputmatch([-]),tokens([])])],45/34,[]).
candidates(1,0,0,1,[]).
mappings([map(-770,[ev(-770,'C3842296','Else','Else',[else],[fndg],[[[4,4],[1,1],0]],yes,no,['LNC'],[73/4],0,1)])]).
phrase(much,[adv([lexmatch([much]),inputmatch([much]),tag(adv),tokens([much])])],80/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0205393','Much','Most',[much],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[80/4],0,0)])]).
phrase(prefer,[verb([lexmatch([prefer]),inputmatch([prefer]),tag(verb),tokens([prefer])])],85/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(she,[pron([lexmatch([she]),inputmatch([she]),tag(pron),tokens([she])])],92/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('concentrate on the appts,',[verb([lexmatch([concentrate]),inputmatch([concentrate]),tag(verb),tokens([concentrate])]),prep([lexmatch([on]),inputmatch([on]),tag(prep),tokens([on])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch([appts]),inputmatch([appts]),tag(noun),tokens([appts])]),punc([inputmatch([',']),tokens([])])],96/25,[]).
candidates(4,0,0,4,[]).
mappings([map(-691,[ev(-770,'C1880310','Concentrate','Dialysate Concentrate',[concentrate],[mnob],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_FDA','NLMSubSyn'],[96/11],0,0),ev(-737,'C0245203','APPT','4-azido-7-phenylpyrazolo-(1,5a)-1,3,5-triazine',[appt],[bacs,orch],[[[4,4],[1,1],1]],yes,no,['MSH','MTH'],[115/5],0,0)])]).
phrase('Pap smear',[head([lexmatch(['pap smear']),inputmatch(['Pap',smear]),tag(noun),tokens([pap,smear])])],122/9,[]).
candidates(7,0,0,7,[]).
mappings([map(-1000,[ev(-1000,'C0079104','PAP Smear','Pap smear',[pap,smear],[diap],[[[1,2],[1,2],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','PDQ','SNOMEDCT_US'],[122/9],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],132/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('mammo.',[head([inputmatch([mammo]),tag(noun),tokens([mammo])]),punc([inputmatch(['.']),tokens([])])],136/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Rest of issues - see above.",0/27,[]).
phrase('Rest of issues -',[head([lexmatch([rest]),inputmatch(['Rest']),tag(noun),tokens([rest])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([issues]),inputmatch([issues]),tag(noun),tokens([issues])]),punc([inputmatch([-]),tokens([])])],0/16,[]).
candidates(4,0,0,4,[]).
mappings([map(-730,[ev(-790,'C0035253','Rest','Rest',[rest],[dora],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[0/4],0,0),ev(-590,'C0033213','Issue','Problem',[issue],[fndg],[[[3,3],[1,1],1]],no,no,['CHV','LNC','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[8/6],0,0)])]).
phrase(see,[verb([lexmatch([see]),inputmatch([see]),tag(verb),tokens([see])])],17/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[17/3],0,0)])]).
phrase('above.',[head([lexmatch([above]),inputmatch([above]),tag(adj),tokens([above])]),punc([inputmatch(['.']),tokens([])])],21/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1282910','Above','Upper',[above],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','FMA','HL7V2.5','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US','UWDA'],[21/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"follow-up 6 months",0/18,[]).
phrase('follow-up 6 months',[mod([lexmatch(['follow-up']),inputmatch([follow,-,up]),tag(adj),tokens([follow,up])]),shapes([inputmatch(['6']),features([integer]),tokens(['6'])]),head([lexmatch([months]),inputmatch([months]),tag(noun),tokens([months])])],0/18,[]).
candidates(10,2,0,8,[]).
mappings([map(-1000,[ev(-1000,'C0589124','Follow-up 6 months','Follow-up 6 months',[follow,up,'6',months],[fndg],[[[1,1],[1,1],0],[[2,2],[2,2],0],[[3,3],[3,3],0],[[4,4],[4,4],0]],yes,no,['SNOMEDCT_US'],[0/18],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Beverly Thiel",0/13,[]).
phrase('Beverly Thiel',[mod([lexmatch([beverly]),inputmatch(['Beverly']),tag(noun),tokens([beverly])]),head([inputmatch(['Thiel']),tag(noun),tokens([thiel])])],0/13,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-03.xml outputs/220-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-03.xml',outfile-'outputs/220-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"]]></TEXT>   <TAGS></TAGS> </root>",0/34,[]).
phrase(']',[punc([inputmatch([']']),tokens([])])],0/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(']',[punc([inputmatch([']']),tokens([])])],1/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(>,[punc([inputmatch([>]),tokens([])])],2/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</TEXT',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([text]),inputmatch(['TEXT']),tag(noun),tokens([text])])],3/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1705606','Text','Text Line',[text],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[5/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],9/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<TAGS',[punc([inputmatch([<]),tokens([])]),head([lexmatch([tags]),inputmatch(['TAGS']),tag(noun),tokens([tags])])],13/5,[]).
candidates(4,3,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1139855',tags,'Tags (device)',[tags],[medd],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[14/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],18/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</TAGS',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([tags]),inputmatch(['TAGS']),tag(noun),tokens([tags])])],19/6,[]).
candidates(4,3,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1139855',tags,'Tags (device)',[tags],[medd],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[21/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],25/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</root',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([root]),inputmatch([root]),tag(noun),tokens([root])])],27/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1318154','Root','Root body part',[root],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH'],[29/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],33/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
