args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"<?xml version=""1.0"" encoding=""UTF-8""?> <root>   <TEXT><![CDATA[",0/63,[]).
phrase('<?xml version',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([?]),tokens([])]),mod([lexmatch([xml]),inputmatch([xml]),tag(noun),tokens([xml])]),head([lexmatch([version]),inputmatch([version]),tag(noun),tokens([version])])],0/13,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C1707981','XML','Extensible Markup Language',[xml],[inpr],[[[1,1],[1,1],0]],no,no,['HL7V3.0','NCI'],[2/3],0,0),ev(-861,'C0333052','Version','Version',[version],[ftcn],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','MTHICD9','NCI','NCI_CDISC'],[6/7],0,0)])]).
phrase('="1.0"',[punc([inputmatch([=]),tokens([])]),punc([inputmatch(['"']),tokens([])]),shapes([inputmatch(['1','.','0']),features([real_number]),tokens(['1','0'])]),punc([inputmatch(['"']),tokens([])])],13/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-861,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[15/1],0,0),ev(-861,'C3842591','0%','0%',['0'],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC'],[17/1],0,0)])]).
phrase(encoding,[verb([lexmatch([encoding]),inputmatch([encoding]),tag(verb),tokens([encoding])])],20/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1547699','Encoding','MIME encoding',[encoding],[idcn],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH'],[20/8],0,0)])]).
phrase('="UTF-8"?',[punc([inputmatch([=]),tokens([])]),punc([inputmatch(['"']),tokens([])]),mod([lexmatch([utf]),inputmatch(['UTF']),tag(noun),tokens([utf])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['8']),features([integer]),tokens(['8'])]),punc([inputmatch(['"']),tokens([])]),punc([inputmatch([?]),tokens([])])],28/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1555005','UTF-8','UTF-8',[utf,'8'],[inpr],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['HL7V3.0'],[30/5],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],37/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<root',[punc([inputmatch([<]),tokens([])]),head([lexmatch([root]),inputmatch([root]),tag(noun),tokens([root])])],39/5,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1318154','Root','Root body part',[root],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH'],[40/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],44/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<TEXT',[punc([inputmatch([<]),tokens([])]),head([lexmatch([text]),inputmatch(['TEXT']),tag(noun),tokens([text])])],48/5,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1705606','Text','Text Line',[text],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[49/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],53/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<!',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([!]),tokens([])])],54/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('[CDATA',[punc([inputmatch(['[']),tokens([])]),head([inputmatch(['CDATA']),tag(noun),tokens([cdata])])],56/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0640049','CDATA','3-chloro-4-dimethylaminothioangelicin',[cdata],[orch],[[[1,1],[1,1],0]],yes,no,['MSH'],[57/5],0,0)])]).
phrase('[',[punc([inputmatch(['[']),tokens([])])],62/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Record date: 2075-01-31",0/23,[]).
phrase('Record date',[mod([lexmatch([record]),inputmatch(['Record']),tag(noun),tokens([record])]),head([lexmatch([date]),inputmatch([date]),tag(noun),tokens([date])])],0/11,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-694,'C0034869','Record','Records',[record],[inpr],[[[1,1],[1,1],0]],no,no,['CHV','HL7V3.0','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA'],[0/6],0,0),ev(-861,'C0011008','DATE','Date in time',[date],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MSH','MTH','NCI','NCI_CareLex','NCI_NICHD','SNOMEDCT_US'],[7/4],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],11/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('2075-01-31',[shapes([inputmatch(['2075']),features([integer]),tokens(['2075'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['01']),features([integer]),tokens(['01'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['31']),features([integer]),tokens(['31'])])],13/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-827,[ev(-827,'C0450355','31','31',['31'],[inpr],[[[3,3],[1,1],0]],yes,no,['MTH','SNOMEDCT_US'],[21/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Narrative History",0/17,[]).
phrase('Narrative History',[mod([lexmatch([narrative]),inputmatch(['Narrative']),tag(adj),tokens([narrative])]),head([lexmatch([history]),inputmatch(['History']),tag(noun),tokens([history])])],0/17,[]).
candidates(9,2,0,7,[]).
mappings([map(-888,[ev(-694,'C1135957','Narrative','Narration',[narrative],[socb],[[[1,1],[1,1],0]],no,no,['CHV','MSH','MTH','NCI'],[0/9],0,0),ev(-861,'C2004062','History','History of previous events',[history],[fndg],[[[2,2],[1,1],0]],yes,no,['CHV','LCH','MTH','NCI'],[10/7],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Patient  presents for an annual exam.",2/37,[]).
phrase('Patient',[head([lexmatch([patient]),inputmatch(['Patient']),tag(noun),tokens([patient])])],2/7,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C0030705','*^patient','Patients',[patient],[podg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_DICOM','NCI_FDA','SNOMEDCT_US'],[2/7],0,0)])]).
phrase('presents for an annual exam.',[verb([lexmatch([presents]),inputmatch([presents]),tag(verb),tokens([presents])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),det([lexmatch([an]),inputmatch([an]),tag(det),tokens([an])]),mod([lexmatch([annual]),inputmatch([annual]),tag(adj),tokens([annual])]),mod([lexmatch([exam]),inputmatch([exam]),tag(noun),tokens([exam])]),punc([inputmatch(['.']),tokens([])])],11/28,[]).
candidates(4,0,0,4,[]).
mappings([map(-696,[ev(-760,'C0150312','Present','Present',[present],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[11/8],0,0),ev(-760,'C0332181','Annual','Annual',[annual],[tmco],[[[4,4],[1,1],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[27/6],0,0),ev(-760,'C0582103','Exam','Medical Examination',[exam],[hlca],[[[5,5],[1,1],0]],yes,no,['CHV','CSP','LCH','MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[34/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Has been doing generally well, a bit stressed as another sister dx with breast CA last year.",0/92,[]).
phrase('Has',[aux([lexmatch([has]),inputmatch(['Has']),tag(aux),tokens([has])])],0/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(been,[aux([lexmatch([been]),inputmatch([been]),tag(aux),tokens([been])])],4/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(doing,[aux([lexmatch([doing]),inputmatch([doing]),tag(aux),tokens([doing])])],9/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('generally well,',[adv([lexmatch([generally]),inputmatch([generally]),tag(adv),tokens([generally])]),adv([lexmatch([well]),inputmatch([well]),tag(adv),tokens([well])]),punc([inputmatch([',']),tokens([])])],15/15,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C0205170','Well','Good',[well],[qlco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_FDA','SNMI','SNOMEDCT_US'],[25/4],0,0)])]).
phrase('a bit',[det([lexmatch([a]),inputmatch([a]),tag(det),tokens([a])]),head([lexmatch([bit]),inputmatch([bit]),tag(noun),tokens([bit])])],31/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1553019','Bit','bit - unit of measure',[bit],[qnco],[[[1,1],[1,1],0]],yes,no,['HL7V3.0','MTH','NCI'],[33/3],0,0)])]).
phrase('stressed as another sister dx',[verb([lexmatch([stressed]),inputmatch([stressed]),tag(verb),tokens([stressed])]),prep([lexmatch([as]),inputmatch([as]),tag(prep),tokens([as])]),det([lexmatch([another]),inputmatch([another]),tag(det),tokens([another])]),mod([lexmatch([sister]),inputmatch([sister]),tag(noun),tokens([sister])]),mod([lexmatch([dx]),inputmatch([dx]),tag(noun),tokens([dx])])],37/29,[]).
candidates(3,0,0,3,[]).
mappings([map(-696,[ev(-760,'C0038435',stressed,'Stress',[stressed],[fndg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','LNC','MEDLINEPLUS','MTH','NCI','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US'],[37/8],0,0),ev(-760,'C0337514','Sister','Sister',[sister],[famg],[[[4,4],[1,1],0]],yes,no,['CHV','CSP','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[57/6],0,0),ev(-760,'C3538936','DX','Device Exposure Domain',[dx],[idcn],[[[5,5],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC'],[64/2],0,0)])]).
phrase('with breast CA last year.',[prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([breast]),inputmatch([breast]),tag(noun),tokens([breast])]),mod([lexmatch([ca]),inputmatch(['CA']),tag(noun),tokens([ca])]),mod([lexmatch([last]),inputmatch([last]),tag(adj),tokens([last])]),head([lexmatch([year]),inputmatch([year]),tag(noun),tokens([year])]),punc([inputmatch(['.']),tokens([])])],67/25,[]).
candidates(10,5,0,5,[]).
mappings([map(-775,[ev(-645,'C1268990','Breast','Entire breast',[breast],[bpoc],[[[1,1],[1,1],0]],no,no,['MTH','SNOMEDCT_US'],[72/6],0,0),ev(-645,'C3887642','CA','Hippocampus Proper',[ca],[bpoc],[[[2,2],[1,1],0]],no,no,['AOD','CHV','CSP','FMA','MSH','MTH','NCI'],[79/2],0,0),ev(-812,'C0439508','/Year','per year',[year],[tmco],[[[4,4],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[87/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([negation(nega,no,[7/2],['C2979982':'VAGINAL BLEEDING'],[10/16]),negation(nega,not,[28/3],['C0241028':'SEXUALLY ACTIVE'],[32/15])]).
utterance('00000000.tx.1',"GYN -  no vaginal bleeding, not sexually active.",0/48,[]).
phrase('GYN -',[head([lexmatch([gyn]),inputmatch(['GYN']),tag(noun),tokens([gyn])]),punc([inputmatch([-]),tokens([])])],0/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0205480','GYN','Gynecologic',[gyn],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[0/3],0,0)])]).
phrase('no vaginal bleeding,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([vaginal]),inputmatch([vaginal]),tag(adj),tokens([vaginal])]),head([lexmatch([bleeding]),inputmatch([bleeding]),tag(noun),tokens([bleeding])]),punc([inputmatch([',']),tokens([])])],7/20,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C2979982','VAGINAL BLEEDING','Vaginal Hemorrhage',[vaginal,bleeding],[dsyn],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','COSTAR','CST','DXP','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NLMSubSyn','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[10/16],0,1)])]).
phrase('not sexually active.',[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])]),adv([lexmatch([sexually]),inputmatch([sexually]),tag(adv),tokens([sexually])]),head([lexmatch([active]),inputmatch([active]),tag(adj),tokens([active])]),punc([inputmatch(['.']),tokens([])])],28/20,[]).
candidates(6,0,0,6,[]).
mappings([map(-901,[ev(-660,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],no,no,['LNC','MTH','NCI'],[28/3],0,0),ev(-901,'C0241028','SEXUALLY ACTIVE','Sexually active',[sexually,active],[fndg],[[[2,2],[1,1],0],[[3,3],[2,2],0]],yes,no,['CHV','DXP','SNOMEDCT_US'],[32/15],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Exercise - none,",0/16,[]).
phrase('Exercise -',[head([lexmatch([exercise]),inputmatch(['Exercise']),tag(noun),tokens([exercise])]),punc([inputmatch([-]),tokens([])])],0/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1522704','Exercise','Exercise Pain Management',[exercise],[topp],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[0/8],0,0)])]).
phrase('none,',[pron([lexmatch([none]),inputmatch([none]),tag(pron),tokens([none])]),punc([inputmatch([',']),tokens([])])],11/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Problems FH breast cancer : 37 yo s -died 41, second sister dx age 51 FH myocardial infarction : mother died 66 yo",0/114,[]).
phrase('Problems FH breast cancer',[mod([lexmatch([problems]),inputmatch(['Problems']),tag(noun),tokens([problems])]),mod([lexmatch([fh]),inputmatch(['FH']),tag(noun),tokens([fh])]),head([lexmatch(['breast cancer']),inputmatch([breast,cancer]),tag(noun),tokens([breast,cancer])])],0/25,[]).
candidates(17,9,0,8,[]).
mappings([map(-824,[ev(-645,'C1546466','Problems','Problems - What subject filter',[problems],[idcn],[[[1,1],[1,1],0]],no,no,['HL7V2.5','MTH'],[0/8],0,0),ev(-861,'C0006142','-- Breast Cancer','Malignant neoplasm of breast',[breast,cancer],[neop],[[[3,4],[1,2],0]],yes,no,['AOD','CCS','CHV','CSP','ICD10CM','ICPC','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NLMSubSyn','OMIM','PDQ','SNOMEDCT_US'],[12/13],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],26/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('37 yo',[shapes([inputmatch(['37']),features([integer]),tokens(['37'])]),head([lexmatch([yo]),inputmatch([yo]),tag(noun),tokens([yo])])],28/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C1413296','Yo','CDR2 gene',[yo],[gngm],[[[2,2],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[31/2],0,0)])]).
phrase('s -',[aux([lexmatch([s]),inputmatch([s,-]),tag(aux),tokens([s])])],34/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(died,[verb([lexmatch([died]),inputmatch([died]),tag(verb),tokens([died])])],37/4,[]).
candidates(8,5,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0011065','Died','Cessation of life',[died],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','GO','ICPC','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','SNOMEDCT_US'],[37/4],0,0)])]).
phrase('41,',[shapes([inputmatch(['41']),features([integer]),tokens(['41'])]),punc([inputmatch([',']),tokens([])])],42/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('second sister dx age 51 FH myocardial infarction',[mod([lexmatch([second]),inputmatch([second]),tag(adj),tokens([second])]),mod([lexmatch([sister]),inputmatch([sister]),tag(noun),tokens([sister])]),mod([lexmatch([dx]),inputmatch([dx]),tag(noun),tokens([dx])]),mod([lexmatch([age]),inputmatch([age]),tag(noun),tokens([age])]),shapes([inputmatch(['51']),features([integer]),tokens(['51'])]),mod([lexmatch([fh]),inputmatch(['FH']),tag(noun),tokens([fh])]),head([lexmatch(['myocardial infarction']),inputmatch([myocardial,infarction]),tag(noun),tokens([myocardial,infarction])])],46/48,[]).
candidates(18,3,0,15,[]).
mappings([map(-750,[ev(-626,'C0205436','Second','second (number)',[second],[qnco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[46/6],0,0),ev(-626,'C0337514','Sister','Sister',[sister],[famg],[[[2,2],[1,1],0]],no,no,['CHV','CSP','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[53/6],0,0),ev(-626,'C3538936','DX','Device Exposure Domain',[dx],[idcn],[[[3,3],[1,1],0]],no,no,['MTH','NCI','NCI_CDISC'],[60/2],0,0),ev(-626,'C0001779','AGE','Age',[age],[orga],[[[4,4],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_BRIDG','NCI_CDISC','NCI_FDA','NCI_NICHD','SNMI','SNOMEDCT_US'],[63/3],0,0),ev(-812,'C2926063','Myocardial infarction','Myocardial infarction:Finding:Point in time:^Patient:Ordinal',[myocardial,infarction],[clna],[[[7,8],[1,2],0]],yes,no,['LNC','MTH','NLMSubSyn'],[73/21],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],95/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(mother,[head([lexmatch([mother]),inputmatch([mother]),tag(noun),tokens([mother])])],97/6,[]).
candidates(3,2,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0026591','Mother','Mother (person)',[mother],[famg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[97/6],0,0)])]).
phrase(died,[verb([lexmatch([died]),inputmatch([died]),tag(verb),tokens([died])])],104/4,[]).
candidates(8,5,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0011065','Died','Cessation of life',[died],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','GO','ICPC','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','SNOMEDCT_US'],[104/4],0,0)])]).
phrase('66 yo',[shapes([inputmatch(['66']),features([integer]),tokens(['66'])]),head([lexmatch([yo]),inputmatch([yo]),tag(noun),tokens([yo])])],109/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C1413296','Yo','CDR2 gene',[yo],[gngm],[[[2,2],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[112/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Hypertension -high today - taking all her meds. ",0/48,[]).
phrase('Hypertension -high today -',[mod([lexmatch([hypertension]),inputmatch(['Hypertension']),tag(noun),tokens([hypertension])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([high]),inputmatch([high]),tag(adj),tokens([high])]),head([lexmatch([today]),inputmatch([today]),tag(noun),tokens([today])]),punc([inputmatch([-]),tokens([])])],0/26,[]).
candidates(9,0,0,9,[]).
mappings([map(-851,[ev(-660,'C0020538','HYPERTENSION','Hypertensive disease',[hypertension],[dsyn],[[[1,1],[1,1],0]],no,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[0/12],0,0),ev(-660,'C1299351','High','Abnormally high',[high],[qlco],[[[2,2],[1,1],0]],no,no,['CHV','HL7V3.0','MTH','SNOMEDCT_US'],[14/4],0,0),ev(-827,'C0750526','Today','Today (temporal qualifier)',[today],[tmco],[[[3,3],[1,1],0]],yes,no,['CHV','MTH','NCI'],[19/5],0,0)])]).
phrase(taking,[verb([lexmatch([taking]),inputmatch([taking]),tag(verb),tokens([taking])])],27/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-966,[ev(-966,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],1]],yes,no,['NCI','SNOMEDCT_US'],[27/6],0,0)])]).
phrase('all her meds.',[pron([lexmatch([all]),inputmatch([all]),tag(pron),tokens([all])]),pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),head([lexmatch([meds]),inputmatch([meds]),tag(noun),tokens([meds])]),punc([inputmatch(['.']),tokens([])])],34/13,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3280240','MEDS','MICROCEPHALY, EPILEPSY, AND DIABETES SYNDROME',[meds],[dsyn],[[[1,1],[1,1],0]],yes,no,['OMIM'],[42/4],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Will start doing some exercise and trying to lose weight. ",48/58,[]).
phrase('Will',[modal([lexmatch([will]),inputmatch(['Will']),tag(modal),tokens([will])])],48/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(start,[verb([lexmatch([start]),inputmatch([start]),tag(verb),tokens([start])])],53/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0439659','Start','Beginning',[start],[tmco],[[[1,1],[1,1],0]],yes,no,['CHV','LCH','LNC','MTH','NCI','SNOMEDCT_US'],[53/5],0,0)])]).
phrase(doing,[aux([lexmatch([doing]),inputmatch([doing]),tag(aux),tokens([doing])])],59/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('some exercise',[det([lexmatch([some]),inputmatch([some]),tag(det),tokens([some])]),head([lexmatch([exercise]),inputmatch([exercise]),tag(noun),tokens([exercise])])],65/13,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1522704','Exercise','Exercise Pain Management',[exercise],[topp],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[70/8],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],79/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(trying,[head([lexmatch([trying]),inputmatch([trying]),tag(noun),tokens([trying])])],83/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],90/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[90/2],0,0)])]).
phrase(lose,[verb([lexmatch([lose]),inputmatch([lose]),tag(verb),tokens([lose])])],93/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('weight.',[head([lexmatch([weight]),inputmatch([weight]),tag(noun),tokens([weight])]),punc([inputmatch(['.']),tokens([])])],98/7,[]).
candidates(5,1,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1305866',weight,'Weighing patient',[weight],[diap],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','MTH','NLMSubSyn','SNMI','SNOMEDCT_US'],[98/6],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Gets it checked at work and 120-130/70 all the time by the nurse there. ",106/72,[]).
phrase('Gets',[head([lexmatch([gets]),inputmatch(['Gets']),tag(noun),tokens([gets])])],106/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(it,[pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])])],111/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('checked at work',[verb([lexmatch([checked]),inputmatch([checked]),tag(verb),tokens([checked])]),prep([lexmatch([at]),inputmatch([at]),tag(prep),tokens([at])]),mod([lexmatch([work]),inputmatch([work]),tag(noun),tokens([work])])],114/15,[]).
candidates(2,0,0,2,[]).
mappings([map(-746,[ev(-790,'C1283174','Checked','Checking (action)',[checked],[acty],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI','SNOMEDCT_US'],[114/7],0,0),ev(-790,'C0043227','Work','Work',[work],[ocac],[[[3,3],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[125/4],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],130/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('120-130/70',[shapes([inputmatch(['120']),features([integer]),tokens(['120'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['130',/,'70']),features([fraction]),tokens(['130','70'])])],134/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-827,[ev(-827,'C3842584','70%','70%',['70'],[fndg],[[[3,3],[1,1],0]],yes,no,['LNC'],[142/2],0,0)])]).
phrase('all the time by the nurse there.',[det([lexmatch([all]),inputmatch([all]),tag(det),tokens([all])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),head([lexmatch([time]),inputmatch([time]),tag(noun),tokens([time])]),prep([lexmatch([by]),inputmatch([by]),tag(prep),tokens([by])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch([nurse]),inputmatch([nurse]),tag(noun),tokens([nurse])]),adv([lexmatch([there]),inputmatch([there]),tag(adv),tokens([there])]),punc([inputmatch(['.']),tokens([])])],145/32,[]).
candidates(8,3,0,5,[]).
mappings([map(-652,[ev(-581,'C0444868','ALL','All',[all],[qnco],[[[1,1],[1,1],0]],no,no,['CHV','HL7V3.0','HPO','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[145/3],0,0),ev(-748,'C0040223','TIME','Time',[time],[tmco],[[[3,3],[1,1],0]],yes,no,['CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NICHD','SNOMEDCT_US'],[153/4],0,0),ev(-581,'C0028661','NURSE','Nurses',[nurse],[prog],[[[6,6],[1,1],0]],no,no,['AOD','CHV','CSP','DXP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[165/5],0,0)])]).
'EOU'.
utterance('00000000.tx.4',"Was 138/74 recently with  Dr Koch's who found that acceptable.  ",178/64,[]).
phrase('Was',[aux([lexmatch([was]),inputmatch(['Was']),tag(aux),tokens([was])])],178/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('138/74 recently with  Dr Koch\'s',[shapes([inputmatch(['138',/,'74']),features([fraction]),tokens(['138','74'])]),adv([lexmatch([recently]),inputmatch([recently]),tag(adv),tokens([recently])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),mod([lexmatch([koch]),inputmatch(['Koch\'s']),tag(noun),tokens([koch])])],182/31,[]).
candidates(6,0,0,6,[]).
mappings([map(-672,[ev(-753,'C0332185','Recently','Recent',[recently],[tmco],[[[3,3],[1,1],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[189/8],0,0),ev(-753,'C0031831','DR','Physicians',[dr],[prog],[[[5,5],[1,1],0]],yes,no,['AOD','AOT','CHV','CSP','DXP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US'],[204/2],0,0)])]).
phrase(who,[pron([lexmatch([who]),inputmatch([who]),tag(pron),tokens([who])])],214/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(found,[verb([lexmatch([found]),inputmatch([found]),tag(verb),tokens([found])])],218/5,[]).
candidates(2,1,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0150312','Found','Present',[found],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[218/5],0,0)])]).
phrase('that acceptable.',[compl([lexmatch([that]),inputmatch([that]),tag(compl),tokens([that])]),head([lexmatch([acceptable]),inputmatch([acceptable]),tag(adj),tokens([acceptable])]),punc([inputmatch(['.']),tokens([])])],224/16,[]).
candidates(4,2,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1879533','Acceptable','Acceptable',[acceptable],[qlco],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[229/10],0,0)])]).
'EOU'.
utterance('00000000.tx.5',"Will check and chart it and if &gt; ",242/36,[]).
phrase('Will',[modal([lexmatch([will]),inputmatch(['Will']),tag(modal),tokens([will])])],242/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(check,[verb([lexmatch([check]),inputmatch([check]),tag(verb),tokens([check])])],247/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1283174','Check','Checking (action)',[check],[acty],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI','SNOMEDCT_US'],[247/5],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],253/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(chart,[verb([lexmatch([chart]),inputmatch([chart]),tag(verb),tokens([chart])])],257/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0684240','Chart','Charts (publication)',[chart],[inpr],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','MSH','MTH','SNOMEDCT_US'],[257/5],0,0)])]).
phrase(it,[pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])])],263/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],266/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(if,[conj([lexmatch([if]),inputmatch([if]),tag(conj),tokens([if])])],270/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('&gt',[punc([inputmatch([&]),tokens([])]),head([lexmatch([gt]),inputmatch([gt]),tag(noun),tokens([gt])])],273/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1435727','GT','FABP6 protein, human',[gt],[aapp,bacs],[[[1,1],[1,1],0]],yes,no,['MSH','MTH','NCI'],[274/2],0,0)])]).
phrase(;,[punc([inputmatch([;]),tokens([])])],276/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.6',"140 to rtc sooner",278/17,[]).
phrase('140 to rtc sooner',[shapes([inputmatch(['140']),features([integer]),tokens(['140'])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),mod([lexmatch([rtc]),inputmatch([rtc]),tag(noun),tokens([rtc])]),adv([lexmatch([sooner]),inputmatch([sooner]),tag(adv),tokens([sooner])])],278/17,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([negation(nega,not,[29/3],['C1299586':'Difficult'],[63/9])]).
utterance('00000000.tx.1',"Uterine fibroids : u/s 2062 -not seen Dr Foust since 2066 when difficult to obtain her Pap smear . We were able to get it with difficulty in 2070",0/145,[]).
phrase('Uterine fibroids',[head([lexmatch(['uterine fibroids']),inputmatch(['Uterine',fibroids]),tag(noun),tokens([uterine,fibroids])])],0/16,[]).
candidates(5,1,0,4,[]).
mappings([map(-1000,[ev(-1000,'C0042133','Uterine Fibroids','Uterine Fibroids',[uterine,fibroids],[neop],[[[1,2],[1,2],0]],yes,no,['CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','LCH_NW','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','OMIM','PDQ','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[0/16],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],17/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('u/s 2062 -',[mod([lexmatch(['u/s']),inputmatch([u,/,s]),tag(noun),tokens([u,s])]),shapes([inputmatch(['2062']),features([integer]),tokens(['2062'])]),punc([inputmatch([-]),tokens([])])],19/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-901,[ev(-901,'C0041703','U S','United States',[u,s],[geoa],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['AOD','CHV','CSP','HL7V3.0','LCH','LNC','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[19/1,20/1],0,0)])]).
phrase(not,[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])])],29/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[29/3],0,0)])]).
phrase(seen,[verb([lexmatch([seen]),inputmatch([seen]),tag(verb),tokens([seen])])],33/4,[]).
candidates(3,2,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0205397','Seen',seen,[seen],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','SNMI','SNOMEDCT_US'],[33/4],0,0)])]).
phrase('Dr Foust since 2066',[mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),mod([inputmatch(['Foust']),tag(noun),tokens([foust])]),adv([lexmatch([since]),inputmatch([since]),tag(adv),tokens([since])]),shapes([inputmatch(['2066']),features([integer]),tokens(['2066'])])],38/19,[]).
candidates(5,0,0,5,[]).
mappings([map(-812,[ev(-812,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[38/2],0,0)])]).
phrase(when,[conj([lexmatch([when]),inputmatch([when]),tag(conj),tokens([when])])],58/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(difficult,[head([lexmatch([difficult]),inputmatch([difficult]),tag(adj),tokens([difficult])])],63/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1299586','Difficult','Has difficulty doing (qualifier value)',[difficult],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[63/9],0,1)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],73/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[73/2],0,0)])]).
phrase(obtain,[verb([lexmatch([obtain]),inputmatch([obtain]),tag(verb),tokens([obtain])])],76/6,[]).
candidates(8,6,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1706701','Obtain','Acquisition (action)',[obtain],[acty],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[76/6],0,0)])]).
phrase('her Pap smear .',[pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),head([lexmatch(['pap smear']),inputmatch(['Pap',smear]),tag(noun),tokens([pap,smear])]),punc([inputmatch(['.']),tokens([])])],83/15,[]).
candidates(7,0,0,7,[]).
mappings([map(-1000,[ev(-1000,'C0079104','PAP Smear','Pap smear',[pap,smear],[diap],[[[1,2],[1,2],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','PDQ','SNOMEDCT_US'],[87/9],0,0)])]).
phrase('We',[pron([lexmatch([we]),inputmatch(['We']),tag(pron),tokens([we])])],99/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(were,[aux([lexmatch([were]),inputmatch([were]),tag(aux),tokens([were])])],102/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(able,[head([lexmatch([able]),inputmatch([able]),tag(adj),tokens([able])])],107/4,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1299581','Able','Able (finding)',[able],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','SNOMEDCT_US'],[107/4],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],112/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[112/2],0,0)])]).
phrase(get,[verb([lexmatch([get]),inputmatch([get]),tag(verb),tokens([get])])],115/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('it with difficulty',[pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([difficulty]),inputmatch([difficulty]),tag(noun),tokens([difficulty])])],119/18,[]).
candidates(2,1,0,1,[]).
mappings([map(-790,[ev(-790,'C1299586','Difficulty','Has difficulty doing (qualifier value)',[difficulty],[fndg],[[[3,3],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[127/10],0,0)])]).
phrase('in 2070',[prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),shapes([inputmatch(['2070']),features([integer]),tokens(['2070'])])],138/7,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Smoking : quit 2/67 s/p MI - still not smoking!",0/47,[]).
phrase('Smoking',[head([lexmatch([smoking]),inputmatch(['Smoking']),tag(noun),tokens([smoking])])],0/7,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0453996','Smoking','Tobacco smoking behavior',[smoking],[inbe],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','DXP','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[0/7],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],8/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('quit 2/67 s/p MI - still',[mod([lexmatch([quit]),inputmatch([quit]),tag(noun),tokens([quit])]),shapes([inputmatch(['2',/,'67']),features([fraction]),tokens(['2','67'])]),prep([lexmatch(['s/p']),inputmatch([s,/,p]),tag(prep),tokens([s,p])]),mod([lexmatch([mi]),inputmatch(['MI']),tag(noun),tokens([mi])]),punc([inputmatch([-]),tokens([])]),adv([lexmatch([still]),inputmatch([still]),tag(adv),tokens([still])])],10/24,[]).
candidates(4,0,0,4,[]).
mappings([map(-706,[ev(-748,'C0748223','QUIT','QUIT',[quit],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[10/4],0,0),ev(-774,'C1440961','Mi-2','Mi-2',[mi,'2'],[imft],[[[6,6],[1,1],0],[[2,2],[2,2],0]],yes,no,['LNC'],[15/1,24/2],0,0)])]).
phrase('not smoking!',[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])]),head([lexmatch([smoking]),inputmatch([smoking]),tag(noun),tokens([smoking])]),punc([inputmatch([!]),tokens([])])],35/12,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-694,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],no,no,['LNC','MTH','NCI'],[35/3],0,0),ev(-861,'C0453996','Smoking','Tobacco smoking behavior',[smoking],[inbe],[[[2,2],[1,1],0]],yes,no,['CHV','CSP','DXP','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[39/7],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"borderline diabetes mellitus : 4/63 125 , follow hgbaic - was 6.5/131 in 12/70, gradually rising, recheck glc and a1c today",0/123,[]).
phrase('borderline diabetes mellitus',[mod([lexmatch([borderline]),inputmatch([borderline]),tag(adj),tokens([borderline])]),head([lexmatch(['diabetes mellitus']),inputmatch([diabetes,mellitus]),tag(noun),tokens([diabetes,mellitus])])],0/28,[]).
candidates(7,1,0,6,[]).
mappings([map(-1000,[ev(-1000,'C0856873','Borderline Diabetes Mellitus','borderline diabetes',[borderline,diabetes,mellitus],[dsyn],[[[1,1],[1,1],0],[[2,3],[2,3],0]],yes,no,['CHV','NLMSubSyn'],[0/28],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],29/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('4/63 125 ,',[shapes([inputmatch(['4',/,'63']),features([fraction]),tokens(['4','63'])]),shapes([inputmatch(['125']),features([integer]),tokens(['125'])]),punc([inputmatch([',']),tokens([])])],31/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-827,[ev(-827,'C3838679','4+','4+ Answer to question',['4'],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[31/1],0,0)])]).
phrase(follow,[verb([lexmatch([follow]),inputmatch([follow]),tag(verb),tokens([follow])])],42/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1719822','Follow','Follow',[follow],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','SNOMEDCT_US'],[42/6],0,0)])]).
phrase('hgbaic -',[head([inputmatch([hgbaic]),tag(noun),tokens([hgbaic])]),punc([inputmatch([-]),tokens([])])],49/8,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(was,[aux([lexmatch([was]),inputmatch([was]),tag(aux),tokens([was])])],58/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('6.5/131 in 12/70,',[shapes([inputmatch(['6','.','5']),features([real_number]),tokens(['6','5'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['131']),features([integer]),tokens(['131'])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),shapes([inputmatch(['12',/,'70']),features([fraction]),tokens(['12','70'])]),punc([inputmatch([',']),tokens([])])],62/17,[]).
candidates(3,0,0,3,[]).
mappings([map(-722,[ev(-790,'C0442749','6/5','6/5',['6','5'],[fndg],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','SNOMEDCT_US'],[62/3],0,0),ev(-753,'C3842584','70%','70%',['70'],[fndg],[[[6,6],[1,1],0]],yes,no,['LNC'],[76/2],0,0)]),map(-722,[ev(-783,'C0442752','6/12','Distance vision 6/12',['6','12'],[fndg],[[[1,1],[1,1],0],[[5,5],[2,2],0]],yes,no,['CHV','SNOMEDCT_US'],[62/1,73/2],0,0),ev(-753,'C3842584','70%','70%',['70'],[fndg],[[[6,6],[1,1],0]],yes,no,['LNC'],[76/2],0,0)])]).
phrase('gradually rising,',[adv([lexmatch([gradually]),inputmatch([gradually]),tag(adv),tokens([gradually])]),head([lexmatch([rising]),inputmatch([rising]),tag(noun),tokens([rising])]),punc([inputmatch([',']),tokens([])])],80/17,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('recheck glc',[mod([lexmatch([recheck]),inputmatch([recheck]),tag(noun),tokens([recheck])]),head([lexmatch([glc]),inputmatch([glc]),tag(noun),tokens([glc])])],98/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C0008556','GLC','Chromatography, Gas-Liquid',[glc],[lbpr],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','HL7V3.0','MSH','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[106/3],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],110/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('a1c today',[mod([inputmatch([a1c]),tag(noun),tokens([a1c])]),head([lexmatch([today]),inputmatch([today]),tag(noun),tokens([today])])],114/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C0310367','Today','Today',[today],[antb,orch],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','RXNORM'],[118/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([negation(nega,denies,[80/6],['C1963093':'Dizziness'],[95/9]),negation(nega,no,[198/2],['C0521989':'associated symptoms'],[201/19])]).
utterance('00000000.tx.1',"VPB : 2065 - ETT showed freq PVC's, bigeminy and couplets, nondx for ischemia - denies palp or dizziness.  ",0/107,[]).
phrase('VPB',[head([lexmatch([vpb]),inputmatch(['VPB']),tag(noun),tokens([vpb])])],0/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0151636','VPB','Premature ventricular contractions',[vpb],[patf],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LNC','MSH','MTH','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[0/3],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],4/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('2065 - ETT',[shapes([inputmatch(['2065']),features([integer]),tokens(['2065'])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([ett]),inputmatch(['ETT']),tag(noun),tokens([ett])])],6/10,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(showed,[verb([lexmatch([showed]),inputmatch([showed]),tag(verb),tokens([showed])])],17/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-966,[ev(-966,'C1547282','Show','Show',[show],[anim],[[[1,1],[1,1],1]],yes,no,['HL7V2.5','HL7V3.0'],[17/6],0,0)])]).
phrase('freq PVC\'s,',[mod([inputmatch([freq]),tag(noun),tokens([freq])]),head([lexmatch([pvc]),inputmatch(['PVC\'s']),tag(noun),tokens([pvc])]),punc([inputmatch([',']),tokens([])])],24/11,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-694,'C1414814','FREQ','NCS1 gene',[freq],[gngm],[[[1,1],[1,1],0]],no,no,['HGNC','MTH','OMIM'],[24/4],0,0),ev(-861,'C0151636','PVC\'S','Premature ventricular contractions',[pvc],[patf],[[[2,2],[1,1],0]],yes,no,['CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LNC','MSH','MTH','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[29/5],0,0)])]).
phrase(bigeminy,[head([lexmatch([bigeminy]),inputmatch([bigeminy]),tag(noun),tokens([bigeminy])])],36/8,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1963278','Bigeminy','Bigeminy Adverse Event',[bigeminy],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CTCAE'],[36/8],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],45/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('couplets,',[head([lexmatch([couplets]),inputmatch([couplets]),tag(noun),tokens([couplets])]),punc([inputmatch([',']),tokens([])])],49/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0429001','Couplets','Paired ventricular premature complexes',[couplets],[patf],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_CDISC','NLMSubSyn','OMIM','SNOMEDCT_US'],[49/8],0,0)])]).
phrase('nondx for ischemia -',[head([inputmatch([nondx]),tag(noun),tokens([nondx])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([ischemia]),inputmatch([ischemia]),tag(noun),tokens([ischemia])]),punc([inputmatch([-]),tokens([])])],59/20,[]).
candidates(2,1,0,1,[]).
mappings([map(-623,[ev(-623,'C0022116','ISCHEMIA','Ischemia',[ischemia],[patf],[[[3,3],[1,1],0]],no,no,['AOD','CHV','COSTAR','CSP','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US'],[69/8],0,0)])]).
phrase(denies,[verb([lexmatch([denies]),inputmatch([denies]),tag(verb),tokens([denies])])],80/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C2700401','Deny','Deny (action)',[deny],[acty],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[80/6],0,0)])]).
phrase(palp,[head([lexmatch([palp]),inputmatch([palp]),tag(noun),tokens([palp])])],87/4,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1412365','PALP','ALPP gene',[palp],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH','NCI','NLMSubSyn','OMIM'],[87/4],0,0)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],92/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('dizziness.',[head([lexmatch([dizziness]),inputmatch([dizziness]),tag(noun),tokens([dizziness])]),punc([inputmatch(['.']),tokens([])])],95/10,[]).
candidates(6,3,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1963093','Dizziness','Dizziness Adverse Event',[dizziness],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CTCAE'],[95/9],0,1)])]).
'EOU'.
utterance('00000000.tx.2',"Does occasionally feel a split second palpitation.  ",107/52,[]).
phrase('Does',[aux([lexmatch([does]),inputmatch(['Does']),tag(aux),tokens([does])])],107/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(occasionally,[adv([lexmatch([occasionally]),inputmatch([occasionally]),tag(adv),tokens([occasionally])])],112/12,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1998882','Occasionally','Sometimes',[occasionally],[tmco],[[[1,1],[1,1],0]],yes,no,['LNC','NCI'],[112/12],0,0)])]).
phrase(feel,[verb([lexmatch([feel]),inputmatch([feel]),tag(verb),tokens([feel])])],125/4,[]).
candidates(2,1,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0013987',feel,'Emotions',[feel],[menp],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','ICF','ICF-CY','LCH','LCH_NW','MSH','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[125/4],0,0)])]).
phrase('a split second palpitation.',[det([lexmatch([a]),inputmatch([a]),tag(det),tokens([a])]),mod([lexmatch(['split second']),inputmatch([split,second]),tag(adj),tokens([split,second])]),head([lexmatch([palpitation]),inputmatch([palpitation]),tag(noun),tokens([palpitation])]),punc([inputmatch(['.']),tokens([])])],130/27,[]).
candidates(10,2,0,8,[]).
mappings([map(-851,[ev(-660,'C1881714','Split','Medical Device Material Split',[split],[phpr],[[[1,1],[1,1],0]],no,no,['MTH','NCI','NCI_FDA'],[132/5],0,0),ev(-660,'C0457385','SECOND',seconds,[second],[tmco],[[[2,2],[1,1],0]],no,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_ICH','NCI_UCUM','SNOMEDCT_US'],[138/6],0,0),ev(-827,'C0030252','PALPITATION','Palpitations',[palpitation],[fndg],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LNC','MTH','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[145/11],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Takes a deep breath and it goes away.  ",159/39,[]).
phrase('Takes',[verb([lexmatch([takes]),inputmatch(['Takes']),tag(verb),tokens([takes])])],159/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],0]],yes,no,['NCI','SNOMEDCT_US'],[159/5],0,0)])]).
phrase('a deep breath',[det([lexmatch([a]),inputmatch([a]),tag(det),tokens([a])]),mod([lexmatch([deep]),inputmatch([deep]),tag(adj),tokens([deep])]),head([lexmatch([breath]),inputmatch([breath]),tag(noun),tokens([breath])])],165/13,[]).
candidates(4,1,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1321587','deep breath','Breathing abnormally deep',[deep,breath],[sosy],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','MTH','NLMSubSyn','SNOMEDCT_US'],[167/11],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],179/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(it,[pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])])],183/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(goes,[verb([lexmatch([goes]),inputmatch([goes]),tag(verb),tokens([goes])])],186/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1947959','Goes','Goes <invertebrate>',[goes],[euka],[[[1,1],[1,1],0]],yes,no,['MTH','NCBI'],[186/4],0,0)])]).
phrase('away.',[adv([lexmatch([away]),inputmatch([away]),tag(adv),tokens([away])]),punc([inputmatch(['.']),tokens([])])],191/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.4',"No associated symptoms. ",198/24,[]).
phrase('No associated symptoms.',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),mod([lexmatch([associated]),inputmatch([associated]),tag(adj),tokens([associated])]),head([lexmatch([symptoms]),inputmatch([symptoms]),tag(noun),tokens([symptoms])]),punc([inputmatch(['.']),tokens([])])],198/23,[]).
candidates(8,4,0,4,[]).
mappings([map(-1000,[ev(-1000,'C0521989','associated symptoms','Associated symptom',[associated,symptoms],[sosy],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','SNMI','SNOMEDCT_US'],[201/19],0,1)])]).
'EOU'.
utterance('00000000.tx.5',"Feels it rarely",222/15,[]).
phrase('Feels',[verb([lexmatch([feels]),inputmatch(['Feels']),tag(verb),tokens([feels])])],222/5,[]).
candidates(2,1,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0013987',feel,'Emotions',[feel],[menp],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','ICF','ICF-CY','LCH','LCH_NW','MSH','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[222/5],0,0)])]).
phrase('it rarely',[pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])]),adv([lexmatch([rarely]),inputmatch([rarely]),tag(adv),tokens([rarely])])],228/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0522498','Rarely','Rare',[rarely],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[231/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Coronary artery disease : s/p ant SEMI + stent LAD 2/67, Dr Oakley, ETT Clarkfield 3/67 - neg scan for ischemia. ",0/113,[]).
phrase('Coronary artery disease',[head([lexmatch(['coronary artery disease']),inputmatch(['Coronary',artery,disease]),tag(noun),tokens([coronary,artery,disease])])],0/23,[]).
candidates(16,4,0,12,[]).
mappings([map(-1000,[ev(-1000,'C0010054','coronary artery disease','Coronary Arteriosclerosis',[coronary,artery,disease],[dsyn],[[[1,3],[1,3],0]],yes,no,['CCS','CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NLMSubSyn','OMIM','QMR','SNM','SNMI','SNOMEDCT_US'],[0/23],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],24/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s/p ant SEMI + stent LAD 2/67,',[prep([lexmatch(['s/p']),inputmatch([s,/,p]),tag(prep),tokens([s,p])]),mod([lexmatch([ant]),inputmatch([ant]),tag(noun),tokens([ant])]),mod([lexmatch([semi]),inputmatch(['SEMI']),tag(noun),tokens([semi])]),punc([inputmatch([+]),tokens([])]),mod([lexmatch([stent]),inputmatch([stent]),tag(noun),tokens([stent])]),mod([lexmatch([lad]),inputmatch(['LAD']),tag(noun),tokens([lad])]),shapes([inputmatch(['2',/,'67']),features([fraction]),tokens(['2','67'])]),punc([inputmatch([',']),tokens([])])],26/30,[]).
candidates(3,0,0,3,[]).
mappings([map(-728,[ev(-799,'C0003455','Ant','Ants',[ant],[euka],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','MSH','MTH','NCBI','SNM','SNMI','SNOMEDCT_US'],[30/3],0,0),ev(-799,'C0038257','Stent','Stent, device',[stent],[medd],[[[3,3],[1,1],0]],yes,no,['CHV','CSP','MSH','MTH','SNMI','SNOMEDCT_US'],[41/5],0,0)])]).
phrase('Dr Oakley,',[mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),head([lexmatch([oakley]),inputmatch(['Oakley']),tag(noun),tokens([oakley])]),punc([inputmatch([',']),tokens([])])],57/10,[]).
candidates(5,0,0,5,[]).
mappings([map(-694,[ev(-694,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[1,1],[1,1],0]],no,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[57/2],0,0)])]).
phrase('ETT Clarkfield 3/67 - neg scan for ischemia.',[mod([lexmatch([ett]),inputmatch(['ETT']),tag(noun),tokens([ett])]),mod([inputmatch(['Clarkfield']),tag(noun),tokens([clarkfield])]),shapes([inputmatch(['3',/,'67']),features([fraction]),tokens(['3','67'])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([neg]),inputmatch([neg]),tag(noun),tokens([neg])]),head([lexmatch([scan]),inputmatch([scan]),tag(noun),tokens([scan])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([ischemia]),inputmatch([ischemia]),tag(noun),tokens([ischemia])]),punc([inputmatch(['.']),tokens([])])],68/44,[]).
candidates(6,1,0,5,[]).
mappings([map(-645,[ev(-578,'C3853545','NEG','Negative - answer',[neg],[qlco],[[[5,5],[1,1],0]],no,no,['MTH','NCI'],[90/3],0,0),ev(-744,'C0441633','Scan','Scanning',[scan],[diap],[[[6,6],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNOMEDCT_US'],[94/4],0,0),ev(-578,'C0022116','ISCHEMIA','Ischemia',[ischemia],[patf],[[[8,8],[1,1],0]],no,no,['AOD','CHV','COSTAR','CSP','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US'],[103/8],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"No CP's, palp. ",113/15,[]).
phrase('No CP\'s,',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([cp]),inputmatch(['CP\'s']),tag(noun),tokens([cp])]),punc([inputmatch([',']),tokens([])])],113/8,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('palp.',[head([lexmatch([palp]),inputmatch([palp]),tag(noun),tokens([palp])]),punc([inputmatch(['.']),tokens([])])],122/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1412365','PALP','ALPP gene',[palp],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH','NCI','NLMSubSyn','OMIM'],[122/4],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Saw Dr Koch 1/75 who rec more aggressive cholesterol mgmt to LDL &lt; ",128/70,[]).
phrase('Saw Dr Koch 1/75',[mod([lexmatch([saw]),inputmatch(['Saw']),tag(noun),tokens([saw])]),mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),mod([lexmatch([koch]),inputmatch(['Koch']),tag(noun),tokens([koch])]),shapes([inputmatch(['1',/,'75']),features([fraction]),tokens(['1','75'])])],128/16,[]).
candidates(6,0,0,6,[]).
mappings([map(-728,[ev(-804,'C0183089','SAW','saw (device)',[saw],[medd],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','SNOMEDCT_US','SPN'],[128/3],0,0),ev(-804,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[132/2],0,0)])]).
phrase('who rec more aggressive cholesterol mgmt to LDL &lt',[pron([lexmatch([who]),inputmatch([who]),tag(pron),tokens([who])]),mod([lexmatch([rec]),inputmatch([rec]),tag(noun),tokens([rec])]),adv([lexmatch([more]),inputmatch([more]),tag(adv),tokens([more])]),mod([lexmatch([aggressive]),inputmatch([aggressive]),tag(adj),tokens([aggressive])]),mod([lexmatch([cholesterol]),inputmatch([cholesterol]),tag(noun),tokens([cholesterol])]),head([lexmatch([mgmt]),inputmatch([mgmt]),tag(noun),tokens([mgmt])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),mod([lexmatch([ldl]),inputmatch(['LDL']),tag(noun),tokens([ldl])]),punc([inputmatch([&]),tokens([])]),mod([lexmatch([lt]),inputmatch([lt]),tag(noun),tokens([lt])])],145/51,[]).
candidates(13,0,0,13,[]).
mappings([map(-693,[ev(-575,'C3272598','WHO','WHO Temperature/Humidity Storage Condition',[who],[qlco],[[[1,1],[1,1],0]],no,no,['MTH','NCI','NCI_FDA'],[145/3],0,0),ev(-575,'C1424025','REC','MCM8 gene',[rec],[gngm],[[[2,2],[1,1],0]],no,no,['HGNC','MTH','OMIM'],[149/3],0,0),ev(-575,'C0580822','Aggressive','Aggressive course',[aggressive],[tmco],[[[4,4],[1,1],0]],no,no,['MTH','NCI','NCI_NCI-GLOSS','SNOMEDCT_US'],[158/10],0,0),ev(-742,'C0069197','MGMT','O(6)-Methylguanine-DNA Methyltransferase',[mgmt],[aapp,enzy],[[[6,6],[1,1],0]],yes,no,['CHV','CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','SNMI','SNOMEDCT_US'],[181/4],0,0),ev(-595,'C0023824','LDL Cholesterol','LDL Cholesterol Lipoproteins',[ldl,cholesterol],[bacs,orch],[[[8,8],[1,1],0],[[5,5],[2,2],0]],no,no,['CHV','LNC','MSH','MTH','NDFRT','NLMSubSyn','SNMI','SNOMEDCT_US'],[169/11,189/3],0,0),ev(-575,'C0023376','LT','Lesotho',[lt],[geoa],[[[9,9],[1,1],0]],no,no,['AOD','LCH','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[194/2],0,0)])]).
phrase(;,[punc([inputmatch([;]),tokens([])])],196/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.4',"70. ",198/4,[]).
phrase('70.',[shapes([inputmatch(['70']),features([integer]),tokens(['70'])]),punc([inputmatch(['.']),tokens([])])],198/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3842584','70%','70%',['70'],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC'],[198/2],0,0)])]).
'EOU'.
utterance('00000000.tx.5',"Increased her lipitor to 80 mg although she hasn't done this yet.",202/65,[]).
phrase('Increased',[verb([lexmatch([increased]),inputmatch(['Increased']),tag(verb),tokens([increased])])],202/9,[]).
candidates(8,6,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0442805','Increased','Increase',[increased],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[202/9],0,0)])]).
phrase('her lipitor to 80 mg',[pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),head([lexmatch([lipitor]),inputmatch([lipitor]),tag(noun),tokens([lipitor])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),shapes([inputmatch(['80']),features([integer]),tokens(['80'])]),mod([lexmatch([mg]),inputmatch([mg]),tag(noun),tokens([mg])])],212/20,[]).
candidates(6,0,0,6,[]).
mappings([map(-696,[ev(-760,'C0593906','Lipitor','Lipitor',[lipitor],[orch,phsu],[[[2,2],[1,1],0]],yes,no,['CHV','CSP','MSH','NCI','NCI_NCI-GLOSS','PDQ','RXNORM'],[216/7],0,0),ev(-593,'C3842583','80%','80%',['80'],[fndg],[[[4,4],[1,1],0]],no,no,['LNC'],[227/2],0,0),ev(-593,'C2346927','Mg++','Magnesium Cation',[mg],[elii,phsu],[[[5,5],[1,1],0]],no,no,['MTH','MTHSPL','NCI','NCI_CRCH','NCI_FDA','RXNORM'],[230/2],0,0)])]).
phrase(although,[conj([lexmatch([although]),inputmatch([although]),tag(conj),tokens([although])])],233/8,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(she,[pron([lexmatch([she]),inputmatch([she]),tag(pron),tokens([she])])],242/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('hasn\'t',[aux([lexmatch(['hasn\'t']),inputmatch([hasn,'\'',t]),tag(aux),tokens([hasn,t])])],246/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(done,[aux([lexmatch([done]),inputmatch([done]),tag(aux),tokens([done])])],253/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('this yet.',[det([lexmatch([this]),inputmatch([this]),tag(det),tokens([this])]),adv([lexmatch([yet]),inputmatch([yet]),tag(adv),tokens([yet])]),punc([inputmatch(['.']),tokens([])])],258/9,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"thyroid nodule : 2065, hot, follow TSH. ",0/40,[]).
phrase('thyroid nodule',[head([lexmatch(['thyroid nodule']),inputmatch([thyroid,nodule]),tag(noun),tokens([thyroid,nodule])])],0/14,[]).
candidates(16,11,0,5,[]).
mappings([map(-1000,[ev(-1000,'C0040137','THYROID NODULE','Thyroid Nodule',[thyroid,nodule],[neop],[[[1,2],[1,2],0]],yes,no,['CHV','COSTAR','DXP','MSH','MTH','MTHICD9','NCI','NDFRT','SNM','SNMI','SNOMEDCT_US'],[0/14],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],15/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('2065,',[shapes([inputmatch(['2065']),features([integer]),tokens(['2065'])]),punc([inputmatch([',']),tokens([])])],17/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('hot,',[head([lexmatch([hot]),inputmatch([hot]),tag(adj),tokens([hot])]),punc([inputmatch([',']),tokens([])])],23/4,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0444519','Hot','Hot sensation quality',[hot],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NLMSubSyn','SNOMEDCT_US'],[23/3],0,0)])]).
phrase(follow,[verb([lexmatch([follow]),inputmatch([follow]),tag(verb),tokens([follow])])],28/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1719822','Follow','Follow',[follow],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','SNOMEDCT_US'],[28/6],0,0)])]).
phrase('TSH.',[head([lexmatch([tsh]),inputmatch(['TSH']),tag(noun),tokens([tsh])]),punc([inputmatch(['.']),tokens([])])],35/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.2',"TReated with RAI February 2071.  ",40/33,[]).
phrase('TReated with RAI February 2071.',[verb([lexmatch([treated]),inputmatch(['TReated']),tag(verb),tokens([treated])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([rai]),inputmatch(['RAI']),tag(noun),tokens([rai])]),mod([lexmatch([february]),inputmatch(['February']),tag(noun),tokens([february])]),shapes([inputmatch(['2071']),features([integer]),tokens(['2071'])]),punc([inputmatch(['.']),tokens([])])],40/31,[]).
candidates(8,2,0,6,[]).
mappings([map(-787,[ev(-806,'C0332293','Treated with','Treated with',[treated,with],[topp],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['MTH','SNMI','SNOMEDCT_US'],[40/12],0,0),ev(-760,'C3539761','RAI','Ribonuclease Inhibitor',[rai],[aapp],[[[3,3],[1,1],0]],yes,no,['MTH','NCI'],[53/3],0,0),ev(-760,'C3830166','February','February',[february],[qlco],[[[4,4],[1,1],0]],yes,no,['NCI'],[57/8],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Last TSH checked 12/71 and was in the normal range.  ",73/53,[]).
phrase('Last TSH',[mod([lexmatch([last]),inputmatch(['Last']),tag(adj),tokens([last])]),head([lexmatch([tsh]),inputmatch(['TSH']),tag(noun),tokens([tsh])])],73/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-694,[ev(-694,'C1517741','Last','Last',[last],[qlco],[[[1,1],[1,1],0]],no,no,['NCI'],[73/4],0,0)])]).
phrase(checked,[verb([lexmatch([checked]),inputmatch([checked]),tag(verb),tokens([checked])])],82/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1283174','Checked','Checking (action)',[checked],[acty],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI','SNOMEDCT_US'],[82/7],0,0)])]).
phrase('12/71',[shapes([inputmatch(['12',/,'71']),features([fraction]),tokens(['12','71'])])],90/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C0450389','71','71',['71'],[inpr],[[[2,2],[1,1],0]],yes,no,['SNOMEDCT_US'],[93/2],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],96/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('was in the normal range.',[aux([lexmatch([was]),inputmatch([was]),tag(aux),tokens([was])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch(['normal range']),inputmatch([normal,range]),tag(noun),tokens([normal,range])]),punc([inputmatch(['.']),tokens([])])],100/24,[]).
candidates(10,0,0,10,[]).
mappings([map(-745,[ev(-760,'C0043194','WAS','Wiskott-Aldrich Syndrome',[was],[dsyn],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','DXP','ICD10CM','ICD9CM','MSH','MTH','NCI','NCI_NCI-GLOSS','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[100/3],0,0),ev(-806,'C0086715','Normal Range','Normal Range',[normal,range],[qnco],[[[4,5],[1,2],0]],yes,no,['CHV','HL7V2.5','MSH','MTH','NCI','NCI_CareLex','NCI_NCI-GLOSS','NLMSubSyn','SNOMEDCT_US'],[111/12],0,0)])]).
'EOU'.
utterance('00000000.tx.4',"To see Dr. ",126/11,[]).
phrase('To',[adv([lexmatch([to]),inputmatch(['To']),tag(adv),tokens([to])])],126/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[126/2],0,0)])]).
phrase(see,[verb([lexmatch([see]),inputmatch([see]),tag(verb),tokens([see])])],129/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[129/3],0,0)])]).
phrase('Dr.',[head([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),punc([inputmatch(['.']),tokens([])])],133/3,[]).
candidates(5,0,0,5,[]).
mappings([map(-1000,[ev(-1000,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[133/2],0,0)])]).
'EOU'.
utterance('00000000.tx.5',"Dolan q. year, although very overdue - still hasn't gone. ",137/58,[]).
phrase('Dolan q. year,',[mod([inputmatch(['Dolan']),tag(noun),tokens([dolan])]),mod([lexmatch([q]),inputmatch([q]),tag(noun),tokens([q])]),punc([inputmatch(['.']),tokens([])]),head([lexmatch([year]),inputmatch([year]),tag(noun),tokens([year])]),punc([inputmatch([',']),tokens([])])],137/14,[]).
candidates(2,0,0,2,[]).
mappings([map(-827,[ev(-827,'C0439508','/Year','per year',[year],[tmco],[[[3,3],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[146/4],0,0)])]).
phrase(although,[conj([lexmatch([although]),inputmatch([although]),tag(conj),tokens([although])])],152/8,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('very overdue -',[adv([lexmatch([very]),inputmatch([very]),tag(adv),tokens([very])]),head([lexmatch([overdue]),inputmatch([overdue]),tag(adj),tokens([overdue])]),punc([inputmatch([-]),tokens([])])],161/14,[]).
candidates(2,0,0,2,[]).
mappings([map(-694,[ev(-694,'C0442824','Very','Very',[very],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','MTH','NCI','SNOMEDCT_US'],[161/4],0,0)])]).
phrase(still,[adv([lexmatch([still]),inputmatch([still]),tag(adv),tokens([still])])],176/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('hasn\'t',[aux([lexmatch(['hasn\'t']),inputmatch([hasn,'\'',t]),tag(aux),tokens([hasn,t])])],182/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('gone.',[head([lexmatch([gone]),inputmatch([gone]),tag(noun),tokens([gone])]),punc([inputmatch(['.']),tokens([])])],189/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.6',"Will make an appt. ",195/19,[]).
phrase('Will',[modal([lexmatch([will]),inputmatch(['Will']),tag(modal),tokens([will])])],195/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(make,[verb([lexmatch([make]),inputmatch([make]),tag(verb),tokens([make])])],200/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1881534','Make','Make - Instruction Imperative',[make],[ftcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[200/4],0,0)])]).
phrase('an appt.',[det([lexmatch([an]),inputmatch([an]),tag(det),tokens([an])]),head([lexmatch([appt]),inputmatch([appt]),tag(noun),tokens([appt])]),punc([inputmatch(['.']),tokens([])])],205/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0245203','APPT','4-azido-7-phenylpyrazolo-(1,5a)-1,3,5-triazine',[appt],[bacs,orch],[[[1,1],[1,1],0]],yes,no,['MSH','MTH'],[208/4],0,0)])]).
'EOU'.
utterance('00000000.tx.7',"Check TSH.",214/10,[]).
phrase('Check TSH.',[mod([lexmatch([check]),inputmatch(['Check']),tag(noun),tokens([check])]),head([lexmatch([tsh]),inputmatch(['TSH']),tag(noun),tokens([tsh])]),punc([inputmatch(['.']),tokens([])])],214/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-694,[ev(-694,'C1283174','Check','Checking (action)',[check],[acty],[[[1,1],[1,1],0]],no,no,['LNC','MTH','NCI','SNOMEDCT_US'],[214/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Hyperlipidemia : CRF mild chol, cigs, HTN, Fhx and known hx CAD in pt. ",0/71,[]).
phrase('Hyperlipidemia',[head([lexmatch([hyperlipidemia]),inputmatch(['Hyperlipidemia']),tag(noun),tokens([hyperlipidemia])])],0/14,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0428465','Hyperlipidemia','Serum lipids high (finding)',[hyperlipidemia],[fndg],[[[1,1],[1,1],0]],yes,no,['HPO','MTH','SNOMEDCT_US','SNOMEDCT_VET'],[0/14],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],15/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('CRF mild chol,',[mod([lexmatch([crf]),inputmatch(['CRF']),tag(noun),tokens([crf])]),mod([lexmatch([mild]),inputmatch([mild]),tag(adj),tokens([mild])]),head([lexmatch([chol]),inputmatch([chol]),tag(noun),tokens([chol])]),punc([inputmatch([',']),tokens([])])],17/14,[]).
candidates(2,0,0,2,[]).
mappings([map(-790,[ev(-660,'C2945599','MILD','Mild (qualifier value)',[mild],[qlco],[[[2,2],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[21/4],0,0),ev(-827,'C0201950','CHOL','Cholesterol measurement test',[chol],[lbpr],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[26/4],0,0)])]).
phrase('cigs,',[head([lexmatch([cigs]),inputmatch([cigs]),tag(noun),tokens([cigs])]),punc([inputmatch([',']),tokens([])])],32/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('HTN,',[head([lexmatch([htn]),inputmatch(['HTN']),tag(noun),tokens([htn])]),punc([inputmatch([',']),tokens([])])],38/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0020538','HTN','Hypertensive disease',[htn],[dsyn],[[[1,1],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[38/3],0,0)])]).
phrase('Fhx',[head([lexmatch([fhx]),inputmatch(['Fhx']),tag(noun),tokens([fhx])])],43/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1428412','FHX','FOXJ2 gene',[fhx],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH'],[43/3],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],47/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('known hx CAD in pt.',[mod([lexmatch([known]),inputmatch([known]),tag(adj),tokens([known])]),mod([lexmatch([hx]),inputmatch([hx]),tag(noun),tokens([hx])]),head([lexmatch([cad]),inputmatch(['CAD']),tag(noun),tokens([cad])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([pt]),inputmatch([pt]),tag(noun),tokens([pt])]),punc([inputmatch(['.']),tokens([])])],51/19,[]).
candidates(7,0,0,7,[]).
mappings([map(-761,[ev(-797,'C3275096','KNOWN CAD','Known Coronary Artery Disease',[known,cad],[qnco],[[[1,1],[1,1],0],[[3,3],[2,2],0]],yes,no,['NCI','NCI_CDISC','NLMSubSyn'],[51/5,60/3],0,0),ev(-593,'C0262926','Hx','Medical History',[hx],[fndg],[[[2,2],[1,1],0]],no,no,['AIR','AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','NCI_NICHD','NLMSubSyn','SNOMEDCT_US'],[57/2],0,0),ev(-593,'C0699718','PT','Physical therapy (field)',[pt],[bmod],[[[5,5],[1,1],0]],no,no,['CHV','LNC','MTH','NLMSubSyn'],[67/2],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Will increase to 80 mg of lipitor and then in 1 month check lfts and cholesterol fasting at Moton Hospital.  ",71/109,[]).
phrase('Will',[modal([lexmatch([will]),inputmatch(['Will']),tag(modal),tokens([will])])],71/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('increase to 80 mg of lipitor',[verb([lexmatch([increase]),inputmatch([increase]),tag(verb),tokens([increase])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),shapes([inputmatch(['80']),features([integer]),tokens(['80'])]),mod([lexmatch([mg]),inputmatch([mg]),tag(noun),tokens([mg])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([lipitor]),inputmatch([lipitor]),tag(noun),tokens([lipitor])])],76/28,[]).
candidates(15,7,0,8,[]).
mappings([map(-692,[ev(-742,'C0240292','increased mg','mg++ increased',[increased,mg],[fndg],[[[1,1],[1,1],4],[[4,4],[2,2],0]],yes,no,['CHV','DXP','NLMSubSyn'],[76/8,91/2],0,0),ev(-753,'C3842583','80%','80%',['80'],[fndg],[[[3,3],[1,1],0]],yes,no,['LNC'],[88/2],0,0),ev(-753,'C0593906','Lipitor','Lipitor',[lipitor],[orch,phsu],[[[6,6],[1,1],0]],yes,no,['CHV','CSP','MSH','NCI','NCI_NCI-GLOSS','PDQ','RXNORM'],[97/7],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],105/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('then in 1 month check lfts',[adv([lexmatch([then]),inputmatch([then]),tag(adv),tokens([then])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),mod([lexmatch([month]),inputmatch([month]),tag(noun),tokens([month])]),mod([lexmatch([check]),inputmatch([check]),tag(noun),tokens([check])]),mod([lexmatch([lfts]),inputmatch([lfts]),tag(noun),tokens([lfts])])],109/26,[]).
candidates(7,0,0,7,[]).
mappings([map(-689,[ev(-753,'C1883708','Then','Then',[then],[tmco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[109/4],0,0),ev(-753,'C0332177','/month','Monthly (qualifier value)',[month],[tmco],[[[4,4],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[119/5],0,0),ev(-753,'C1283174','Check','Checking (action)',[check],[acty],[[[5,5],[1,1],0]],yes,no,['LNC','MTH','NCI','SNOMEDCT_US'],[125/5],0,0),ev(-719,'C0023901','LFT','Liver Function Tests',[lft],[lbpr],[[[6,6],[1,1],1]],yes,no,['AOD','CHV','LCH','LCH_NW','MSH','MTH','MTHMST','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[131/4],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],136/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('cholesterol fasting at Moton Hospital.',[mod([lexmatch([cholesterol]),inputmatch([cholesterol]),tag(noun),tokens([cholesterol])]),head([lexmatch([fasting]),inputmatch([fasting]),tag(noun),tokens([fasting])]),prep([lexmatch([at]),inputmatch([at]),tag(prep),tokens([at])]),mod([inputmatch(['Moton']),tag(noun),tokens([moton])]),mod([lexmatch([hospital]),inputmatch(['Hospital']),tag(noun),tokens([hospital])]),punc([inputmatch(['.']),tokens([])])],140/38,[]).
candidates(8,2,0,6,[]).
mappings([map(-716,[ev(-593,'C0008377','CHOLESTEROL','Cholesterol',[cholesterol],[bacs,orch],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHSPL','NCI','NCI_CRCH','NCI_DCP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[140/11],0,0),ev(-760,'C0015663','FASTING','Fasting',[fasting],[fndg],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','CSP','DXP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[152/7],0,0),ev(-560,'C1855425','MOTA','Marles Greenberg Persaud syndrome',[mota],[dsyn],[[[4,4],[1,1],1]],no,no,['MSH','MTH','OMIM','SNOMEDCT_US'],[163/5],0,0),ev(-593,'C1510665','Hospital','Hospital environment',[hospital],[qlco],[[[5,5],[1,1],0]],no,no,['MTH','NLMSubSyn','SNOMEDCT_US'],[169/8],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Will aim for LDL less than 70",180/29,[]).
phrase('Will',[modal([lexmatch([will]),inputmatch(['Will']),tag(modal),tokens([will])])],180/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('aim for LDL less',[verb([lexmatch([aim]),inputmatch([aim]),tag(verb),tokens([aim])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([ldl]),inputmatch(['LDL']),tag(noun),tokens([ldl])]),adv([lexmatch([less]),inputmatch([less]),tag(adv),tokens([less])])],185/16,[]).
candidates(5,0,0,5,[]).
mappings([map(-770,[ev(-770,'C1947946','Aim','Aim (idea)',[aim],[idcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[185/3],0,0)])]).
phrase('than 70',[prep([lexmatch([than]),inputmatch([than]),tag(prep),tokens([than])]),shapes([inputmatch(['70']),features([integer]),tokens(['70'])])],202/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3842584','70%','70%',['70'],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC'],[207/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Medications Asa (ACETYLSALICYLIC ACID) 325MG TABLET take 1 Tablet(s) PO QD  Nitroglycerin 1/150 (0.4 MG) 1 TAB SL x1 PRN prn CP  Norvasc (AMLODIPINE) 5MG TABLET take 1 Tablet(s) PO QD  Triamcinolone CREAM 0.5% (TRIAMCINOLONE ACETONIDE 0.5%) TOP BID PRN  Lipitor (ATORVASTATIN) 40MG TABLET PO QD  Zestril (LISINOPRIL) 40MG TABLET take 1 Tablet(s) PO QD  Atenolol 50MG TABLET take 1 Tablet(s) PO QD  Hctz (HYDROCHLOROTHIAZIDE) 25MG TABLET take 1 Tablet(s) PO QD",0/459,[]).
phrase('Medications Asa',[mod([lexmatch([medications]),inputmatch(['Medications']),tag(noun),tokens([medications])]),head([lexmatch([asa]),inputmatch(['Asa']),tag(noun),tokens([asa])])],0/15,[]).
candidates(7,1,0,6,[]).
mappings([map(-888,[ev(-694,'C0013227','Medications','Pharmaceutical Preparations',[medications],[phsu],[[[1,1],[1,1],0]],no,no,['CHV','CSP','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[0/11],0,0),ev(-861,'C0004057','ASA','Aspirin',[asa],[orch,phsu],[[[2,2],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','MSH','MTH','MTHSPL','NCI','NCI_DCP','NCI_DTP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[12/3],0,0)])]).
phrase('(ACETYLSALICYLIC ACID',[punc([inputmatch(['(']),tokens([])]),head([lexmatch(['acetylsalicylic acid']),inputmatch(['ACETYLSALICYLIC','ACID']),tag(noun),tokens([acetylsalicylic,acid])])],16/21,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0004057','Acetylsalicylic Acid','Aspirin',[acetylsalicylic,acid],[orch,phsu],[[[1,2],[1,2],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','MSH','MTH','MTHSPL','NCI','NCI_DCP','NCI_DTP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[17/20],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],37/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('325MG TABLET',[mod([inputmatch(['325MG']),tag(noun),tokens(['325mg'])]),head([lexmatch([tablet]),inputmatch(['TABLET']),tag(noun),tokens([tablet])])],39/12,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[45/6],0,0)])]).
phrase(take,[verb([lexmatch([take]),inputmatch([take]),tag(verb),tokens([take])])],52/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],0]],yes,no,['NCI','SNOMEDCT_US'],[52/4],0,0)])]).
phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],57/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[57/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[59/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],65/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],66/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD  Nitroglycerin 1/150',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),mod([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])]),mod([lexmatch([nitroglycerin]),inputmatch(['Nitroglycerin']),tag(noun),tokens([nitroglycerin])]),shapes([inputmatch(['1',/,'150']),features([fraction]),tokens(['1','150'])])],69/26,[]).
candidates(10,4,0,6,[]).
mappings([map(-798,[ev(-875,'C0297198','PO-1','PO-1',[po,'1'],[orch],[[[1,1],[1,1],0],[[4,4],[2,2],0]],yes,no,['MSH'],[69/2,90/1],0,0),ev(-804,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[72/2],0,0),ev(-804,'C0017887','NITROGLYCERIN','Nitroglycerin',[nitroglycerin],[orch,phsu],[[[3,3],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[76/13],0,0)])]).
phrase('(0.4 MG',[punc([inputmatch(['(']),tokens([])]),shapes([inputmatch(['0','.','4']),features([real_number]),tokens(['0','4'])]),head([lexmatch([mg]),inputmatch(['MG']),tag(noun),tokens([mg])])],96/7,[]).
candidates(5,0,0,5,[]).
mappings([map(-802,[ev(-660,'C3842591','0%','0%',['0'],[fndg],[[[1,1],[1,1],0]],no,no,['LNC'],[97/1],0,0),ev(-827,'C2346927','Mg++','Magnesium Cation',[mg],[elii,phsu],[[[3,3],[1,1],0]],yes,no,['MTH','MTHSPL','NCI','NCI_CRCH','NCI_FDA','RXNORM'],[101/2],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],103/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('1 TAB SL x1 PRN prn CP  Norvasc',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),mod([lexmatch([tab]),inputmatch(['TAB']),tag(noun),tokens([tab])]),mod([lexmatch([sl]),inputmatch(['SL']),tag(noun),tokens([sl])]),mod([inputmatch([x1]),tag(noun),tokens([x1])]),mod([lexmatch([prn]),inputmatch(['PRN']),tag(noun),tokens([prn])]),mod([lexmatch([prn]),inputmatch([prn]),tag(noun),tokens([prn])]),mod([lexmatch([cp]),inputmatch(['CP']),tag(noun),tokens([cp])]),head([lexmatch([norvasc]),inputmatch(['Norvasc']),tag(noun),tokens([norvasc])])],105/31,[]).
candidates(6,0,0,6,[]).
mappings([map(-749,[ev(-626,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[105/1],0,0),ev(-626,'C1705223','Tab','Tablet Dosing Unit',[tab],[qnco],[[[2,2],[1,1],0]],no,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[107/3],0,0),ev(-793,'C0162712','Norvasc','Norvasc',[norvasc],[orch,phsu],[[[8,8],[1,1],0]],yes,no,['CHV','CSP','MSH','MTH','RXNORM'],[129/7],0,0)])]).
phrase('(AMLODIPINE',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([amlodipine]),inputmatch(['AMLODIPINE']),tag(noun),tokens([amlodipine])])],137/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0051696','AMLODIPINE','Amlodipine',[amlodipine],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[138/10],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],148/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('5MG TABLET',[mod([inputmatch(['5MG']),tag(noun),tokens(['5mg'])]),head([lexmatch([tablet]),inputmatch(['TABLET']),tag(noun),tokens([tablet])])],150/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[154/6],0,0)])]).
phrase(take,[verb([lexmatch([take]),inputmatch([take]),tag(verb),tokens([take])])],161/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],0]],yes,no,['NCI','SNOMEDCT_US'],[161/4],0,0)])]).
phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],166/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[166/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[168/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],174/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],175/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD  Triamcinolone CREAM 0.5%',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),mod([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])]),mod([lexmatch(['triamcinolone cream']),inputmatch(['Triamcinolone','CREAM']),tag(noun),tokens([triamcinolone,cream])]),shapes([inputmatch(['0','.','5','%']),features([percentage,real_number]),tokens(['0','5'])])],178/31,[]).
candidates(9,1,0,8,[]).
mappings([map(-827,[ev(-799,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[178/2],0,0),ev(-799,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[181/2],0,0),ev(-799,'C0040864','TRIAMCINOLONE','Triamcinolone',[triamcinolone],[orch,phsu],[[[3,3],[1,1],0]],yes,no,['ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_DTP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[185/13],0,0),ev(-799,'C1378128','Cream','Cream',[cream],[bodm],[[[4,4],[1,1],0]],yes,no,['HL7V3.0','LNC','MTH','NCI','NCI_FDA','NCI_NCPDP','NDFRT','NLMSubSyn','RXNORM','SNM','SNOMEDCT_US'],[199/5],0,0),ev(-827,'C0444499','0/5','0/5',['0','5'],[qnco],[[[5,5],[1,1],0],[[6,6],[2,2],0]],yes,no,['SNOMEDCT_US'],[205/3],0,0)])]).
phrase('(TRIAMCINOLONE ACETONIDE 0.5%',[punc([inputmatch(['(']),tokens([])]),mod([lexmatch(['triamcinolone acetonide']),inputmatch(['TRIAMCINOLONE','ACETONIDE']),tag(noun),tokens([triamcinolone,acetonide])]),shapes([inputmatch(['0','.','5','%']),features([percentage,real_number]),tokens(['0','5'])])],210/29,[]).
candidates(6,2,0,4,[]).
mappings([map(-888,[ev(-861,'C0040866','TRIAMCINOLONE ACETONIDE','Triamcinolone Acetonide',[triamcinolone,acetonide],[orch,phsu],[[[1,2],[1,2],0]],yes,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[211/23],0,0),ev(-861,'C0444499','0/5','0/5',['0','5'],[qnco],[[[3,3],[1,1],0],[[4,4],[2,2],0]],yes,no,['SNOMEDCT_US'],[235/3],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],239/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('TOP BID PRN  Lipitor',[mod([lexmatch([top]),inputmatch(['TOP']),tag(noun),tokens([top])]),mod([lexmatch([bid]),inputmatch(['BID']),tag(noun),tokens([bid])]),mod([lexmatch([prn]),inputmatch(['PRN']),tag(noun),tokens([prn])]),head([lexmatch([lipitor]),inputmatch(['Lipitor']),tag(noun),tokens([lipitor])])],241/20,[]).
candidates(2,0,0,2,[]).
mappings([map(-791,[ev(-645,'C1704458','Top','Top (position)',[top],[spco],[[[1,1],[1,1],0]],no,no,['MTH','NCI','SNOMEDCT_US'],[241/3],0,0),ev(-812,'C0593906','Lipitor','Lipitor',[lipitor],[orch,phsu],[[[4,4],[1,1],0]],yes,no,['CHV','CSP','MSH','NCI','NCI_NCI-GLOSS','PDQ','RXNORM'],[254/7],0,0)])]).
phrase('(ATORVASTATIN',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([atorvastatin]),inputmatch(['ATORVASTATIN']),tag(noun),tokens([atorvastatin])])],262/13,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0286651','ATORVASTATIN',atorvastatin,[atorvastatin],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[263/12],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],275/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('40MG TABLET PO QD  Zestril',[mod([inputmatch(['40MG']),tag(noun),tokens(['40mg'])]),mod([lexmatch([tablet]),inputmatch(['TABLET']),tag(noun),tokens([tablet])]),mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),mod([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])]),head([lexmatch([zestril]),inputmatch(['Zestril']),tag(noun),tokens([zestril])])],277/26,[]).
candidates(6,0,0,6,[]).
mappings([map(-771,[ev(-637,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],no,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[282/6],0,0),ev(-637,'C0442027','PO','Oral',[po],[spco],[[[3,3],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[289/2],0,0),ev(-637,'C0332173','QD','Daily',[qd],[tmco],[[[4,4],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[292/2],0,0),ev(-804,'C0678140','Zestril','Zestril',[zestril],[aapp,phsu],[[[5,5],[1,1],0]],yes,no,['CHV','MSH','NCI','NCI_NCI-GLOSS','RXNORM'],[296/7],0,0)])]).
phrase('(LISINOPRIL',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([lisinopril]),inputmatch(['LISINOPRIL']),tag(noun),tokens([lisinopril])])],304/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0065374','LISINOPRIL','Lisinopril',[lisinopril],[aapp,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LNC','MSH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[305/10],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],315/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('40MG TABLET',[mod([inputmatch(['40MG']),tag(noun),tokens(['40mg'])]),head([lexmatch([tablet]),inputmatch(['TABLET']),tag(noun),tokens([tablet])])],317/11,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[322/6],0,0)])]).
phrase(take,[verb([lexmatch([take]),inputmatch([take]),tag(verb),tokens([take])])],329/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],0]],yes,no,['NCI','SNOMEDCT_US'],[329/4],0,0)])]).
phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],334/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[334/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[336/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],342/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],343/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD  Atenolol 50MG TABLET',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),mod([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])]),mod([lexmatch([atenolol]),inputmatch(['Atenolol']),tag(noun),tokens([atenolol])]),mod([inputmatch(['50MG']),tag(noun),tokens(['50mg'])]),head([lexmatch([tablet]),inputmatch(['TABLET']),tag(noun),tokens([tablet])])],346/27,[]).
candidates(7,0,0,7,[]).
mappings([map(-875,[ev(-637,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[346/2],0,0),ev(-637,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[349/2],0,0),ev(-884,'C0687940','Atenolol 50mg tablet','Atenolol 50 MG Oral Tablet',[atenolol,'50mg',tablet],[clnd],[[[3,3],[1,1],0],[[4,4],[2,2],0],[[5,5],[3,3],0]],yes,no,['MTHSPL','NDFRT','RXNORM','SNOMEDCT_US','VANDF'],[353/20],0,0)])]).
phrase(take,[verb([lexmatch([take]),inputmatch([take]),tag(verb),tokens([take])])],374/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],0]],yes,no,['NCI','SNOMEDCT_US'],[374/4],0,0)])]).
phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],379/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[379/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[381/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],387/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],388/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD  Hctz',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),mod([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])]),head([lexmatch([hctz]),inputmatch(['Hctz']),tag(noun),tokens([hctz])])],391/11,[]).
candidates(4,0,0,4,[]).
mappings([map(-851,[ev(-660,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[391/2],0,0),ev(-660,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[394/2],0,0),ev(-827,'C0020261','HCTZ','Hydrochlorothiazide',[hctz],[orch,phsu],[[[3,3],[1,1],0]],yes,no,['ATC','CHV','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[398/4],0,0)])]).
phrase('(HYDROCHLOROTHIAZIDE',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([hydrochlorothiazide]),inputmatch(['HYDROCHLOROTHIAZIDE']),tag(noun),tokens([hydrochlorothiazide])])],403/20,[]).
candidates(4,3,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0020261','HYDROCHLOROTHIAZIDE','Hydrochlorothiazide',[hydrochlorothiazide],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[404/19],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],423/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('25MG TABLET',[mod([inputmatch(['25MG']),tag(noun),tokens(['25mg'])]),head([lexmatch([tablet]),inputmatch(['TABLET']),tag(noun),tokens([tablet])])],425/11,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[430/6],0,0)])]).
phrase(take,[verb([lexmatch([take]),inputmatch([take]),tag(verb),tokens([take])])],437/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],0]],yes,no,['NCI','SNOMEDCT_US'],[437/4],0,0)])]).
phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],442/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[442/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[444/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],450/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],451/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],454/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[454/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[457/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Allergies CEFACLOR - Rash,",0/26,[]).
phrase('Allergies CEFACLOR - Rash,',[mod([lexmatch([allergies]),inputmatch(['Allergies']),tag(noun),tokens([allergies])]),mod([lexmatch([cefaclor]),inputmatch(['CEFACLOR']),tag(noun),tokens([cefaclor])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([rash]),inputmatch(['Rash']),tag(noun),tokens([rash])]),punc([inputmatch([',']),tokens([])])],0/26,[]).
candidates(10,6,0,4,[]).
mappings([map(-873,[ev(-871,'C0850569','allergic rash','allergic rash',[allergic,rash],[dsyn],[[[1,1],[1,1],4],[[3,3],[2,2],0]],yes,no,['CHV'],[0/9,21/4],0,0),ev(-660,'C0007537','CEFACLOR','Cefaclor',[cefaclor],[antb,orch],[[[2,2],[1,1],0]],no,no,['ATC','CHV','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[10/8],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Family History",0/14,[]).
phrase('Family History',[head([lexmatch(['family history']),inputmatch(['Family','History']),tag(noun),tokens([family,history])])],0/14,[]).
candidates(13,3,0,10,[]).
mappings([map(-1000,[ev(-1000,'C0241889','FAMILY HISTORY','Family history',[family,history],[fndg],[[[1,2],[1,2],0]],yes,no,['CHV','CSP','DXP','MEDLINEPLUS','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNOMEDCT_US'],[0/14],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"father -HTN, died 86 of gastric ca mother-HTN, MI at 58 and 62 - died then siblings-sister finally died from breast CA after 4 year battle, dx age 37.   ",0/153,[]).
phrase('father -HTN,',[mod([lexmatch([father]),inputmatch([father]),tag(noun),tokens([father])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([htn]),inputmatch(['HTN']),tag(noun),tokens([htn])]),punc([inputmatch([',']),tokens([])])],0/12,[]).
candidates(2,0,0,2,[]).
mappings([map(-888,[ev(-694,'C0015671','Father','Father (person)',[father],[famg],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[0/6],0,0),ev(-861,'C0020538','HTN','Hypertensive disease',[htn],[dsyn],[[[2,2],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[8/3],0,0)])]).
phrase(died,[verb([lexmatch([died]),inputmatch([died]),tag(verb),tokens([died])])],13/4,[]).
candidates(8,5,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0011065','Died','Cessation of life',[died],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','GO','ICPC','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','SNOMEDCT_US'],[13/4],0,0)])]).
phrase('86 of gastric ca mother-HTN,',[shapes([inputmatch(['86']),features([integer]),tokens(['86'])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([gastric]),inputmatch([gastric]),tag(adj),tokens([gastric])]),mod([lexmatch([ca]),inputmatch([ca]),tag(noun),tokens([ca])]),mod([lexmatch([mother]),inputmatch([mother]),tag(noun),tokens([mother])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([htn]),inputmatch(['HTN']),tag(noun),tokens([htn])]),punc([inputmatch([',']),tokens([])])],18/28,[]).
candidates(7,2,0,5,[]).
mappings([map(-716,[ev(-753,'C0038351','Gastric','Stomach',[gastric],[bpoc],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','MTHMST','NCI','NCI_CDISC','NCI_NCI-GLOSS','SNM','SNMI','UWDA'],[24/7],0,0),ev(-753,'C3887642','CA','Hippocampus Proper',[ca],[bpoc],[[[4,4],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','MSH','MTH','NCI'],[32/2],0,0),ev(-753,'C0026591','Mother','Mother (person)',[mother],[famg],[[[5,5],[1,1],0]],yes,no,['AOD','CHV','CSP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[35/6],0,0),ev(-753,'C0020538','HTN','Hypertensive disease',[htn],[dsyn],[[[6,6],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[42/3],0,0)])]).
phrase('MI at 58',[head([lexmatch([mi]),inputmatch(['MI']),tag(noun),tokens([mi])]),prep([lexmatch([at]),inputmatch([at]),tag(prep),tokens([at])]),shapes([inputmatch(['58']),features([integer]),tokens(['58'])])],47/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-790,[ev(-790,'C3810814','MI','Myocardial Infarction ECG Assessment',[mi],[diap],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NLMSubSyn'],[47/2],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],56/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('62 -',[shapes([inputmatch(['62']),features([integer]),tokens(['62'])]),punc([inputmatch([-]),tokens([])])],60/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(died,[verb([lexmatch([died]),inputmatch([died]),tag(verb),tokens([died])])],65/4,[]).
candidates(8,5,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0011065','Died','Cessation of life',[died],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','GO','ICPC','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','SNOMEDCT_US'],[65/4],0,0)])]).
phrase('then siblings-sister',[adv([lexmatch([then]),inputmatch([then]),tag(adv),tokens([then])]),mod([lexmatch([siblings]),inputmatch([siblings]),tag(noun),tokens([siblings])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([sister]),inputmatch([sister]),tag(noun),tokens([sister])])],70/20,[]).
candidates(3,0,0,3,[]).
mappings([map(-851,[ev(-660,'C1883708','Then','Then',[then],[tmco],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[70/4],0,0),ev(-660,'C0037047','Siblings','Sibling',[siblings],[famg],[[[2,2],[1,1],0]],no,no,['AOD','CHV','CSP','HL7V3.0','LNC','MSH','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[75/8],0,0),ev(-827,'C0337514','Sister','Sister',[sister],[famg],[[[3,3],[1,1],0]],yes,no,['CHV','CSP','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[84/6],0,0)])]).
phrase(finally,[adv([lexmatch([finally]),inputmatch([finally]),tag(adv),tokens([finally])])],91/7,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('died from breast CA',[verb([lexmatch([died]),inputmatch([died]),tag(verb),tokens([died])]),prep([lexmatch([from]),inputmatch([from]),tag(prep),tokens([from])]),mod([lexmatch([breast]),inputmatch([breast]),tag(noun),tokens([breast])]),mod([lexmatch([ca]),inputmatch(['CA']),tag(noun),tokens([ca])])],99/19,[]).
candidates(16,10,0,6,[]).
mappings([map(-733,[ev(-770,'C0011065','Died','Cessation of life',[died],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','GO','ICPC','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','SNOMEDCT_US'],[99/4],0,0),ev(-770,'C1268990','Breast','Entire breast',[breast],[bpoc],[[[3,3],[1,1],0]],yes,no,['MTH','SNOMEDCT_US'],[109/6],0,0),ev(-770,'C3887642','CA','Hippocampus Proper',[ca],[bpoc],[[[4,4],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','MSH','MTH','NCI'],[116/2],0,0)])]).
phrase('after 4 year battle,',[prep([lexmatch([after]),inputmatch([after]),tag(prep),tokens([after])]),shapes([inputmatch(['4']),features([integer]),tokens(['4'])]),mod([lexmatch([year]),inputmatch([year]),tag(noun),tokens([year])]),head([lexmatch([battle]),inputmatch([battle]),tag(noun),tokens([battle])]),punc([inputmatch([',']),tokens([])])],119/20,[]).
candidates(3,0,0,3,[]).
mappings([map(-623,[ev(-660,'C3838679','4+','4+ Answer to question',['4'],[fndg],[[[1,1],[1,1],0]],no,no,['LNC','MTH'],[125/1],0,0),ev(-660,'C0439508','/Year','per year',[year],[tmco],[[[2,2],[1,1],0]],no,no,['CHV','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[127/4],0,0)])]).
phrase('dx age 37.',[mod([lexmatch([dx]),inputmatch([dx]),tag(noun),tokens([dx])]),mod([lexmatch([age]),inputmatch([age]),tag(noun),tokens([age])]),shapes([inputmatch(['37']),features([integer]),tokens(['37'])]),punc([inputmatch(['.']),tokens([])])],140/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-790,[ev(-827,'C3538936','DX','Device Exposure Domain',[dx],[idcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC'],[140/2],0,0),ev(-827,'C0001779','AGE','Age',[age],[orga],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','LNC','MTH','NCI','NCI_BRIDG','NCI_CDISC','NCI_FDA','NCI_NICHD','SNMI','SNOMEDCT_US'],[143/3],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"2nd sister dx breast CA age 51 - ""aggressive - XRT and chemo.   ",153/64,[]).
phrase('2nd sister dx breast CA age 51 - "aggressive - XRT',[shapes([inputmatch(['2nd']),features([numeric_ordinal]),tokens(['2nd'])]),mod([lexmatch([sister]),inputmatch([sister]),tag(noun),tokens([sister])]),mod([lexmatch([dx]),inputmatch([dx]),tag(noun),tokens([dx])]),mod([lexmatch([breast]),inputmatch([breast]),tag(noun),tokens([breast])]),mod([lexmatch([ca]),inputmatch(['CA']),tag(noun),tokens([ca])]),mod([lexmatch([age]),inputmatch([age]),tag(noun),tokens([age])]),shapes([inputmatch(['51']),features([integer]),tokens(['51'])]),punc([inputmatch([-]),tokens([])]),punc([inputmatch(['"']),tokens([])]),mod([lexmatch([aggressive]),inputmatch([aggressive]),tag(adj),tokens([aggressive])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([xrt]),inputmatch(['XRT']),tag(noun),tokens([xrt])])],153/50,[]).
candidates(14,5,0,9,[]).
mappings([map(-570,[ev(-624,'C0205436','2nd','second (number)',['2nd'],[qnco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[153/3],0,0),ev(-624,'C0337514','Sister','Sister',[sister],[famg],[[[2,2],[1,1],0]],no,no,['CHV','CSP','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[157/6],0,0),ev(-624,'C3538936','DX','Device Exposure Domain',[dx],[idcn],[[[3,3],[1,1],0]],no,no,['MTH','NCI','NCI_CDISC'],[164/2],0,0),ev(-624,'C1268990','Breast','Entire breast',[breast],[bpoc],[[[4,4],[1,1],0]],no,no,['MTH','SNOMEDCT_US'],[167/6],0,0),ev(-624,'C3887642','CA','Hippocampus Proper',[ca],[bpoc],[[[5,5],[1,1],0]],no,no,['AOD','CHV','CSP','FMA','MSH','MTH','NCI'],[174/2],0,0),ev(-624,'C0001779','AGE','Age',[age],[orga],[[[6,6],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_BRIDG','NCI_CDISC','NCI_FDA','NCI_NICHD','SNMI','SNOMEDCT_US'],[177/3],0,0),ev(-624,'C0580822','Aggressive','Aggressive course',[aggressive],[tmco],[[[8,8],[1,1],0]],no,no,['MTH','NCI','NCI_NCI-GLOSS','SNOMEDCT_US'],[187/10],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],204/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('chemo.',[head([lexmatch([chemo]),inputmatch([chemo]),tag(noun),tokens([chemo])]),punc([inputmatch(['.']),tokens([])])],208/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0392920',chemo,'Chemotherapy Regimen',[chemo],[topp],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[208/5],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"7 sisters - one with DM,and 2 brothers - ok No change since previous annual.",217/76,[]).
phrase('7 sisters - one with DM,',[shapes([inputmatch(['7']),features([integer]),tokens(['7'])]),mod([lexmatch([sisters]),inputmatch([sisters]),tag(noun),tokens([sisters])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([one]),inputmatch([one]),tag(noun),tokens([one])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([dm]),inputmatch(['DM']),tag(noun),tokens([dm])]),punc([inputmatch([',']),tokens([])])],217/24,[]).
candidates(2,0,0,2,[]).
mappings([map(-695,[ev(-593,'C0337514','Sisters','Sister',[sisters],[famg],[[[2,2],[1,1],0]],no,no,['CHV','CSP','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[219/7],0,0),ev(-760,'C0205447','ONE','One',[one],[qnco],[[[3,3],[1,1],0]],yes,no,['LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[229/3],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],241/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('2 brothers -',[shapes([inputmatch(['2']),features([integer]),tokens(['2'])]),head([lexmatch([brothers]),inputmatch([brothers]),tag(noun),tokens([brothers])]),punc([inputmatch([-]),tokens([])])],245/12,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981700','2+','2+ Score, WHO',['2'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[245/1],0,0),ev(-861,'C0337527','Brothers','Brothers',[brothers],[famg],[[[2,2],[1,1],0]],yes,no,['CHV','CSP','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[247/8],0,0)])]).
phrase(ok,[verb([lexmatch([ok]),inputmatch([ok]),tag(verb),tokens([ok])])],258/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('No change',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([change]),inputmatch([change]),tag(noun),tokens([change])])],261/9,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0443172',change,'Changed status',[change],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NLMSubSyn','SNOMEDCT_US'],[264/6],0,0)])]).
phrase(since,[conj([lexmatch([since]),inputmatch([since]),tag(conj),tokens([since])])],271/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('previous annual.',[mod([lexmatch([previous]),inputmatch([previous]),tag(adj),tokens([previous])]),head([lexmatch([annual]),inputmatch([annual]),tag(adj),tokens([annual])]),punc([inputmatch(['.']),tokens([])])],277/16,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0205156','Previous','Previous',[previous],[tmco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[277/8],0,0),ev(-861,'C0332181','Annual','Annual',[annual],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[286/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Social History       working for Convergys as Sculptor, widowed 2070, one son - 30 yo Insurance Agent",0/101,[]).
phrase('Social History       working for Convergys',[mod([lexmatch(['social history']),inputmatch(['Social','History']),tag(noun),tokens([social,history])]),head([lexmatch([working]),inputmatch([working]),tag(noun),tokens([working])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([inputmatch(['Convergys']),tag(noun),tokens([convergys])])],0/42,[]).
candidates(12,2,0,10,[]).
mappings([map(-763,[ev(-640,'C0424945','Social history','Social and personal history',[social,history],[fndg],[[[1,2],[1,2],0]],no,no,['CHV','MTH','SNOMEDCT_US'],[0/14],0,0),ev(-760,'C0043227','Working','Work',[working],[ocac],[[[3,3],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[21/7],0,0)])]).
phrase('as Sculptor,',[prep([lexmatch([as]),inputmatch([as]),tag(prep),tokens([as])]),head([lexmatch([sculptor]),inputmatch(['Sculptor']),tag(noun),tokens([sculptor])]),punc([inputmatch([',']),tokens([])])],43/12,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0335049','Sculptor','Sculptor',[sculptor],[prog],[[[1,1],[1,1],0]],yes,no,['SNM','SNMI','SNOMEDCT_US'],[46/8],0,0)])]).
phrase('widowed 2070,',[mod([lexmatch([widowed]),inputmatch([widowed]),tag(adj),tokens([widowed])]),shapes([inputmatch(['2070']),features([integer]),tokens(['2070'])]),punc([inputmatch([',']),tokens([])])],56/13,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C0206275','WIDOWED','Widowhood',[widowed],[fndg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','HL7V2.5','HL7V3.0','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-HL7','SNM','SNMI','SNOMEDCT_US'],[56/7],0,0)])]).
phrase('one son - 30 yo Insurance Agent',[mod([lexmatch([one]),inputmatch([one]),tag(noun),tokens([one])]),mod([lexmatch([son]),inputmatch([son]),tag(noun),tokens([son])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['30']),features([integer]),tokens(['30'])]),mod([lexmatch([yo]),inputmatch([yo]),tag(noun),tokens([yo])]),mod([lexmatch([insurance]),inputmatch(['Insurance']),tag(noun),tokens([insurance])]),head([lexmatch([agent]),inputmatch(['Agent']),tag(noun),tokens([agent])])],70/31,[]).
candidates(9,0,0,9,[]).
mappings([map(-814,[ev(-632,'C0205447','ONE','One',[one],[qnco],[[[1,1],[1,1],0]],no,no,['LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[70/3],0,0),ev(-632,'C0037683','Son','Son (person)',[son],[famg],[[[2,2],[1,1],0]],no,no,['AOD','CHV','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[74/3],0,0),ev(-632,'C3842588','30%','30%',['30'],[fndg],[[[3,3],[1,1],0]],no,no,['LNC'],[80/2],0,0),ev(-632,'C1413296','Yo','CDR2 gene',[yo],[gngm],[[[4,4],[1,1],0]],no,no,['HGNC','MTH','OMIM'],[83/2],0,0),ev(-632,'C0021672','Insurance','Insurance',[insurance],[idcn],[[[5,5],[1,1],0]],no,no,['AOD','CHV','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI'],[86/9],0,0),ev(-799,'C1254351','Agent','Pharmacologic Substance',[agent],[phsu],[[[6,6],[1,1],0]],yes,no,['LNC','MTH','NCI','NCI_BRIDG','NCI_CDISC','NCI_NCI-GLOSS','NCI_NICHD'],[96/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Review of Systems",0/17,[]).
phrase('Review of Systems',[head([lexmatch([review]),inputmatch(['Review']),tag(noun),tokens([review])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([systems]),inputmatch(['Systems']),tag(noun),tokens([systems])])],0/17,[]).
candidates(12,3,0,9,[]).
mappings([map(-1000,[ev(-1000,'C0488564','Review of systems','Review of systems:Finding:Point in time:^Patient:Narrative:Reported',[review,of,systems],[clna],[[[1,1],[1,1],0],[[2,2],[2,2],0],[[3,3],[3,3],0]],yes,no,['LNC','MTH'],[0/17],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"The following systems were reviewed today and were negative unless indicated otherwise in the history noted above: Constitutional, HEENT, Breast,CVS, GI, GYN, Skin, Musculoskeletal, Neuro, Psych, Respiratory, and Allergic",0/221,[]).
phrase('The following systems',[det([lexmatch([the]),inputmatch(['The']),tag(det),tokens([the])]),mod([lexmatch([following]),inputmatch([following]),tag(adj),tokens([following])]),head([lexmatch([systems]),inputmatch([systems]),tag(noun),tokens([systems])])],0/21,[]).
candidates(9,4,0,5,[]).
mappings([map(-872,[ev(-694,'C0332282','Following','Following',[following],[tmco],[[[1,1],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[4/9],0,0),ev(-827,'C1704459','System','Device Component System',[system],[mnob],[[[2,2],[1,1],1]],yes,no,['MTH','NCI','NCI_FDA','NLMSubSyn'],[14/7],0,0)])]).
phrase(were,[aux([lexmatch([were]),inputmatch([were]),tag(aux),tokens([were])])],22/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(reviewed,[verb([lexmatch([reviewed]),inputmatch([reviewed]),tag(verb),tokens([reviewed])])],27/8,[]).
candidates(3,1,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0282443',reviewed,'Review [Publication Type]',[reviewed],[inpr],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','MSH','MTH'],[27/8],0,0)])]).
phrase(today,[head([lexmatch([today]),inputmatch([today]),tag(noun),tokens([today])])],36/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0310367','Today','Today',[today],[antb,orch],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','RXNORM'],[36/5],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],42/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(were,[aux([lexmatch([were]),inputmatch([were]),tag(aux),tokens([were])])],46/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(negative,[head([lexmatch([negative]),inputmatch([negative]),tag(adj),tokens([negative])])],51/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-1000,[ev(-1000,'C0205160','Negative','Negative',[negative],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','SNMI','SNOMEDCT_US'],[51/8],0,0)])]).
phrase(unless,[conj([lexmatch([unless]),inputmatch([unless]),tag(conj),tokens([unless])])],60/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(indicated,[verb([lexmatch([indicated]),inputmatch([indicated]),tag(verb),tokens([indicated])])],67/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1444656','Indicated','Indicated',[indicated],[fndg],[[[1,1],[1,1],0]],yes,no,['SNOMEDCT_US'],[67/9],0,0)])]).
phrase('otherwise in the history',[adv([lexmatch([otherwise]),inputmatch([otherwise]),tag(adv),tokens([otherwise])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch([history]),inputmatch([history]),tag(noun),tokens([history])])],77/24,[]).
candidates(8,2,0,6,[]).
mappings([map(-770,[ev(-770,'C2004062','History','History of previous events',[history],[fndg],[[[4,4],[1,1],0]],yes,no,['CHV','LCH','MTH','NCI'],[94/7],0,0)])]).
phrase(noted,[verb([lexmatch([noted]),inputmatch([noted]),tag(verb),tokens([noted])])],102/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-966,[ev(-966,'C1317574','Note','Note (document)',[note],[inpr],[[[1,1],[1,1],1]],yes,no,['CHV','LNC','MTH','NCI'],[102/5],0,0)])]).
phrase(above,[head([lexmatch([above]),inputmatch([above]),tag(adj),tokens([above])])],108/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1282910','Above','Upper',[above],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','FMA','HL7V2.5','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US','UWDA'],[108/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],113/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Constitutional,',[head([lexmatch([constitutional]),inputmatch(['Constitutional']),tag(noun),tokens([constitutional])]),punc([inputmatch([',']),tokens([])])],115/15,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1511487','Constitutional','Constitutional',[constitutional],[idcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[115/14],0,0)])]).
phrase('HEENT,',[head([lexmatch([heent]),inputmatch(['HEENT']),tag(noun),tokens([heent])]),punc([inputmatch([',']),tokens([])])],131/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1512338','HEENT','HEENT',[heent],[blor],[[[1,1],[1,1],0]],yes,no,['LNC','NCI','OMIM'],[131/5],0,0)])]).
phrase('Breast,',[head([lexmatch([breast]),inputmatch(['Breast']),tag(noun),tokens([breast])]),punc([inputmatch([',']),tokens([])])],138/7,[]).
candidates(7,5,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1268990','Breast','Entire breast',[breast],[bpoc],[[[1,1],[1,1],0]],yes,no,['MTH','SNOMEDCT_US'],[138/6],0,0)])]).
phrase('CVS,',[head([lexmatch([cvs]),inputmatch(['CVS']),tag(noun),tokens([cvs])]),punc([inputmatch([',']),tokens([])])],145/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('GI,',[head([lexmatch([gi]),inputmatch(['GI']),tag(noun),tokens([gi])]),punc([inputmatch([',']),tokens([])])],150/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3539617','GI','Digestive System Findings Domain',[gi],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NLMSubSyn'],[150/2],0,0)])]).
phrase('GYN,',[head([lexmatch([gyn]),inputmatch(['GYN']),tag(noun),tokens([gyn])]),punc([inputmatch([',']),tokens([])])],154/4,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0205480','GYN','Gynecologic',[gyn],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[154/3],0,0)])]).
phrase('Skin,',[head([lexmatch([skin]),inputmatch(['Skin']),tag(noun),tokens([skin])]),punc([inputmatch([',']),tokens([])])],159/5,[]).
candidates(7,4,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1278993','Skin','Entire skin',[skin],[bdsy],[[[1,1],[1,1],0]],yes,no,['MTH','NLMSubSyn','SNOMEDCT_US'],[159/4],0,0)])]).
phrase('Musculoskeletal,',[head([lexmatch([musculoskeletal]),inputmatch(['Musculoskeletal']),tag(adj),tokens([musculoskeletal])]),punc([inputmatch([',']),tokens([])])],165/16,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C2707260','Musculoskeletal','Musculoskeletal:-:Point in time:^Patient:-',[musculoskeletal],[clna],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[165/15],0,0)])]).
phrase('Neuro,',[head([lexmatch([neuro]),inputmatch(['Neuro']),tag(adj),tokens([neuro])]),punc([inputmatch([',']),tokens([])])],182/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Psych,',[head([lexmatch([psych]),inputmatch(['Psych']),tag(noun),tokens([psych])]),punc([inputmatch([',']),tokens([])])],189/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1306597',psych,'Psychiatric problem',[psych],[mobd],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','ICPC','LNC','MTH'],[189/5],0,0)])]).
phrase('Respiratory,',[head([lexmatch([respiratory]),inputmatch(['Respiratory']),tag(adj),tokens([respiratory])]),punc([inputmatch([',']),tokens([])])],196/12,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0521346','RESPIRATORY',respiratory,[respiratory],[ftcn],[[[1,1],[1,1],0]],yes,no,['ICPC','LNC','MTH','NCI','OMIM','SNMI'],[196/11],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],209/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Allergic',[head([lexmatch([allergic]),inputmatch(['Allergic']),tag(adj),tokens([allergic])])],213/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0700624','Allergic',allergic,[allergic],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','NCI','SNMI'],[213/8],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Physical Exam",0/13,[]).
phrase('Physical Exam',[mod([lexmatch([physical]),inputmatch(['Physical']),tag(adj),tokens([physical])]),head([lexmatch([exam]),inputmatch(['Exam']),tag(noun),tokens([exam])])],0/13,[]).
candidates(6,0,0,6,[]).
mappings([map(-1000,[ev(-1000,'C1744699','Physical Exam','Physical Exam Domain',[physical,exam],[inpr],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['MTH','NCI','NCI_CDISC','NLMSubSyn'],[0/13],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Vital Signs BP 148/66, P 68, Ht 64 in, Wt 233 lb - up 9 lbs O2 SAT 97  BMI 40.1",0/79,[]).
phrase('Vital Signs BP 148/66,',[mod([lexmatch(['vital signs']),inputmatch(['Vital','Signs']),tag(noun),tokens([vital,signs])]),mod([lexmatch([bp]),inputmatch(['BP']),tag(noun),tokens([bp])]),shapes([inputmatch(['148',/,'66']),features([fraction]),tokens(['148','66'])]),punc([inputmatch([',']),tokens([])])],0/22,[]).
candidates(11,1,0,10,[]).
mappings([map(-785,[ev(-840,'C0150404','Vital signs','Taking vital signs',[vital,signs],[hlca],[[[1,2],[1,2],0]],yes,no,['CHV','MTH','SNM','SNMI','SNOMEDCT_US'],[0/11],0,0),ev(-804,'C1708288','BP','HP wt Allele',[bp],[gngm],[[[3,3],[1,1],0]],yes,no,['MTH','NCI'],[12/2],0,0)])]).
phrase('P 68,',[mod([lexmatch([p]),inputmatch(['P']),tag(noun),tokens([p])]),shapes([inputmatch(['68']),features([integer]),tokens(['68'])]),punc([inputmatch([',']),tokens([])])],23/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-861,'C2603361','P\'','P prime',[p],[clna],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[23/1],0,0),ev(-861,'C0450387','68','68',['68'],[inpr],[[[2,2],[1,1],0]],yes,no,['SNOMEDCT_US'],[25/2],0,0)])]).
phrase('Ht 64 in,',[mod([lexmatch([ht]),inputmatch(['Ht']),tag(noun),tokens([ht])]),shapes([inputmatch(['64']),features([integer]),tokens(['64'])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),punc([inputmatch([',']),tokens([])])],29/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-790,[ev(-790,'C0018510','HT','Haiti',[ht],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LCH','LNC','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[29/2],0,0)])]).
phrase('Wt 233 lb -',[mod([lexmatch([wt]),inputmatch(['Wt']),tag(noun),tokens([wt])]),shapes([inputmatch(['233']),features([integer]),tokens(['233'])]),head([lexmatch([lb]),inputmatch([lb]),tag(noun),tokens([lb])]),punc([inputmatch([-]),tokens([])])],39/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-660,[ev(-660,'C2700323','WT','Wild Type Unspecified - zebrafish',[wt],[fish],[[[1,1],[1,1],0]],no,no,['MTH','NCI','NCI_ZFin'],[39/2],0,0)])]).
phrase('up 9 lbs O2 SAT 97  BMI 40.1',[prep([lexmatch([up]),inputmatch([up]),tag(prep),tokens([up])]),shapes([inputmatch(['9']),features([integer]),tokens(['9'])]),mod([lexmatch([lbs]),inputmatch([lbs]),tag(noun),tokens([lbs])]),mod([inputmatch(['O2']),tag(noun),tokens([o2])]),mod([lexmatch([sat]),inputmatch(['SAT']),tag(noun),tokens([sat])]),shapes([inputmatch(['97']),features([integer]),tokens(['97'])]),mod([lexmatch([bmi]),inputmatch(['BMI']),tag(noun),tokens([bmi])]),shapes([inputmatch(['40','.','1']),features([real_number]),tokens(['40','1'])])],51/28,[]).
candidates(10,0,0,10,[]).
mappings([map(-736,[ev(-793,'C0439219',lbs,'Pounds',[lbs],[qnco],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_ICH','NCI_NCPDP','NCI_NICHD','NCI_UCUM','SNOMEDCT_US'],[56/3],0,0),ev(-793,'C0030054','O2','Oxygen',[o2],[elii,phsu],[[[3,3],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[60/2],0,0),ev(-850,'C1420161','SAT-1','SLC26A1 gene',[sat,'1'],[gngm],[[[4,4],[1,1],0],[[8,8],[2,2],0]],yes,no,['HGNC','MTH','OMIM'],[63/3,78/1],0,0),ev(-793,'C0439082','>97','>97',['97'],[qnco],[[[5,5],[1,1],0]],yes,no,['SNOMEDCT_US'],[67/2],0,0),ev(-793,'C3842587','40%','40%',['40'],[qnco],[[[7,7],[1,1],0]],yes,no,['LNC'],[75/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"General:  appears well",0/22,[]).
phrase('General',[head([lexmatch([general]),inputmatch(['General']),tag(adj),tokens([general])])],0/7,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0205246','General','Generalized',[general],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V3.0','HPO','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[0/7],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],7/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(appears,[verb([lexmatch([appears]),inputmatch([appears]),tag(verb),tokens([appears])])],10/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0700364','APPEAR','Appearance',[appear],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[10/7],0,0)])]).
phrase(well,[adv([lexmatch([well]),inputmatch([well]),tag(adv),tokens([well])])],18/4,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0205170','Well','Good',[well],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_FDA','SNMI','SNOMEDCT_US'],[18/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([negation(nega,no,[69/2],['C0018021':'THYROMEGALY'],[72/11]),negation(nega,no,[85/2],['C0006318':bruits],[88/6]),negation(nega,no,[102/2],['C0749155':'Supraclavicular lymphadenopathy'],[128/31]),negation(nega,no,[170/2],['C0149741':'NIPPLE DISCHARGE'],[173/16]),negation(nega,no,[170/2],['C0332523':'Retraction'],[193/10]),negation(nega,no,[205/2],['C1709157':'Clear'],[232/5]),negation(nega,no,[205/2],['C0347941':'mass chest'],[217/12]),negation(nega,no,[255/2],['C0035508':'RHONCHI'],[258/7]),negation(nega,no,[255/2],['C3715215':'S1'],[290/2]),negation(nega,no,[255/2],['C0035508':'Wheeze'],[269/6]),negation(nega,no,[298/2],['C3842105':'Rubs'],[310/4]),negation(nega,no,[298/2],['C0018808':murmurs],[301/7]),negation(nega,no,[345/2],['C0577573':'Mass'],[355/6]),negation(nega,'no suspicious',[39/13],['C0235656':'lesion cervix'],[53/7,62/4]),negation(nega,no,[536/2],['C2678268':'Normal Vulva'],[560/12]),negation(nega,no,[536/2],['C0234233':'TENDERNESS (NOS)'],[539/10]),negation(nega,no,[536/2],['C0013987':feel],[550/8]),negation(nega,no,[603/2],['C0041834':'ERYTHEMA'],[606/8]),negation(nega,no,[603/2],['C0038999':'SWELLING'],[616/8]),negation(nega,no,[603/2],['C0234233':'TENDERNESS (NOS)'],[629/10])]).
utterance('00000000.tx.1',"HEENT:  EOMI, PERRL, OP normal   Skin: no suspicious lesions  Neck:  no thyromegaly, no bruits Nodes: no cervical, axillary, or supraclavicular lymphadenopathy Breasts - no nipple discharge or retraction, no dominant masses Chest:  clear to auscultation, no rhonchi or wheeze COR:  regular S1, S2, no murmurs, rubs or gallops    Abd:  soft, NT, no HSM or masses Pelvic - spent 10 min attempting to do Pap smear - cervix is located very high and ant, can't get speculum in place to get it  tried multiple different speculums. ",0/525,[]).
phrase('HEENT',[head([lexmatch([heent]),inputmatch(['HEENT']),tag(noun),tokens([heent])])],0/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1512338','HEENT','HEENT',[heent],[blor],[[[1,1],[1,1],0]],yes,no,['LNC','NCI','OMIM'],[0/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],5/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('EOMI,',[head([lexmatch([eomi]),inputmatch(['EOMI']),tag(noun),tokens([eomi])]),punc([inputmatch([',']),tokens([])])],8/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PERRL,',[head([inputmatch(['PERRL']),tag(noun),tokens([perrl])]),punc([inputmatch([',']),tokens([])])],14/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1642390','PERRL','Pupil equal round and reacting to light',[perrl],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC','NCI','SNOMEDCT_US'],[14/5],0,0)])]).
phrase('OP normal   Skin',[mod([lexmatch([op]),inputmatch(['OP']),tag(noun),tokens([op])]),head([lexmatch(['normal skin']),inputmatch([normal,'Skin']),tag(noun),tokens([normal,skin])])],21/16,[]).
candidates(11,4,0,7,[]).
mappings([map(-901,[ev(-901,'C0558145','Normal Skin','Skin appearance normal (finding)',[normal,skin],[fndg],[[[2,3],[1,2],0]],yes,no,['CHV','MTH','NCI','OMIM','SNOMEDCT_US'],[24/6,33/4],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],37/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no suspicious lesions  Neck',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([suspicious]),inputmatch([suspicious]),tag(adj),tokens([suspicious])]),mod([lexmatch([lesions]),inputmatch([lesions]),tag(noun),tokens([lesions])]),head([lexmatch([neck]),inputmatch(['Neck']),tag(noun),tokens([neck])])],39/27,[]).
candidates(11,5,0,6,[]).
mappings([map(-859,[ev(-660,'C0750493','Suspicious',suspicious,[suspicious],[idcn],[[[1,1],[1,1],0]],no,no,['CHV','LNC'],[42/10],0,0),ev(-838,'C0235656','lesion cervix','Lesion of cervix',[lesion,cervix],[patf],[[[2,2],[1,1],1],[[3,3],[2,2],5]],yes,no,['CHV','CST','DXP','SNOMEDCT_US'],[53/7,62/4],0,1)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],66/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no thyromegaly,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([thyromegaly]),inputmatch([thyromegaly]),tag(noun),tokens([thyromegaly])]),punc([inputmatch([',']),tokens([])])],69/15,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0018021','THYROMEGALY','Goiter',[thyromegaly],[patf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[72/11],0,1)])]).
phrase('no bruits Nodes',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([bruits]),inputmatch([bruits]),tag(noun),tokens([bruits])]),head([lexmatch([nodes]),inputmatch(['Nodes']),tag(noun),tokens([nodes])])],85/15,[]).
candidates(13,11,0,2,[]).
mappings([map(-888,[ev(-694,'C0006318',bruits,'Bruit',[bruits],[fndg],[[[1,1],[1,1],0]],no,no,['CHV','COSTAR','DXP','MTHICD9','SNM','SNMI','SNOMEDCT_US'],[88/6],0,1),ev(-861,'C0746922',nodes,'Anatomic Node',[nodes],[bpoc],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI'],[95/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],100/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no cervical, axillary,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([cervical]),inputmatch([cervical]),tag(adj),tokens([cervical])]),punc([inputmatch([',']),tokens([])]),head([lexmatch([axillary]),inputmatch([axillary]),tag(adj),tokens([axillary])]),punc([inputmatch([',']),tokens([])])],102/22,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0205064','Cervical','Cervical',[cervical],[spco],[[[1,1],[1,1],0]],no,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[105/8],0,0),ev(-861,'C0004454','Axillary','Axilla',[axillary],[blor],[[[2,2],[1,1],0]],yes,no,['CHV','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US','UWDA'],[115/8],0,0)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],125/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('supraclavicular lymphadenopathy Breasts -',[mod([lexmatch([supraclavicular]),inputmatch([supraclavicular]),tag(adj),tokens([supraclavicular])]),mod([lexmatch([lymphadenopathy]),inputmatch([lymphadenopathy]),tag(noun),tokens([lymphadenopathy])]),head([lexmatch([breasts]),inputmatch(['Breasts']),tag(noun),tokens([breasts])]),punc([inputmatch([-]),tokens([])])],128/41,[]).
candidates(10,6,0,4,[]).
mappings([map(-901,[ev(-734,'C0749155','Supraclavicular lymphadenopathy','Supraclavicular lymphadenopathy',[supraclavicular,lymphadenopathy],[patf],[[[1,1],[1,1],0],[[2,2],[2,2],0]],no,no,['MTH','NLMSubSyn','SNOMEDCT_US'],[128/31],0,1),ev(-827,'C0006141','BREASTS','Breast',[breasts],[bpoc],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[160/7],0,0)])]).
phrase('no nipple discharge',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([nipple]),inputmatch([nipple]),tag(noun),tokens([nipple])]),head([lexmatch([discharge]),inputmatch([discharge]),tag(noun),tokens([discharge])])],170/19,[]).
candidates(12,4,0,8,[]).
mappings([map(-1000,[ev(-1000,'C0149741','NIPPLE DISCHARGE','nipple discharge',[nipple,discharge],[sosy],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','COSTAR','DXP','ICD10CM','LNC','MTH','MTHICD9','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNMI','SNOMEDCT_US'],[173/16],0,1)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],190/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('retraction,',[head([lexmatch([retraction]),inputmatch([retraction]),tag(noun),tokens([retraction])]),punc([inputmatch([',']),tokens([])])],193/11,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0332523','Retraction','Retraction (finding)',[retraction],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','SNM','SNMI','SNOMEDCT_US'],[193/10],0,1)])]).
phrase('no dominant masses Chest',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([dominant]),inputmatch([dominant]),tag(adj),tokens([dominant])]),mod([lexmatch([masses]),inputmatch([masses]),tag(noun),tokens([masses])]),head([lexmatch([chest]),inputmatch(['Chest']),tag(noun),tokens([chest])])],205/24,[]).
candidates(14,6,0,8,[]).
mappings([map(-890,[ev(-660,'C1527180','Dominant','Dominant',[dominant],[ftcn],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[208/8],0,0),ev(-884,'C0347941','mass chest','Chest mass',[mass,chest],[fndg],[[[2,2],[1,1],1],[[3,3],[2,2],0]],yes,no,['CHV','COSTAR','DXP','NCI','SNMI','SNOMEDCT_US'],[217/12],0,1)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],229/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('clear to auscultation,',[head([lexmatch([clear]),inputmatch([clear]),tag(adj),tokens([clear])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),mod([lexmatch([auscultation]),inputmatch([auscultation]),tag(noun),tokens([auscultation])]),punc([inputmatch([',']),tokens([])])],232/22,[]).
candidates(3,0,0,3,[]).
mappings([map(-746,[ev(-790,'C1709157','Clear','Negative Surgical Margin',[clear],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[232/5],0,1),ev(-623,'C0004339','AUSCULTATION','Auscultation',[auscultation],[diap],[[[3,3],[1,1],0]],no,no,['AOD','CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','SNM','SNMI','SNOMEDCT_US'],[241/12],0,0)])]).
phrase('no rhonchi',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([rhonchi]),inputmatch([rhonchi]),tag(noun),tokens([rhonchi])])],255/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0035508','RHONCHI','Rhonchi',[rhonchi],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','DXP','LNC','MSH','MTH','NCI','NCI_NICHD','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[258/7],0,1)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],266/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('wheeze COR',[mod([lexmatch([wheeze]),inputmatch([wheeze]),tag(noun),tokens([wheeze])]),head([lexmatch([cor]),inputmatch(['COR']),tag(noun),tokens([cor])])],269/10,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-694,'C0035508','Wheeze','Rhonchi',[wheeze],[fndg],[[[1,1],[1,1],0]],no,no,['CHV','DXP','LNC','MSH','MTH','NCI','NCI_NICHD','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[269/6],0,1),ev(-861,'C0018787','Cor','Heart',[cor],[bpoc],[[[2,2],[1,1],0]],yes,no,['AIR','AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[276/3],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],279/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('regular S1,',[mod([lexmatch([regular]),inputmatch([regular]),tag(adj),tokens([regular])]),head([lexmatch([s1]),inputmatch(['S1']),tag(noun),tokens([s1])]),punc([inputmatch([',']),tokens([])])],282/11,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0205272','Regular','Regular',[regular],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[282/7],0,0),ev(-861,'C3715215','S1','S1',[s1],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC','MTH'],[290/2],0,1)])]).
phrase('S2,',[head([lexmatch([s2]),inputmatch(['S2']),tag(noun),tokens([s2])]),punc([inputmatch([',']),tokens([])])],294/3,[]).
candidates(5,0,0,5,[]).
mappings([map(-1000,[ev(-1000,'C1419718','S2','RPS2 gene',[s2],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[294/2],0,0)])]).
phrase('no murmurs,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([murmurs]),inputmatch([murmurs]),tag(noun),tokens([murmurs])]),punc([inputmatch([',']),tokens([])])],298/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0018808',murmurs,'Heart murmur',[murmurs],[fndg],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CHV','COSTAR','DXP','HPO','ICD10CM','ICPC','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[301/7],0,1)])]).
phrase(rubs,[verb([lexmatch([rubs]),inputmatch([rubs]),tag(verb),tokens([rubs])])],310/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3842105','Rubs','Rubs',[rubs],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC'],[310/4],0,1)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],315/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('gallops    Abd',[mod([lexmatch([gallops]),inputmatch([gallops]),tag(noun),tokens([gallops])]),head([lexmatch([abd]),inputmatch(['Abd']),tag(noun),tokens([abd])])],318/14,[]).
candidates(3,0,0,3,[]).
mappings([map(-861,[ev(-861,'C0000726',abd,'Abdomen',[abd],[blor],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NCI-GLOSS','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[329/3],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],332/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('soft, NT,',[mod([lexmatch([soft]),inputmatch([soft]),tag(adj),tokens([soft])]),punc([inputmatch([',']),tokens([])]),head([lexmatch([nt]),inputmatch(['NT']),tag(noun),tokens([nt])]),punc([inputmatch([',']),tokens([])])],335/9,[]).
candidates(6,1,0,5,[]).
mappings([map(-888,[ev(-694,'C0205358','Soft','Soft',[soft],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[335/4],0,0),ev(-861,'C0332126','NT','No treatment required for',[nt],[qlco],[[[2,2],[1,1],0]],yes,no,['CCS','MTH','NLMSubSyn','SNMI','SNOMEDCT_US'],[341/2],0,0)])]).
phrase('no HSM',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([hsm]),inputmatch(['HSM']),tag(noun),tokens([hsm])])],345/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1537594','HSM','LRRC4B gene',[hsm],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH'],[348/3],0,0)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],352/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(masses,[head([lexmatch([masses]),inputmatch([masses]),tag(noun),tokens([masses])])],355/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-966,[ev(-966,'C0577573','Mass','Mass of body region',[mass],[sosy],[[[1,1],[1,1],1]],yes,no,['MTH','SNOMEDCT_US','SNOMEDCT_VET'],[355/6],0,1)])]).
phrase('Pelvic -',[head([lexmatch([pelvic]),inputmatch(['Pelvic']),tag(adj),tokens([pelvic])]),punc([inputmatch([-]),tokens([])])],362/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0559769','Pelvic','Pelvic cavity structure',[pelvic],[bsoj],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','FMA','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US','UWDA'],[362/6],0,0)])]).
phrase(spent,[verb([lexmatch([spent]),inputmatch([spent]),tag(verb),tokens([spent])])],371/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-966,[ev(-966,'C0680968',spend,spending,[spend],[qnco],[[[1,1],[1,1],1]],yes,no,['AOD','CHV'],[371/5],0,0)])]).
phrase('10 min attempting to do Pap smear - cervix',[shapes([inputmatch(['10']),features([integer]),tokens(['10'])]),mod([lexmatch([min]),inputmatch([min]),tag(noun),tokens([min])]),mod([lexmatch([attempting]),inputmatch([attempting]),tag(noun),tokens([attempting])]),mod([lexmatch(['to do']),inputmatch([to,do]),tag(noun),tokens([to,do])]),mod([lexmatch(['pap smear']),inputmatch(['Pap',smear]),tag(noun),tokens([pap,smear])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([cervix]),inputmatch([cervix]),tag(noun),tokens([cervix])])],377/42,[]).
candidates(17,4,0,13,[]).
mappings([map(-752,[ev(-645,'C0456692','/10 min','/10 min',['10',min],[tmco],[[[1,1],[1,1],0],[[2,2],[2,2],0]],no,no,['SNOMEDCT_US'],[377/6],0,0),ev(-593,'C1516084','Attempt','Attempt',[attempt],[evnt],[[[3,3],[1,1],1]],no,no,['LNC','NCI'],[384/10],0,0),ev(-645,'C0079104','PAP Smear','Pap smear',[pap,smear],[diap],[[[6,7],[1,2],0]],no,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','PDQ','SNOMEDCT_US'],[401/9],0,0),ev(-793,'C0007874','CERVIX','Cervix Uteri',[cervix],[bpoc],[[[8,8],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US','UWDA'],[413/6],0,0)])]).
phrase(is,[aux([lexmatch([is]),inputmatch([is]),tag(aux),tokens([is])])],420/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(located,[verb([lexmatch([located]),inputmatch([located]),tag(verb),tokens([located])])],423/7,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('very high',[adv([lexmatch([very]),inputmatch([very]),tag(adv),tokens([very])]),head([lexmatch([high]),inputmatch([high]),tag(adj),tokens([high])])],431/9,[]).
candidates(8,0,0,8,[]).
mappings([map(-1000,[ev(-1000,'C0442804','Very high','Very high',[very,high],[fndg],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','HL7V3.0','LNC','SNOMEDCT_US'],[431/9],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],441/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('ant,',[head([lexmatch([ant]),inputmatch([ant]),tag(noun),tokens([ant])]),punc([inputmatch([',']),tokens([])])],445/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0003455','Ant','Ants',[ant],[euka],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','MSH','MTH','NCBI','SNM','SNMI','SNOMEDCT_US'],[445/3],0,0)])]).
phrase('can\'t',[modal([lexmatch(['can\'t']),inputmatch([can,'\'',t]),tag(modal),tokens([can,t])])],450/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(get,[verb([lexmatch([get]),inputmatch([get]),tag(verb),tokens([get])])],456/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('speculum in place',[head([lexmatch([speculum]),inputmatch([speculum]),tag(noun),tokens([speculum])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([place]),inputmatch([place]),tag(noun),tokens([place])])],460/17,[]).
candidates(4,0,0,4,[]).
mappings([map(-746,[ev(-790,'C0037816','Speculum','Speculum',[speculum],[medd],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[460/8],0,0),ev(-623,'C1704765','Place','Place - dosing instruction imperative',[place],[ftcn],[[[3,3],[1,1],0]],no,no,['MTH','SNOMEDCT_US'],[472/5],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],478/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0040363','TO','Togo',[to],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LCH','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[478/2],0,0)])]).
phrase(get,[verb([lexmatch([get]),inputmatch([get]),tag(verb),tokens([get])])],481/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(it,[pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])])],485/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(tried,[verb([lexmatch([tried]),inputmatch([tried]),tag(verb),tokens([tried])])],489/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('multiple different speculums.',[mod([lexmatch([multiple]),inputmatch([multiple]),tag(adj),tokens([multiple])]),mod([lexmatch([different]),inputmatch([different]),tag(adj),tokens([different])]),head([lexmatch([speculums]),inputmatch([speculums]),tag(noun),tokens([speculums])]),punc([inputmatch(['.']),tokens([])])],495/29,[]).
candidates(5,2,0,3,[]).
mappings([map(-851,[ev(-660,'C0439064','MULTIPLE','Numerous',[multiple],[qnco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[495/8],0,0),ev(-660,'C1705242','Different','Different',[different],[qlco],[[[2,2],[1,1],0]],no,no,['MTH','NCI'],[504/9],0,0),ev(-827,'C0037816','Speculums','Speculum',[speculums],[medd],[[[3,3],[1,1],0]],yes,no,['CHV','MSH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[514/9],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Otherwise, no tenderness palpated, normal vulva and vagina. ",525/60,[]).
phrase('Otherwise,',[adv([lexmatch([otherwise]),inputmatch(['Otherwise']),tag(adv),tokens([otherwise])]),punc([inputmatch([',']),tokens([])])],525/10,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no tenderness',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([tenderness]),inputmatch([tenderness]),tag(noun),tokens([tenderness])])],536/13,[]).
candidates(3,1,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0234233','TENDERNESS (NOS)','Sore to touch',[tenderness],[sosy],[[[1,1],[1,1],0]],yes,no,['CHV','CST','LNC','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[539/10],0,1)])]).
phrase(palpated,[verb([lexmatch([palpated]),inputmatch([palpated]),tag(verb),tokens([palpated])])],550/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-928,[ev(-928,'C0013987',feel,'Emotions',[feel],[menp],[[[1,1],[1,1],3]],yes,no,['AOD','CHV','CSP','ICF','ICF-CY','LCH','LCH_NW','MSH','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[550/8],0,1)])]).
phrase(',',[punc([inputmatch([',']),tokens([])])],558/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('normal vulva',[mod([lexmatch([normal]),inputmatch([normal]),tag(adj),tokens([normal])]),head([lexmatch([vulva]),inputmatch([vulva]),tag(noun),tokens([vulva])])],560/12,[]).
candidates(6,0,0,6,[]).
mappings([map(-1000,[ev(-1000,'C2678268','Normal Vulva','Normal external genitalia',[normal,vulva],[fndg],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['NLMSubSyn','OMIM'],[560/12],0,1)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],573/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('vagina.',[head([lexmatch([vagina]),inputmatch([vagina]),tag(noun),tokens([vagina])]),punc([inputmatch(['.']),tokens([])])],577/7,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1278985','Vagina','Entire vagina',[vagina],[bpoc],[[[1,1],[1,1],0]],yes,no,['MTH','NLMSubSyn','SNOMEDCT_US'],[577/6],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Musculoskeletal:  no erythema, swelling, or tenderness No back tend to palp, from, from of the left hip joint Ext:  no CCE    ,  Neuro:  grossly non-focal",585/154,[]).
phrase('Musculoskeletal',[head([lexmatch([musculoskeletal]),inputmatch(['Musculoskeletal']),tag(adj),tokens([musculoskeletal])])],585/15,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C2707260','Musculoskeletal','Musculoskeletal:-:Point in time:^Patient:-',[musculoskeletal],[clna],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[585/15],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],600/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no erythema,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([erythema]),inputmatch([erythema]),tag(noun),tokens([erythema])]),punc([inputmatch([',']),tokens([])])],603/12,[]).
candidates(2,1,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0041834','ERYTHEMA','Erythema',[erythema],[sosy],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[606/8],0,1)])]).
phrase(swelling,[verb([lexmatch([swelling]),inputmatch([swelling]),tag(verb),tokens([swelling])])],616/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0038999','SWELLING','Swelling',[swelling],[fndg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','ICPC','LNC','MTH','NCI','NCI_FDA','SNM','SNMI','SNOMEDCT_US'],[616/8],0,1)])]).
phrase(',',[punc([inputmatch([',']),tokens([])])],624/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],626/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(tenderness,[head([lexmatch([tenderness]),inputmatch([tenderness]),tag(noun),tokens([tenderness])])],629/10,[]).
candidates(3,1,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0234233','TENDERNESS (NOS)','Sore to touch',[tenderness],[sosy],[[[1,1],[1,1],0]],yes,no,['CHV','CST','LNC','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[629/10],0,1)])]).
phrase('No back',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([back]),inputmatch([back]),tag(adj),tokens([back])])],640/7,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C0460009','Back','Back structure, including back of neck',[back],[blor],[[[1,1],[1,1],0]],yes,no,['FMA','MTH','SNOMEDCT_US','SNOMEDCT_VET','UWDA'],[643/4],0,0)])]).
phrase('tend to palp,',[verb([lexmatch([tend]),inputmatch([tend]),tag(verb),tokens([tend])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),mod([lexmatch([palp]),inputmatch([palp]),tag(noun),tokens([palp])]),punc([inputmatch([',']),tokens([])])],648/13,[]).
candidates(3,0,0,3,[]).
mappings([map(-790,[ev(-790,'C1412365','PALP','ALPP gene',[palp],[gngm],[[[3,3],[1,1],0]],yes,no,['HGNC','MTH','NCI','NLMSubSyn','OMIM'],[656/4],0,0)])]).
phrase('from,',[prep([lexmatch([from]),inputmatch([from]),tag(prep),tokens([from])]),punc([inputmatch([',']),tokens([])])],662/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('from of the left hip joint Ext',[prep([lexmatch([from]),inputmatch([from]),tag(prep),tokens([from])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch(['left hip']),inputmatch([left,hip]),tag(noun),tokens([left,hip])]),mod([lexmatch([joint]),inputmatch([joint]),tag(noun),tokens([joint])]),mod([lexmatch([ext]),inputmatch(['Ext']),tag(noun),tokens([ext])])],668/30,[]).
candidates(17,1,0,16,[]).
mappings([map(-756,[ev(-748,'C1517320','From','From',[from],[qlco],[[[1,1],[1,1],0]],yes,no,['NCI'],[668/4],0,0),ev(-814,'C1285115','Left hip joint','Left hip joint structure',[left,hip,joint],[bsoj],[[[4,5],[1,2],0],[[6,6],[3,3],0]],yes,no,['FMA','NLMSubSyn','SNOMEDCT_US','UWDA'],[680/14],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],698/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no CCE    ,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([cce]),inputmatch(['CCE']),tag(noun),tokens([cce])]),punc([inputmatch([',']),tokens([])])],701/11,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Neuro',[head([lexmatch([neuro]),inputmatch(['Neuro']),tag(adj),tokens([neuro])])],714/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(:,[punc([inputmatch([:]),tokens([])])],719/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('grossly non-focal',[adv([lexmatch([grossly]),inputmatch([grossly]),tag(adv),tokens([grossly])]),head([lexmatch(['non-focal']),inputmatch([non,-,focal]),tag(adj),tokens([non,focal])])],722/17,[]).
candidates(4,2,0,2,[]).
mappings([map(-790,[ev(-827,'C1518422','Non','Negation',[non],[ftcn],[[[2,2],[1,1],0]],yes,no,['LNC','MTH','NCI'],[730/3],0,0),ev(-827,'C0205234','Focal','Focal',[focal],[spco],[[[3,3],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[734/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Health Maintenance Chlamydia 03/09/62 NEGATIVE.  ",0/49,[]).
phrase('Health Maintenance Chlamydia 03/09/62 NEGATIVE.',[mod([lexmatch([health]),inputmatch(['Health']),tag(noun),tokens([health])]),mod([lexmatch([maintenance]),inputmatch(['Maintenance']),tag(noun),tokens([maintenance])]),mod([lexmatch([chlamydia]),inputmatch(['Chlamydia']),tag(noun),tokens([chlamydia])]),shapes([inputmatch(['03',/,'09']),features([fraction]),tokens(['03','09'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['62']),features([integer]),tokens(['62'])]),head([lexmatch([negative]),inputmatch(['NEGATIVE']),tag(noun),tokens([negative])]),punc([inputmatch(['.']),tokens([])])],0/47,[]).
candidates(11,2,0,9,[]).
mappings([map(-772,[ev(-651,'C0262500','HEALTH MAINTENANCE','Health maintenance',[health,maintenance],[hlca],[[[1,1],[1,1],0],[[2,2],[2,2],0]],no,no,['CHV','COSTAR','MTH','NLMSubSyn'],[0/18],0,0),ev(-629,'C0008148','CHLAMYDIA','Chlamydia',[chlamydia],[bact],[[[3,3],[1,1],0]],no,no,['AOD','CHV','COSTAR','CSP','LCH_NW','LNC','MSH','MTH','NCBI','NCI','NCI_CDISC','SNM','SNMI','SNOMEDCT_US'],[19/9],0,0),ev(-795,'C0205160','Negative','Negative',[negative],[qlco],[[[7,7],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','SNMI','SNOMEDCT_US'],[38/8],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Cholesterol-HDL 03/05/2074 52  Cholesterol-LDL 03/05/2074 93 ATP III Classification of LDL Cholesterol (mg/dl): &lt; ",49/117,[]).
phrase('Cholesterol-HDL 03/05/2074 52  Cholesterol-LDL 03/05/2074 93 ATP III Classification',[mod([lexmatch([cholesterol]),inputmatch(['Cholesterol']),tag(noun),tokens([cholesterol])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([hdl]),inputmatch(['HDL']),tag(noun),tokens([hdl])]),shapes([inputmatch(['03',/,'05']),features([fraction]),tokens(['03','05'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2074']),features([integer]),tokens(['2074'])]),shapes([inputmatch(['52']),features([integer]),tokens(['52'])]),mod([lexmatch([cholesterol]),inputmatch(['Cholesterol']),tag(noun),tokens([cholesterol])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([ldl]),inputmatch(['LDL']),tag(noun),tokens([ldl])]),shapes([inputmatch(['03',/,'05']),features([fraction]),tokens(['03','05'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2074']),features([integer]),tokens(['2074'])]),shapes([inputmatch(['93']),features([integer]),tokens(['93'])]),mod([lexmatch(['atp iii']),inputmatch(['ATP','III']),tag(noun),tokens([atp,iii])]),head([lexmatch([classification]),inputmatch(['Classification']),tag(noun),tokens([classification])])],49/83,[]).
candidates(10,0,0,10,[]).
mappings([map(-768,[ev(-665,'C2699193','Cholesterol/HDL-Cholesterol','Cholesterol to HDL-Cholesterol Ratio Measurement',[cholesterol,hdl,cholesterol],[lbpr],[[[1,1],[1,1],0],[[2,2],[2,2],0],[[7,7],[3,3],0]],no,no,['NCI','NCI_CDISC'],[49/15,80/11],0,0),ev(-619,'C1705160','III','III (suffix)',[iii],[qlco],[[[14,14],[1,1],0]],no,no,['MTH','NCI'],[114/3],0,0),ev(-785,'C0008902','Classification','Classification',[classification],[clas],[[[15,15],[1,1],0]],yes,no,['AOD','CHV','LCH','LCH_NW','MSH','MTH','NCI','NLMSubSyn','SNMI','SNOMEDCT_US'],[118/14],0,0)])]).
phrase('of LDL Cholesterol',[prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([ldl]),inputmatch(['LDL']),tag(noun),tokens([ldl])]),head([lexmatch([cholesterol]),inputmatch(['Cholesterol']),tag(noun),tokens([cholesterol])])],133/18,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0023824','LDL Cholesterol','LDL Cholesterol Lipoproteins',[ldl,cholesterol],[bacs,orch],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','LNC','MSH','MTH','NDFRT','NLMSubSyn','SNMI','SNOMEDCT_US'],[136/15],0,0)])]).
phrase('(mg/dl',[punc([inputmatch(['(']),tokens([])]),mod([lexmatch([mg]),inputmatch([mg]),tag(noun),tokens([mg])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([dl]),inputmatch([dl]),tag(noun),tokens([dl])])],152/6,[]).
candidates(6,0,0,6,[]).
mappings([map(-1000,[ev(-1000,'C0439269','mg dl','mg/dL',[mg,dl],[qnco],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','NCI','NCI_CDISC','NCI_NICHD','NCI_UCUM','SNOMEDCT_US'],[153/5],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],158/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(:,[punc([inputmatch([:]),tokens([])])],159/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('&lt',[punc([inputmatch([&]),tokens([])]),head([lexmatch([lt]),inputmatch([lt]),tag(noun),tokens([lt])])],161/3,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0023376','LT','Lesotho',[lt],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','LCH','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[162/2],0,0)])]).
phrase(;,[punc([inputmatch([;]),tokens([])])],164/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.3',"100 Optimal 100-129 Near Optimal/Above Optimal 130-159 Borderline High 160-189 High = or &gt; ",166/94,[]).
phrase('100 Optimal 100-129 Near Optimal/',[shapes([inputmatch(['100']),features([integer]),tokens(['100'])]),mod([lexmatch([optimal]),inputmatch(['Optimal']),tag(adj),tokens([optimal])]),shapes([inputmatch(['100']),features([integer]),tokens(['100'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['129']),features([integer]),tokens(['129'])]),prep([lexmatch([near]),inputmatch(['Near']),tag(prep),tokens([near])]),mod([lexmatch([optimal]),inputmatch(['Optimal']),tag(adj),tokens([optimal])]),punc([inputmatch([/]),tokens([])])],166/33,[]).
candidates(2,0,0,2,[]).
mappings([map(-679,[ev(-753,'C3817553','100%','100%',['100'],[qnco],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[166/3],0,0),ev(-753,'C2698651','Optimal','Optimum',[optimal],[qlco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI'],[170/7],0,0)])]).
phrase('Above Optimal 130-159 Borderline High 160-189 High',[prep([lexmatch([above]),inputmatch(['Above']),tag(prep),tokens([above])]),mod([lexmatch([optimal]),inputmatch(['Optimal']),tag(adj),tokens([optimal])]),shapes([inputmatch(['130']),features([integer]),tokens(['130'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['159']),features([integer]),tokens(['159'])]),mod([lexmatch(['borderline high']),inputmatch(['Borderline','High']),tag(adj),tokens([borderline,high])]),shapes([inputmatch(['160']),features([integer]),tokens(['160'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['189']),features([integer]),tokens(['189'])]),head([lexmatch([high]),inputmatch(['High']),tag(adj),tokens([high])])],199/50,[]).
candidates(8,0,0,8,[]).
mappings([map(-590,[ev(-626,'C2698651','Optimal','Optimum',[optimal],[qlco],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[205/7],0,0),ev(-645,'C2711208','Borderline high','Borderline high',[borderline,high],[qlco],[[[4,5],[1,2],0]],no,no,['SNOMEDCT_US'],[221/15],0,0)])]).
phrase(=,[punc([inputmatch([=]),tokens([])])],250/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],252/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('&gt',[punc([inputmatch([&]),tokens([])]),head([lexmatch([gt]),inputmatch([gt]),tag(noun),tokens([gt])])],255/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1435727','GT','FABP6 protein, human',[gt],[aapp,bacs],[[[1,1],[1,1],0]],yes,no,['MSH','MTH','NCI'],[256/2],0,0)])]).
phrase(;,[punc([inputmatch([;]),tokens([])])],258/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.4',"190 Very High  Cholesterol 03/05/2074 155  Colonoscopy 06/04/2071 see report in Results  GFR (estimated) 03/05/2074 77.2 Units: ml/min/1.73msq  HbA1c 03/05/2074 6.6  Hct (Hematocrit) 04/27/2072 40.7  Hgb (Hemoglobin) 04/27/2072 13.1  Influenza Vaccine 11/29/2067  Mammogram 02/10/2074 see report in Results  Pap Smear 12/16/2070 see report in Results  Td Booster 12/16/2070  Triglycerides 03/05/2074 51 Normal: &lt; ",260/416,[]).
phrase('190 Very High  Cholesterol 03/05/2074 155  Colonoscopy 06/04/2071',[shapes([inputmatch(['190']),features([integer]),tokens(['190'])]),adv([lexmatch([very]),inputmatch(['Very']),tag(adv),tokens([very])]),mod([lexmatch([high]),inputmatch(['High']),tag(adj),tokens([high])]),mod([lexmatch([cholesterol]),inputmatch(['Cholesterol']),tag(noun),tokens([cholesterol])]),shapes([inputmatch(['03',/,'05']),features([fraction]),tokens(['03','05'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2074']),features([integer]),tokens(['2074'])]),shapes([inputmatch(['155']),features([integer]),tokens(['155'])]),mod([lexmatch([colonoscopy]),inputmatch(['Colonoscopy']),tag(noun),tokens([colonoscopy])]),shapes([inputmatch(['06',/,'04']),features([fraction]),tokens(['06','04'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2071']),features([integer]),tokens(['2071'])])],260/65,[]).
candidates(13,0,0,13,[]).
mappings([map(-720,[ev(-799,'C0442804','Very high','Very high',[very,high],[fndg],[[[2,2],[1,1],0],[[3,3],[2,2],0]],yes,no,['CHV','HL7V3.0','LNC','SNOMEDCT_US'],[264/9],0,0),ev(-787,'C0008377','CHOLESTEROL','Cholesterol',[cholesterol],[bacs,orch],[[[4,4],[1,1],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHSPL','NCI','NCI_CRCH','NCI_DCP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[275/11],0,0),ev(-787,'C0009378','Colonoscopy',colonoscopy,[colonoscopy],[diap],[[[9,9],[1,1],0]],yes,no,['AOD','CHV','CSP','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHMST','NCI','NCI_NCI-GLOSS','NLMSubSyn','PDQ','SNM','SNMI','SNOMEDCT_US'],[303/11],0,0)]),map(-720,[ev(-787,'C0442824','Very','Very',[very],[qlco],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[264/4],0,0),ev(-799,'C1522133','High Cholesterol','Hypercholesterolemia result',[high,cholesterol],[fndg],[[[3,3],[1,1],0],[[4,4],[2,2],0]],yes,no,['CHV','MTH','NCI','NCI_NICHD','NLMSubSyn','OMIM'],[269/4,275/11],0,0),ev(-787,'C0009378','Colonoscopy',colonoscopy,[colonoscopy],[diap],[[[9,9],[1,1],0]],yes,no,['AOD','CHV','CSP','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHMST','NCI','NCI_NCI-GLOSS','NLMSubSyn','PDQ','SNM','SNMI','SNOMEDCT_US'],[303/11],0,0)])]).
phrase(see,[verb([lexmatch([see]),inputmatch([see]),tag(verb),tokens([see])])],326/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[326/3],0,0)])]).
phrase('report in Results  GFR',[head([lexmatch([report]),inputmatch([report]),tag(noun),tokens([report])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([results]),inputmatch(['Results']),tag(noun),tokens([results])]),mod([lexmatch([gfr]),inputmatch(['GFR']),tag(noun),tokens([gfr])])],330/22,[]).
candidates(8,0,0,8,[]).
mappings([map(-722,[ev(-770,'C0684224','Report','Report (document)',[report],[inpr],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[330/6],0,0),ev(-570,'C2825142','Result','Experimental Result',[result],[fndg],[[[3,3],[1,1],1]],no,no,['MTH','NCI','NLMSubSyn'],[340/7],0,0),ev(-604,'C0017654','GFR','Glomerular Filtration Rate',[gfr],[diap],[[[4,4],[1,1],0]],no,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[349/3],0,0)])]).
phrase('(estimated',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([estimated]),inputmatch([estimated]),tag(adj),tokens([estimated])])],353/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0750572','Estimated','Estimated',[estimated],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_FDA','SNOMEDCT_US'],[354/9],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],363/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('03/05/2074 77.2 Units',[shapes([inputmatch(['03',/,'05']),features([fraction]),tokens(['03','05'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2074']),features([integer]),tokens(['2074'])]),shapes([inputmatch(['77','.','2']),features([real_number]),tokens(['77','2'])]),head([lexmatch([units]),inputmatch(['Units']),tag(noun),tokens([units])])],365/21,[]).
candidates(5,2,0,3,[]).
mappings([map(-799,[ev(-799,'C1519795','Units','Unit of Measure',[units],[qnco],[[[6,6],[1,1],0]],yes,no,['MTH','NCI','NCI_NICHD','NCI_UCUM'],[381/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],386/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('ml/min/1.73msq  HbA1c 03/05/2074 6.6  Hct (Hematocrit',[mod([lexmatch([ml]),inputmatch([ml]),tag(noun),tokens([ml])]),punc([inputmatch([/]),tokens([])]),mod([lexmatch([min]),inputmatch([min,/]),tag(noun),tokens([min])]),shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),punc([inputmatch(['.']),tokens([])]),mod([inputmatch(['73msq']),tag(noun),tokens(['73msq'])]),mod([lexmatch([hba1c]),inputmatch(['HbA1c']),tag(noun),tokens([hba1c])]),shapes([inputmatch(['03',/,'05']),features([fraction]),tokens(['03','05'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2074']),features([integer]),tokens(['2074'])]),shapes([inputmatch(['6','.','6']),features([real_number]),tokens(['6','6'])]),mod([lexmatch([hct]),inputmatch(['Hct','(']),tag(noun),tokens([hct])]),head([lexmatch([hematocrit]),inputmatch(['Hematocrit']),tag(noun),tokens([hematocrit])])],388/53,[]).
candidates(13,0,0,13,[]).
mappings([map(-783,[ev(-632,'C0439445','mL/min','mL/min',[ml,min],[qnco],[[[1,1],[1,1],0],[[2,2],[2,2],0]],no,no,['NCI','NCI_CDISC','NCI_UCUM','SNOMEDCT_US'],[388/6],0,0),ev(-799,'C0018935','Hct - Haematocrit','Hematocrit procedure',[hct,haematocrit],[lbpr],[[[11,11],[1,1],0],[[12,12],[2,2],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[426/3,431/10],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],441/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('04/27/2072 40.7  Hgb',[shapes([inputmatch(['04',/,'27']),features([fraction]),tokens(['04','27'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2072']),features([integer]),tokens(['2072'])]),shapes([inputmatch(['40','.','7']),features([real_number]),tokens(['40','7'])]),head([lexmatch([hgb]),inputmatch(['Hgb']),tag(noun),tokens([hgb])])],443/20,[]).
candidates(6,0,0,6,[]).
mappings([map(-728,[ev(-632,'C0439509','/40','/40',['40'],[tmco],[[[4,4],[1,1],0]],no,no,['SNOMEDCT_US'],[454/2],0,0),ev(-799,'C1424337','HGB','CYGB gene',[hgb],[gngm],[[[6,6],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[460/3],0,0)])]).
phrase('(Hemoglobin',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([hemoglobin]),inputmatch(['Hemoglobin']),tag(noun),tokens([hemoglobin])])],464/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0019046','Haemoglobin','Hemoglobin',[haemoglobin],[aapp,bacs],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US','UWDA'],[465/10],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],475/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('04/27/2072 13.1  Influenza Vaccine 11/29/2067  Mammogram 02/10/2074',[shapes([inputmatch(['04',/,'27']),features([fraction]),tokens(['04','27'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2072']),features([integer]),tokens(['2072'])]),shapes([inputmatch(['13','.','1']),features([real_number]),tokens(['13','1'])]),mod([lexmatch(['influenza vaccine']),inputmatch(['Influenza','Vaccine']),tag(noun),tokens([influenza,vaccine])]),shapes([inputmatch(['11',/,'29']),features([fraction]),tokens(['11','29'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2067']),features([integer]),tokens(['2067'])]),mod([lexmatch([mammogram]),inputmatch(['Mammogram']),tag(noun),tokens([mammogram])]),shapes([inputmatch(['02',/,'10']),features([fraction]),tokens(['02','10'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2074']),features([integer]),tokens(['2074'])])],477/67,[]).
candidates(14,5,0,9,[]).
mappings([map(-685,[ev(-795,'C0021403','Influenza Vaccine','Influenza virus vaccine',[influenza,vaccine],[imft,phsu],[[[6,7],[1,2],0]],yes,no,['ATC','CHV','CSP','HL7V2.5','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NDFRT','NLMSubSyn','SNM','SNMI','SNOMEDCT_US','VANDF'],[494/17],0,0),ev(-786,'C3843708','29+','29+',['29'],[fndg],[[[9,9],[1,1],0]],yes,no,['LNC'],[515/2],0,0),ev(-786,'C0024671','Mammogram','Mammography',[mammogram],[diap],[[[11,11],[1,1],0]],yes,no,['CCS','CHV','CSP','LNC','MEDLINEPLUS','MSH','MTH','MTHHH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[524/9],0,0),ev(-786,'C3842590','10%','10%',['10'],[fndg],[[[13,13],[1,1],0]],yes,no,['LNC'],[537/2],0,0)])]).
phrase(see,[verb([lexmatch([see]),inputmatch([see]),tag(verb),tokens([see])])],545/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[545/3],0,0)])]).
phrase('report in Results  Pap Smear 12/16/2070',[head([lexmatch([report]),inputmatch([report]),tag(noun),tokens([report])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([results]),inputmatch(['Results']),tag(noun),tokens([results])]),mod([lexmatch(['pap smear']),inputmatch(['Pap','Smear']),tag(noun),tokens([pap,smear])]),shapes([inputmatch(['12',/,'16']),features([fraction]),tokens(['12','16'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2070']),features([integer]),tokens(['2070'])])],549/39,[]).
candidates(16,0,0,16,[]).
mappings([map(-728,[ev(-744,'C0684224','Report','Report (document)',[report],[inpr],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[549/6],0,0),ev(-610,'C0555134','Pap smear result','Cervical smear result',[pap,smear,result],[lbtr],[[[4,5],[1,2],0],[[3,3],[3,3],1]],no,no,['NLMSubSyn','SNOMEDCT_US'],[559/7,568/9],0,0)])]).
phrase(see,[verb([lexmatch([see]),inputmatch([see]),tag(verb),tokens([see])])],589/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[589/3],0,0)])]).
phrase('report in Results  Td Booster 12/16/2070  Triglycerides 03/05/2074 51 Normal',[head([lexmatch([report]),inputmatch([report]),tag(noun),tokens([report])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([results]),inputmatch(['Results']),tag(noun),tokens([results])]),mod([lexmatch([td]),inputmatch(['Td']),tag(noun),tokens([td])]),mod([lexmatch([booster]),inputmatch(['Booster']),tag(noun),tokens([booster])]),shapes([inputmatch(['12',/,'16']),features([fraction]),tokens(['12','16'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2070']),features([integer]),tokens(['2070'])]),mod([lexmatch([triglycerides]),inputmatch(['Triglycerides']),tag(noun),tokens([triglycerides])]),shapes([inputmatch(['03',/,'05']),features([fraction]),tokens(['03','05'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2074']),features([integer]),tokens(['2074'])]),shapes([inputmatch(['51']),features([integer]),tokens(['51'])]),mod([lexmatch([normal]),inputmatch(['Normal']),tag(adj),tokens([normal])])],593/76,[]).
candidates(15,0,0,15,[]).
mappings([map(-627,[ev(-734,'C0684224','Report','Report (document)',[report],[inpr],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[593/6],0,0),ev(-568,'C0041061','TD','Trinidad and Tobago',[td],[geoa],[[[4,4],[1,1],0]],no,no,['AOD','CHV','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[612/2],0,0),ev(-568,'C1697762','Booster','Booster Immunization - ActSubstanceAdministrationCode',[booster],[topp],[[[5,5],[1,1],0]],no,no,['CHV','MTH','NCI','NCI_NCI-GLOSS'],[615/7],0,0),ev(-568,'C0041004','TRIGLYCERIDES','Triglycerides',[triglycerides],[bacs,orch],[[[9,9],[1,1],0]],no,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_CRCH','NDFRT','SNM','SNMI','SNOMEDCT_US','VANDF'],[635/13],0,0),ev(-580,'C0459422','normal results','Normal result',[normal,results],[fndg],[[[14,14],[1,1],0],[[3,3],[2,2],0]],no,no,['CHV','NLMSubSyn','SNOMEDCT_US'],[603/7,663/6],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],669/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('&lt',[punc([inputmatch([&]),tokens([])]),head([lexmatch([lt]),inputmatch([lt]),tag(noun),tokens([lt])])],671/3,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0023376','LT','Lesotho',[lt],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','LCH','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[672/2],0,0)])]).
phrase(;,[punc([inputmatch([;]),tokens([])])],674/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.5',"150 mg/dl Borderline High: 150-199 mg/dl High: 200-499 mg/dl Very high: &gt; ",676/77,[]).
phrase('150 mg/dl',[shapes([inputmatch(['150']),features([integer]),tokens(['150'])]),mod([lexmatch([mg]),inputmatch([mg]),tag(noun),tokens([mg])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([dl]),inputmatch([dl]),tag(noun),tokens([dl])])],676/9,[]).
candidates(6,0,0,6,[]).
mappings([map(-901,[ev(-901,'C0439269','mg dl','mg/dL',[mg,dl],[qnco],[[[2,2],[1,1],0],[[3,3],[2,2],0]],yes,no,['CHV','NCI','NCI_CDISC','NCI_NICHD','NCI_UCUM','SNOMEDCT_US'],[680/5],0,0)])]).
phrase('Borderline High',[head([lexmatch(['borderline high']),inputmatch(['Borderline','High']),tag(adj),tokens([borderline,high])])],686/15,[]).
candidates(7,0,0,7,[]).
mappings([map(-1000,[ev(-1000,'C2711208','Borderline high','Borderline high',[borderline,high],[qlco],[[[1,2],[1,2],0]],yes,no,['SNOMEDCT_US'],[686/15],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],701/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('150-199 mg/dl',[shapes([inputmatch(['150']),features([integer]),tokens(['150'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['199']),features([integer]),tokens(['199'])]),mod([lexmatch([mg]),inputmatch([mg]),tag(noun),tokens([mg])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([dl]),inputmatch([dl]),tag(noun),tokens([dl])])],703/13,[]).
candidates(6,0,0,6,[]).
mappings([map(-861,[ev(-861,'C0439269','mg dl','mg/dL',[mg,dl],[qnco],[[[3,3],[1,1],0],[[4,4],[2,2],0]],yes,no,['CHV','NCI','NCI_CDISC','NCI_NICHD','NCI_UCUM','SNOMEDCT_US'],[711/5],0,0)])]).
phrase('High',[head([lexmatch([high]),inputmatch(['High']),tag(adj),tokens([high])])],717/4,[]).
candidates(5,0,0,5,[]).
mappings([map(-1000,[ev(-1000,'C1299351','High','Abnormally high',[high],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V3.0','MTH','SNOMEDCT_US'],[717/4],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],721/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('200-499 mg/dl',[shapes([inputmatch(['200']),features([integer]),tokens(['200'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['499']),features([integer]),tokens(['499'])]),mod([lexmatch([mg]),inputmatch([mg]),tag(noun),tokens([mg])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([dl]),inputmatch([dl]),tag(noun),tokens([dl])])],723/13,[]).
candidates(6,0,0,6,[]).
mappings([map(-861,[ev(-861,'C0439269','mg dl','mg/dL',[mg,dl],[qnco],[[[3,3],[1,1],0],[[4,4],[2,2],0]],yes,no,['CHV','NCI','NCI_CDISC','NCI_NICHD','NCI_UCUM','SNOMEDCT_US'],[731/5],0,0)])]).
phrase('Very high',[adv([lexmatch([very]),inputmatch(['Very']),tag(adv),tokens([very])]),head([lexmatch([high]),inputmatch([high]),tag(adj),tokens([high])])],737/9,[]).
candidates(8,0,0,8,[]).
mappings([map(-1000,[ev(-1000,'C0442804','Very high','Very high',[very,high],[fndg],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','HL7V3.0','LNC','SNOMEDCT_US'],[737/9],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],746/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('&gt',[punc([inputmatch([&]),tokens([])]),head([lexmatch([gt]),inputmatch([gt]),tag(noun),tokens([gt])])],748/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1435727','GT','FABP6 protein, human',[gt],[aapp,bacs],[[[1,1],[1,1],0]],yes,no,['MSH','MTH','NCI'],[749/2],0,0)])]).
phrase(;,[punc([inputmatch([;]),tokens([])])],751/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.6',"or = 500 mg/dl  TSH 03/05/2074 2.297  UA-Protein 03/12/2066 NEGATIVE  Urine Culture 03/12/2066 see report in Results",753/116,[]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],753/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('= 500 mg/dl  TSH 03/05/2074 2.297  UA-Protein 03/12/2066 NEGATIVE  Urine Culture 03/12/2066',[punc([inputmatch([=]),tokens([])]),shapes([inputmatch(['500']),features([integer]),tokens(['500'])]),mod([lexmatch([mg]),inputmatch([mg]),tag(noun),tokens([mg])]),punc([inputmatch([/]),tokens([])]),mod([lexmatch([dl]),inputmatch([dl]),tag(noun),tokens([dl])]),mod([lexmatch([tsh]),inputmatch(['TSH']),tag(noun),tokens([tsh])]),shapes([inputmatch(['03',/,'05']),features([fraction]),tokens(['03','05'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2074']),features([integer]),tokens(['2074'])]),shapes([inputmatch(['2','.','297']),features([real_number]),tokens(['2','297'])]),mod([lexmatch([ua]),inputmatch(['UA']),tag(noun),tokens([ua])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([protein]),inputmatch(['Protein']),tag(noun),tokens([protein])]),shapes([inputmatch(['03',/,'12']),features([fraction]),tokens(['03','12'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2066']),features([integer]),tokens(['2066'])]),mod([lexmatch([negative]),inputmatch(['NEGATIVE']),tag(adj),tokens([negative])]),mod([lexmatch(['urine culture']),inputmatch(['Urine','Culture']),tag(noun),tokens([urine,culture])]),shapes([inputmatch(['03',/,'12']),features([fraction]),tokens(['03','12'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2066']),features([integer]),tokens(['2066'])])],756/91,[]).
candidates(27,2,0,25,[]).
mappings([map(-699,[ev(-790,'C0439269','mg dl','mg/dL',[mg,dl],[qnco],[[[2,2],[1,1],0],[[3,3],[2,2],0]],yes,no,['CHV','NCI','NCI_CDISC','NCI_NICHD','NCI_UCUM','SNOMEDCT_US'],[762/5],0,0),ev(-783,'C0042014','UA','Urinalysis',[ua],[lbpr],[[[10,10],[1,1],0]],yes,no,['AOD','CHV','CSP','LCH_NW','LNC','MSH','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[791/2],0,0),ev(-811,'C0262923','Protein - urine','Urine protein test',[protein,urine],[lbpr],[[[11,11],[1,1],0],[[16,16],[2,2],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[794/7,823/5],0,0),ev(-783,'C0205160','Negative','Negative',[negative],[qlco],[[[15,15],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','SNMI','SNOMEDCT_US'],[813/8],0,0),ev(-783,'C2242979','Culture','Microbial culture (procedure)',[culture],[lbpr],[[[17,17],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[829/7],0,0)]),map(-699,[ev(-790,'C0439269','mg dl','mg/dL',[mg,dl],[qnco],[[[2,2],[1,1],0],[[3,3],[2,2],0]],yes,no,['CHV','NCI','NCI_CDISC','NCI_NICHD','NCI_UCUM','SNOMEDCT_US'],[762/5],0,0),ev(-783,'C0042014','UA','Urinalysis',[ua],[lbpr],[[[10,10],[1,1],0]],yes,no,['AOD','CHV','CSP','LCH_NW','LNC','MSH','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[791/2],0,0),ev(-783,'C0033684','PROTEIN','Proteins',[protein],[aapp,bacs],[[[11,11],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_DCP','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','UWDA','VANDF'],[794/7],0,0),ev(-783,'C0205160','Negative','Negative',[negative],[qlco],[[[15,15],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','SNMI','SNOMEDCT_US'],[813/8],0,0),ev(-790,'C0430404','Urine culture','Urine for culture',[urine,culture],[lbpr],[[[16,17],[1,2],0]],yes,no,['CHV','NLMSubSyn','SNOMEDCT_US'],[823/13],0,0)])]).
phrase(see,[verb([lexmatch([see]),inputmatch([see]),tag(verb),tokens([see])])],848/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[848/3],0,0)])]).
phrase('report in Results',[head([lexmatch([report]),inputmatch([report]),tag(noun),tokens([report])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([results]),inputmatch(['Results']),tag(noun),tokens([results])])],852/17,[]).
candidates(6,0,0,6,[]).
mappings([map(-730,[ev(-790,'C0684224','Report','Report (document)',[report],[inpr],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[852/6],0,0),ev(-590,'C2825142','Result','Experimental Result',[result],[fndg],[[[3,3],[1,1],1]],no,no,['MTH','NCI','NLMSubSyn'],[862/7],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([negation(nega,not,[466/3],['C3842296':'Else'],[498/4])]).
utterance('00000000.tx.1',"Assessment and Plan       1.  ",0/30,[]).
phrase('Assessment',[head([lexmatch([assessment]),inputmatch(['Assessment']),tag(noun),tokens([assessment])])],0/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1516048','Assessment','Assessed',[assessment],[acty],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_NCI-GLOSS'],[0/10],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],11/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Plan       1.',[mod([lexmatch([plan]),inputmatch(['Plan']),tag(noun),tokens([plan])]),shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),punc([inputmatch(['.']),tokens([])])],15/13,[]).
candidates(3,0,0,3,[]).
mappings([map(-861,[ev(-861,'C0599880','Plan','Treatment Plan',[plan],[inpr],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','LNC','MTH','NCI','NLMSubSyn'],[15/4],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Health Maintenance -  Pap smear  -- unable to get this time again, was able to do it 2070, will send back to gyn. mammo -to sched,  colonoscopy fine  2071 - repeat 2081. ",30/170,[]).
phrase('Health Maintenance -  Pap smear',[mod([lexmatch([health]),inputmatch(['Health']),tag(noun),tokens([health])]),mod([lexmatch([maintenance]),inputmatch(['Maintenance']),tag(noun),tokens([maintenance])]),punc([inputmatch([-]),tokens([])]),head([lexmatch(['pap smear']),inputmatch(['Pap',smear]),tag(noun),tokens([pap,smear])])],30/31,[]).
candidates(12,2,0,10,[]).
mappings([map(-888,[ev(-694,'C0262500','HEALTH MAINTENANCE','Health maintenance',[health,maintenance],[hlca],[[[1,1],[1,1],0],[[2,2],[2,2],0]],no,no,['CHV','COSTAR','MTH','NLMSubSyn'],[30/18],0,0),ev(-861,'C0079104','PAP Smear','Pap smear',[pap,smear],[diap],[[[3,4],[1,2],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','PDQ','SNOMEDCT_US'],[52/9],0,0)])]).
phrase(--,[punc([inputmatch([-]),tokens([])]),punc([inputmatch([-]),tokens([])])],63/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(unable,[head([lexmatch([unable]),inputmatch([unable]),tag(adj),tokens([unable])])],66/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1299582','Unable','Unable',[unable],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','SNOMEDCT_US'],[66/6],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],73/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1883351','To','To',[to],[qlco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[73/2],0,0)])]).
phrase(get,[verb([lexmatch([get]),inputmatch([get]),tag(verb),tokens([get])])],76/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('this time again,',[det([lexmatch([this]),inputmatch([this]),tag(det),tokens([this])]),head([lexmatch([time]),inputmatch([time]),tag(noun),tokens([time])]),adv([lexmatch([again]),inputmatch([again]),tag(adv),tokens([again])]),punc([inputmatch([',']),tokens([])])],80/16,[]).
candidates(5,3,0,2,[]).
mappings([map(-861,[ev(-861,'C0040223','TIME','Time',[time],[tmco],[[[1,1],[1,1],0]],yes,no,['CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NICHD','SNOMEDCT_US'],[85/4],0,0)])]).
phrase(was,[aux([lexmatch([was]),inputmatch([was]),tag(aux),tokens([was])])],97/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('able to do',[mod([lexmatch([able]),inputmatch([able]),tag(adj),tokens([able])]),head([lexmatch(['to do']),inputmatch([to,do]),tag(noun),tokens([to,do])])],101/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-660,[ev(-660,'C0085732','Able','Ability',[able],[orga],[[[1,1],[1,1],0]],no,no,['CHV','LCH','LCH_NW','MSH','MTH','NCI'],[101/4],0,0)])]).
phrase('it 2070,',[pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])]),shapes([inputmatch(['2070']),features([integer]),tokens(['2070'])]),punc([inputmatch([',']),tokens([])])],112/8,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(will,[modal([lexmatch([will]),inputmatch([will]),tag(modal),tokens([will])])],121/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(send,[verb([lexmatch([send]),inputmatch([send]),tag(verb),tokens([send])])],126/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1519246','Send','Send (transmission)',[send],[ftcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[126/4],0,0)])]).
phrase('back to gyn. mammo -',[head([lexmatch([back]),inputmatch([back]),tag(adj),tokens([back])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),mod([lexmatch([gyn]),inputmatch([gyn]),tag(noun),tokens([gyn])]),punc([inputmatch(['.']),tokens([])]),mod([inputmatch([mammo]),tag(noun),tokens([mammo])]),punc([inputmatch([-]),tokens([])])],131/20,[]).
candidates(6,0,0,6,[]).
mappings([map(-708,[ev(-770,'C1995000','Back, NOS','Back structure, excluding neck',[back],[blor],[[[1,1],[1,1],0]],yes,no,['MTH','SNOMEDCT_US'],[131/4],0,0),ev(-604,'C0205480','GYN','Gynecologic',[gyn],[spco],[[[3,3],[1,1],0]],no,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[139/3],0,0)])]).
phrase('to sched,',[prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),head([inputmatch([sched]),tag(noun),tokens([sched])]),punc([inputmatch([',']),tokens([])])],151/9,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('colonoscopy fine  2071 - repeat 2081.',[mod([lexmatch([colonoscopy]),inputmatch([colonoscopy]),tag(noun),tokens([colonoscopy])]),mod([lexmatch([fine]),inputmatch([fine]),tag(adj),tokens([fine])]),shapes([inputmatch(['2071']),features([integer]),tokens(['2071'])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([repeat]),inputmatch([repeat]),tag(noun),tokens([repeat])]),shapes([inputmatch(['2081']),features([integer]),tokens(['2081'])]),punc([inputmatch(['.']),tokens([])])],162/37,[]).
candidates(7,0,0,7,[]).
mappings([map(-740,[ev(-804,'C1548837','Colonoscopy','Consent Type - Colonoscopy',[colonoscopy],[hlca],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH'],[162/11],0,0),ev(-804,'C0205232','Fine','Fine - adjective',[fine],[qlco],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[174/4],0,0),ev(-804,'C1547730','Repeat','Repeat Pattern',[repeat],[tmco],[[[4,4],[1,1],0]],yes,no,['HL7V2.5','MTH','NCI'],[187/6],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"To increase exercise.  ",200/23,[]).
phrase('To',[adv([lexmatch([to]),inputmatch(['To']),tag(adv),tokens([to])])],200/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1883351','To','To',[to],[qlco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[200/2],0,0)])]).
phrase(increase,[verb([lexmatch([increase]),inputmatch([increase]),tag(verb),tokens([increase])])],203/8,[]).
candidates(8,7,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0442805','Increase','Increase',[increase],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[203/8],0,0)])]).
phrase('exercise.',[head([lexmatch([exercise]),inputmatch([exercise]),tag(noun),tokens([exercise])]),punc([inputmatch(['.']),tokens([])])],212/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0015259','Exercise','Exercise',[exercise],[dora],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNMI','SNOMEDCT_US'],[212/8],0,0)])]).
'EOU'.
utterance('00000000.tx.4',"2. ",223/3,[]).
phrase('2.',[shapes([inputmatch(['2']),features([integer]),tokens(['2'])]),punc([inputmatch(['.']),tokens([])])],223/2,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C2981700','2+','2+ Score, WHO',['2'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[223/1],0,0)])]).
'EOU'.
utterance('00000000.tx.5',"Menopause - calcium, vitamin d discussed - was 11 2074 when not taking any supplements, repleted, then maintenance recommended ,  did take it for awhile then stopped months ago, will restart and will check level in a month.",226/223,[]).
phrase('Menopause - calcium,',[mod([lexmatch([menopause]),inputmatch(['Menopause']),tag(noun),tokens([menopause])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([calcium]),inputmatch([calcium]),tag(noun),tokens([calcium])]),punc([inputmatch([',']),tokens([])])],226/20,[]).
candidates(13,6,0,7,[]).
mappings([map(-888,[ev(-694,'C0567312','Menopause','Menopause present (finding)',[menopause],[fndg],[[[1,1],[1,1],0]],no,no,['MTH','SNOMEDCT_US'],[226/9],0,0),ev(-861,'C0006675','CALCIUM','Calcium',[calcium],[bacs,elii,phsu],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[238/7],0,0)])]).
phrase('vitamin d',[head([lexmatch(['vitamin d']),inputmatch([vitamin,d]),tag(noun),tokens([vitamin,d])])],247/9,[]).
candidates(6,0,0,6,[]).
mappings([map(-1000,[ev(-1000,'C0042866','VITAMIN D','Vitamin D',[vitamin,d],[orch,phsu,vita],[[[1,2],[1,2],0]],yes,no,['AOD','CHV','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHSPL','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[247/9],0,0)])]).
phrase(discussed,[verb([lexmatch([discussed]),inputmatch([discussed]),tag(verb),tokens([discussed])])],257/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-966,[ev(-966,'C2584313','Discuss','Discussion (communication)',[discuss],[socb],[[[1,1],[1,1],1]],yes,no,['ICF','ICF-CY','MTH','NCI'],[257/9],0,0)])]).
phrase(-,[punc([inputmatch([-]),tokens([])])],267/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(was,[aux([lexmatch([was]),inputmatch([was]),tag(aux),tokens([was])])],269/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('11 2074',[shapes([inputmatch(['11']),features([integer]),tokens(['11'])]),shapes([inputmatch(['2074']),features([integer]),tokens(['2074'])])],273/7,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(when,[conj([lexmatch([when]),inputmatch([when]),tag(conj),tokens([when])])],281/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(not,[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])])],286/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[286/3],0,0)])]).
phrase(taking,[verb([lexmatch([taking]),inputmatch([taking]),tag(verb),tokens([taking])])],290/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-966,[ev(-966,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],1]],yes,no,['NCI','SNOMEDCT_US'],[290/6],0,0)])]).
phrase('any supplements,',[det([lexmatch([any]),inputmatch([any]),tag(det),tokens([any])]),head([lexmatch([supplements]),inputmatch([supplements]),tag(noun),tokens([supplements])]),punc([inputmatch([',']),tokens([])])],297/16,[]).
candidates(3,0,0,3,[]).
mappings([map(-966,[ev(-966,'C2348609','Supplement','Supplement',[supplement],[ftcn],[[[1,1],[1,1],1]],yes,no,['LNC','MTH','NCI'],[301/11],0,0)])]).
phrase('repleted,',[head([lexmatch([repleted]),inputmatch([repleted]),tag(adj),tokens([repleted])]),punc([inputmatch([',']),tokens([])])],314/9,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('then maintenance',[adv([lexmatch([then]),inputmatch([then]),tag(adv),tokens([then])]),head([lexmatch([maintenance]),inputmatch([maintenance]),tag(noun),tokens([maintenance])])],324/16,[]).
candidates(2,0,0,2,[]).
mappings([map(-888,[ev(-694,'C1883708','Then','Then',[then],[tmco],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[324/4],0,0),ev(-861,'C0024501','Maintenance','Maintenance',[maintenance],[acty],[[[2,2],[1,1],0]],yes,no,['CHV','LCH','LCH_NW','MSH','MTH','NCI'],[329/11],0,0)])]).
phrase(recommended,[verb([lexmatch([recommended]),inputmatch([recommended]),tag(verb),tokens([recommended])])],341/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0034866','Recommended','Recommendation',[recommended],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','NCI'],[341/11],0,0)])]).
phrase(',',[punc([inputmatch([',']),tokens([])])],353/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(did,[aux([lexmatch([did]),inputmatch([did]),tag(aux),tokens([did])])],356/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(take,[verb([lexmatch([take]),inputmatch([take]),tag(verb),tokens([take])])],360/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],0]],yes,no,['NCI','SNOMEDCT_US'],[360/4],0,0)])]).
phrase('it for awhile then stopped months ago,',[pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),adv([lexmatch([awhile]),inputmatch([awhile]),tag(adv),tokens([awhile])]),adv([lexmatch([then]),inputmatch([then]),tag(adv),tokens([then])]),mod([lexmatch([stopped]),inputmatch([stopped]),tag(adj),tokens([stopped])]),mod([lexmatch([months]),inputmatch([months]),tag(noun),tokens([months])]),adv([lexmatch([ago]),inputmatch([ago]),tag(adv),tokens([ago])]),punc([inputmatch([',']),tokens([])])],365/38,[]).
candidates(7,4,0,3,[]).
mappings([map(-665,[ev(-748,'C1883708','Then','Then',[then],[tmco],[[[4,4],[1,1],0]],yes,no,['MTH','NCI'],[379/4],0,0),ev(-748,'C1272691',stopped,'To be stopped',[stopped],[qlco],[[[5,5],[1,1],0]],yes,no,['CHV','SNOMEDCT_US'],[384/7],0,0),ev(-748,'C0439231','MONTHS',month,[months],[tmco],[[[6,6],[1,1],0]],yes,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[392/6],0,0)])]).
phrase(will,[modal([lexmatch([will]),inputmatch([will]),tag(modal),tokens([will])])],404/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(restart,[verb([lexmatch([restart]),inputmatch([restart]),tag(verb),tokens([restart])])],409/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1514902','Restart','Restart',[restart],[qlco],[[[1,1],[1,1],0]],yes,no,['NCI'],[409/7],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],417/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(will,[modal([lexmatch([will]),inputmatch([will]),tag(modal),tokens([will])])],421/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(check,[verb([lexmatch([check]),inputmatch([check]),tag(verb),tokens([check])])],426/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1283174','Check','Checking (action)',[check],[acty],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI','SNOMEDCT_US'],[426/5],0,0)])]).
phrase('level in a month.',[head([lexmatch([level]),inputmatch([level]),tag(noun),tokens([level])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),det([lexmatch([a]),inputmatch([a]),tag(det),tokens([a])]),mod([lexmatch([month]),inputmatch([month]),tag(noun),tokens([month])]),punc([inputmatch(['.']),tokens([])])],432/17,[]).
candidates(7,0,0,7,[]).
mappings([map(-708,[ev(-770,'C0441889','Level','Levels (qualifier value)',[level],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNOMEDCT_US'],[432/5],0,0),ev(-604,'C0332177','/month','Monthly (qualifier value)',[month],[tmco],[[[4,4],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[443/5],0,0)])]).
'EOU'.
utterance('00000000.tx.6',"Consider BD when not overwhelmed with everything else 3. ",449/57,[]).
phrase('Consider',[verb([lexmatch([consider]),inputmatch(['Consider']),tag(verb),tokens([consider])])],449/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0750591',consider,consider,[consider],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV'],[449/8],0,0)])]).
phrase('BD',[head([lexmatch([bd]),inputmatch(['BD']),tag(noun),tokens([bd])])],458/2,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0005126','BD','Bermuda',[bd],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[458/2],0,0)])]).
phrase(when,[conj([lexmatch([when]),inputmatch([when]),tag(conj),tokens([when])])],461/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(not,[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])])],466/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[466/3],0,0)])]).
phrase('overwhelmed with everything else 3.',[verb([lexmatch([overwhelmed]),inputmatch([overwhelmed]),tag(verb),tokens([overwhelmed])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),pron([lexmatch([everything]),inputmatch([everything]),tag(pron),tokens([everything])]),adv([lexmatch([else]),inputmatch([else]),tag(adv),tokens([else])]),shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),punc([inputmatch(['.']),tokens([])])],470/35,[]).
candidates(1,0,0,1,[]).
mappings([map(-760,[ev(-760,'C3842296','Else','Else',[else],[fndg],[[[4,4],[1,1],0]],yes,no,['LNC'],[498/4],0,1)])]).
'EOU'.
utterance('00000000.tx.7',"Sleep, stress - seems to be doing generally better now.  ",506/57,[]).
phrase('Sleep,',[head([lexmatch([sleep]),inputmatch(['Sleep']),tag(noun),tokens([sleep])]),punc([inputmatch([',']),tokens([])])],506/6,[]).
candidates(3,2,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0037313','Sleep','Sleep',[sleep],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NICHD','SNM','SNMI','SNOMEDCT_US'],[506/5],0,0)])]).
phrase('stress -',[head([lexmatch([stress]),inputmatch([stress]),tag(noun),tokens([stress])]),punc([inputmatch([-]),tokens([])])],513/8,[]).
candidates(2,1,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0038435','Stress','Stress',[stress],[fndg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','LNC','MEDLINEPLUS','MTH','NCI','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US'],[513/6],0,0)])]).
phrase(seems,[verb([lexmatch([seems]),inputmatch([seems]),tag(verb),tokens([seems])])],522/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],528/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1883351','To','To',[to],[qlco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[528/2],0,0)])]).
phrase(be,[aux([lexmatch([be]),inputmatch([be]),tag(aux),tokens([be])])],531/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(doing,[aux([lexmatch([doing]),inputmatch([doing]),tag(aux),tokens([doing])])],534/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('generally better now.',[adv([lexmatch([generally]),inputmatch([generally]),tag(adv),tokens([generally])]),mod([lexmatch([better]),inputmatch([better]),tag(adj),tokens([better])]),adv([lexmatch([now]),inputmatch([now]),tag(adv),tokens([now])]),punc([inputmatch(['.']),tokens([])])],540/21,[]).
candidates(2,0,0,2,[]).
mappings([map(-790,[ev(-827,'C0332272','Better','Better',[better],[qlco],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_FDA','SNMI','SNOMEDCT_US'],[550/6],0,0),ev(-827,'C1948052','Now','Now (temporal qualifier)',[now],[tmco],[[[3,3],[1,1],0]],yes,no,['MTH','NCI'],[557/3],0,0)])]).
'EOU'.
utterance('00000000.tx.8',"4 sugar -mildly elevated , recheck A1c 5 Lower lumbar pain- indicates discomfort in left lower lumbar area when getting out of a chair only for the last week. ",563/159,[]).
phrase('4 sugar -',[shapes([inputmatch(['4']),features([integer]),tokens(['4'])]),head([lexmatch([sugar]),inputmatch([sugar]),tag(noun),tokens([sugar])]),punc([inputmatch([-]),tokens([])])],563/9,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-694,'C3838679','4+','4+ Answer to question',['4'],[fndg],[[[1,1],[1,1],0]],no,no,['LNC','MTH'],[563/1],0,0),ev(-861,'C0007004','Sugar','Carbohydrates',[sugar],[orch],[[[2,2],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','FMA','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US','VANDF'],[565/5],0,0)])]).
phrase(mildly,[adv([lexmatch([mildly]),inputmatch([mildly]),tag(adv),tokens([mildly])])],572/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0750532','MILDLY','MILDLY',[mildly],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[572/6],0,0)])]).
phrase(elevated,[verb([lexmatch([elevated]),inputmatch([elevated]),tag(verb),tokens([elevated])])],579/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0205250','Elevated','High',[elevated],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[579/8],0,0)])]).
phrase(',',[punc([inputmatch([',']),tokens([])])],588/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('recheck A1c 5',[mod([lexmatch([recheck]),inputmatch([recheck]),tag(noun),tokens([recheck])]),mod([inputmatch(['A1c']),tag(noun),tokens([a1c])]),shapes([inputmatch(['5']),features([integer]),tokens(['5'])])],590/13,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Lower',[verb([lexmatch([lower]),inputmatch(['Lower']),tag(verb),tokens([lower])])],604/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0441994','LOWER','Lower - spatial qualifier',[lower],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[604/5],0,0)])]).
phrase('lumbar pain-',[mod([lexmatch([lumbar]),inputmatch([lumbar]),tag(adj),tokens([lumbar])]),head([lexmatch([pain]),inputmatch([pain]),tag(noun),tokens([pain])]),punc([inputmatch([-]),tokens([])])],610/12,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C0024031','Lumbar pain','Low Back Pain',[lumbar,pain],[sosy],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['AOD','AOT','CCS','CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[610/11],0,0)])]).
phrase(indicates,[verb([lexmatch([indicates]),inputmatch([indicates]),tag(verb),tokens([indicates])])],623/9,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('discomfort in left lower lumbar area',[head([lexmatch([discomfort]),inputmatch([discomfort]),tag(noun),tokens([discomfort])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([left]),inputmatch([left]),tag(noun),tokens([left])]),mod([lexmatch([lower]),inputmatch([lower]),tag(adj),tokens([lower])]),mod([lexmatch([lumbar]),inputmatch([lumbar]),tag(adj),tokens([lumbar])]),mod([lexmatch([area]),inputmatch([area]),tag(noun),tokens([area])])],633/36,[]).
candidates(13,0,0,13,[]).
mappings([map(-753,[ev(-753,'C0234215','Discomfort','Sensory Discomfort',[discomfort],[sosy],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_FDA','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[633/10],0,0),ev(-617,'C1297910','Left Lumbar','Left lumbar region',[left,lumbar],[blor],[[[3,3],[1,1],0],[[5,5],[2,2],0]],no,no,['NCI','NLMSubSyn','SNOMEDCT_US'],[647/4,658/6],0,0),ev(-586,'C0441994','LOWER','Lower - spatial qualifier',[lower],[spco],[[[4,4],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[652/5],0,0),ev(-586,'C0205146','AREA','Area',[area],[spco],[[[6,6],[1,1],0]],no,no,['CHV','HL7V2.5','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[665/4],0,0)]),map(-753,[ev(-753,'C0234215','Discomfort','Sensory Discomfort',[discomfort],[sosy],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_FDA','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[633/10],0,0),ev(-617,'C3841489','Lumbar-left','Lumbar-left',[lumbar,left],[fndg],[[[5,5],[1,1],0],[[3,3],[2,2],0]],no,no,['LNC'],[647/4,658/6],0,0),ev(-586,'C0441994','LOWER','Lower - spatial qualifier',[lower],[spco],[[[4,4],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[652/5],0,0),ev(-586,'C0205146','AREA','Area',[area],[spco],[[[6,6],[1,1],0]],no,no,['CHV','HL7V2.5','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[665/4],0,0)])]).
phrase(when,[conj([lexmatch([when]),inputmatch([when]),tag(conj),tokens([when])])],670/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('getting out of a chair only',[verb([lexmatch([getting]),inputmatch([getting]),tag(verb),tokens([getting])]),prep([lexmatch(['out of']),inputmatch([out,of]),tag(prep),tokens([out,of])]),det([lexmatch([a]),inputmatch([a]),tag(det),tokens([a])]),mod([lexmatch([chair]),inputmatch([chair]),tag(noun),tokens([chair])]),adv([lexmatch([only]),inputmatch([only]),tag(adv),tokens([only])])],675/27,[]).
candidates(6,0,0,6,[]).
mappings([map(-672,[ev(-753,'C0439787','Out','Out (direction)',[out],[spco],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','SNOMEDCT_US'],[683/3],0,0),ev(-753,'C1524106','Chair','Chairperson',[chair],[prog],[[[5,5],[1,1],0]],yes,no,['MTH','NCI'],[692/5],0,0),ev(-753,'C0205171','Only','Singular',[only],[qnco],[[[6,6],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[698/4],0,0)])]).
phrase('for the last week.',[prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch([last]),inputmatch([last]),tag(adj),tokens([last])]),head([lexmatch([week]),inputmatch([week]),tag(noun),tokens([week])]),punc([inputmatch(['.']),tokens([])])],703/18,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C1517741','Last','Last',[last],[qlco],[[[1,1],[1,1],0]],no,no,['NCI'],[711/4],0,0),ev(-861,'C0332174','/week','Weekly',[week],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[716/4],0,0)])]).
'EOU'.
utterance('00000000.tx.9',"Seems consistent with a muscular strain, hip seems ok.  ",722/56,[]).
phrase('Seems',[verb([lexmatch([seems]),inputmatch(['Seems']),tag(verb),tokens([seems])])],722/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('consistent with a muscular strain,',[head([lexmatch([consistent]),inputmatch([consistent]),tag(adj),tokens([consistent])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),det([lexmatch([a]),inputmatch([a]),tag(det),tokens([a])]),mod([lexmatch([muscular]),inputmatch([muscular]),tag(adj),tokens([muscular])]),mod([lexmatch([strain]),inputmatch([strain]),tag(noun),tokens([strain])]),punc([inputmatch([',']),tokens([])])],728/34,[]).
candidates(12,3,0,9,[]).
mappings([map(-762,[ev(-806,'C0332290','Consistent with','Consistent with',[consistent,with],[idcn],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[728/15],0,0),ev(-604,'C0080194','Muscle Strain','Muscle strain',[muscle,strain],[inpo],[[[4,4],[1,1],3],[[5,5],[2,2],0]],no,no,['CHV','COSTAR','MEDLINEPLUS','MSH','MTH','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[746/15],0,0)])]).
phrase(hip,[head([lexmatch([hip]),inputmatch([hip]),tag(noun),tokens([hip])])],763/3,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0019552','HIP','Hip structure',[hip],[bpoc],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','LNC','MSH','MTH','NCI','NCI_CDISC','SNM','SNMI','SNOMEDCT_US','UWDA'],[763/3],0,0)])]).
phrase(seems,[verb([lexmatch([seems]),inputmatch([seems]),tag(verb),tokens([seems])])],767/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('ok.',[head([lexmatch([ok]),inputmatch([ok]),tag(noun),tokens([ok])]),punc([inputmatch(['.']),tokens([])])],773/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.10',"RTC if symptoms worsen,change or persist for further evaluation.",778/64,[]).
phrase('RTC',[head([lexmatch([rtc]),inputmatch(['RTC']),tag(noun),tokens([rtc])])],778/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(if,[conj([lexmatch([if]),inputmatch([if]),tag(conj),tokens([if])])],782/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(symptoms,[head([lexmatch([symptoms]),inputmatch([symptoms]),tag(noun),tokens([symptoms])])],785/8,[]).
candidates(4,2,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1457887','SYMPTOMS','Symptoms',[symptoms],[sosy],[[[1,1],[1,1],0]],yes,no,['AOD','CST','ICD9CM','LCH_NW','LNC','MEDLINEPLUS','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[785/8],0,0)])]).
phrase(worsen,[verb([lexmatch([worsen]),inputmatch([worsen]),tag(verb),tokens([worsen])])],794/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1457868',worsen,'Worse',[worsen],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_FDA','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[794/6],0,0)])]).
phrase(',',[punc([inputmatch([',']),tokens([])])],800/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(change,[head([lexmatch([change]),inputmatch([change]),tag(noun),tokens([change])])],801/6,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0392747','Change','Changing',[change],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[801/6],0,0)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],808/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('persist for further evaluation.',[verb([lexmatch([persist]),inputmatch([persist]),tag(verb),tokens([persist])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([further]),inputmatch([further]),tag(adj),tokens([further])]),mod([lexmatch([evaluation]),inputmatch([evaluation]),tag(noun),tokens([evaluation])]),punc([inputmatch(['.']),tokens([])])],811/31,[]).
candidates(4,1,0,3,[]).
mappings([map(-722,[ev(-770,'C1517331','Further','Further',[further],[spco],[[[3,3],[1,1],0]],yes,no,['NCI'],[823/7],0,0),ev(-770,'C0220825','Evaluation','Evaluation',[evaluation],[hlca],[[[4,4],[1,1],0]],yes,no,['AOD','CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NICHD','NLMSubSyn'],[831/10],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Rest of issues - see above. ",0/28,[]).
phrase('Rest of issues -',[head([lexmatch([rest]),inputmatch(['Rest']),tag(noun),tokens([rest])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([issues]),inputmatch([issues]),tag(noun),tokens([issues])]),punc([inputmatch([-]),tokens([])])],0/16,[]).
candidates(4,0,0,4,[]).
mappings([map(-730,[ev(-790,'C0035253','Rest','Rest',[rest],[dora],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[0/4],0,0),ev(-590,'C0033213','Issue','Problem',[issue],[fndg],[[[3,3],[1,1],1]],no,no,['CHV','LNC','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[8/6],0,0)])]).
phrase(see,[verb([lexmatch([see]),inputmatch([see]),tag(verb),tokens([see])])],17/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[17/3],0,0)])]).
phrase('above.',[head([lexmatch([above]),inputmatch([above]),tag(adj),tokens([above])]),punc([inputmatch(['.']),tokens([])])],21/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1282910','Above','Upper',[above],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','FMA','HL7V2.5','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US','UWDA'],[21/5],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Meds refilled.",28/14,[]).
phrase('Meds',[head([lexmatch([meds]),inputmatch(['Meds']),tag(noun),tokens([meds])])],28/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3280240','MEDS','MICROCEPHALY, EPILEPSY, AND DIABETES SYNDROME',[meds],[dsyn],[[[1,1],[1,1],0]],yes,no,['OMIM'],[28/4],0,0)])]).
phrase('refilled.',[verb([lexmatch([refilled]),inputmatch([refilled]),tag(verb),tokens([refilled])]),punc([inputmatch(['.']),tokens([])])],33/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0807726',refilled,refill,[refilled],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC'],[33/8],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Will have fasting labs at Moton Hospital in 1 month, sched appt with Dr Dolan and gyn.",0/86,[]).
phrase('Will',[modal([lexmatch([will]),inputmatch(['Will']),tag(modal),tokens([will])])],0/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(have,[aux([lexmatch([have]),inputmatch([have]),tag(aux),tokens([have])])],5/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('fasting labs at Moton Hospital',[mod([lexmatch([fasting]),inputmatch([fasting]),tag(adj),tokens([fasting])]),head([lexmatch([labs]),inputmatch([labs]),tag(noun),tokens([labs])]),prep([lexmatch([at]),inputmatch([at]),tag(prep),tokens([at])]),mod([inputmatch(['Moton']),tag(noun),tokens([moton])]),mod([lexmatch([hospital]),inputmatch(['Hospital']),tag(noun),tokens([hospital])])],10/30,[]).
candidates(10,4,0,6,[]).
mappings([map(-716,[ev(-593,'C0015663','FASTING','Fasting',[fasting],[fndg],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','DXP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[10/7],0,0),ev(-760,'C0587081','Labs','Laboratory test finding',[labs],[fndg],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_FDA','NCI_NICHD','NLMSubSyn','SNOMEDCT_US'],[18/4],0,0),ev(-560,'C3316281',mota,'Calophysus macropterus',[mota],[fish],[[[4,4],[1,1],1]],no,no,['MTH','NCBI'],[26/5],0,0),ev(-593,'C1510665','Hospital','Hospital environment',[hospital],[qlco],[[[5,5],[1,1],0]],no,no,['MTH','NLMSubSyn','SNOMEDCT_US'],[32/8],0,0)])]).
phrase('in 1 month,',[prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([month]),inputmatch([month]),tag(noun),tokens([month])]),punc([inputmatch([',']),tokens([])])],41/11,[]).
candidates(7,0,0,7,[]).
mappings([map(-1000,[ev(-1000,'C1442451','1 Month','1 Month',['1',month],[tmco],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['LNC','MTH','NLMSubSyn'],[44/7],0,0)])]).
phrase('sched appt with Dr Dolan',[mod([inputmatch([sched]),tag(noun),tokens([sched])]),head([lexmatch([appt]),inputmatch([appt]),tag(noun),tokens([appt])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),mod([inputmatch(['Dolan']),tag(noun),tokens([dolan])])],53/24,[]).
candidates(7,0,0,7,[]).
mappings([map(-686,[ev(-760,'C0245203','APPT','4-azido-7-phenylpyrazolo-(1,5a)-1,3,5-triazine',[appt],[bacs,orch],[[[2,2],[1,1],0]],yes,no,['MSH','MTH'],[59/4],0,0),ev(-593,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[4,4],[1,1],0]],no,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[69/2],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],78/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('gyn.',[head([lexmatch([gyn]),inputmatch([gyn]),tag(noun),tokens([gyn])]),punc([inputmatch(['.']),tokens([])])],82/4,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0018417','GYN','Gynecology',[gyn],[bmod],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[82/3],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"follow-up 6 months",0/18,[]).
phrase('follow-up 6 months',[mod([lexmatch(['follow-up']),inputmatch([follow,-,up]),tag(adj),tokens([follow,up])]),shapes([inputmatch(['6']),features([integer]),tokens(['6'])]),head([lexmatch([months]),inputmatch([months]),tag(noun),tokens([months])])],0/18,[]).
candidates(10,2,0,8,[]).
mappings([map(-1000,[ev(-1000,'C0589124','Follow-up 6 months','Follow-up 6 months',[follow,up,'6',months],[fndg],[[[1,1],[1,1],0],[[2,2],[2,2],0],[[3,3],[3,3],0],[[4,4],[4,4],0]],yes,no,['SNOMEDCT_US'],[0/18],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Beverly Thiel",0/13,[]).
phrase('Beverly Thiel',[mod([lexmatch([beverly]),inputmatch(['Beverly']),tag(noun),tokens([beverly])]),head([inputmatch(['Thiel']),tag(noun),tokens([thiel])])],0/13,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-05.xml outputs/220-05-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-05.xml',outfile-'outputs/220-05-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"]]></TEXT>   <TAGS></TAGS> </root>",0/34,[]).
phrase(']',[punc([inputmatch([']']),tokens([])])],0/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(']',[punc([inputmatch([']']),tokens([])])],1/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(>,[punc([inputmatch([>]),tokens([])])],2/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</TEXT',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([text]),inputmatch(['TEXT']),tag(noun),tokens([text])])],3/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1705606','Text','Text Line',[text],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[5/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],9/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<TAGS',[punc([inputmatch([<]),tokens([])]),head([lexmatch([tags]),inputmatch(['TAGS']),tag(noun),tokens([tags])])],13/5,[]).
candidates(4,3,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1139855',tags,'Tags (device)',[tags],[medd],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[14/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],18/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</TAGS',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([tags]),inputmatch(['TAGS']),tag(noun),tokens([tags])])],19/6,[]).
candidates(4,3,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1139855',tags,'Tags (device)',[tags],[medd],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[21/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],25/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</root',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([root]),inputmatch([root]),tag(noun),tokens([root])])],27/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1318154','Root','Root body part',[root],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH'],[29/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],33/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
