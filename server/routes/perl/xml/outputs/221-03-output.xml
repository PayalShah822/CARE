args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"<?xml version=""1.0"" encoding=""UTF-8""?> <root>   <TEXT><![CDATA[",0/63,[]).
phrase('<?xml version',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([?]),tokens([])]),mod([lexmatch([xml]),inputmatch([xml]),tag(noun),tokens([xml])]),head([lexmatch([version]),inputmatch([version]),tag(noun),tokens([version])])],0/13,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C1707981','XML','Extensible Markup Language',[xml],[inpr],[[[1,1],[1,1],0]],no,no,['HL7V3.0','NCI'],[2/3],0,0),ev(-861,'C0333052','Version','Version',[version],[ftcn],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','MTHICD9','NCI','NCI_CDISC'],[6/7],0,0)])]).
phrase('="1.0"',[punc([inputmatch([=]),tokens([])]),punc([inputmatch(['"']),tokens([])]),shapes([inputmatch(['1','.','0']),features([real_number]),tokens(['1','0'])]),punc([inputmatch(['"']),tokens([])])],13/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-861,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[15/1],0,0),ev(-861,'C3842591','0%','0%',['0'],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC'],[17/1],0,0)])]).
phrase(encoding,[verb([lexmatch([encoding]),inputmatch([encoding]),tag(verb),tokens([encoding])])],20/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1547699','Encoding','MIME encoding',[encoding],[idcn],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH'],[20/8],0,0)])]).
phrase('="UTF-8"?',[punc([inputmatch([=]),tokens([])]),punc([inputmatch(['"']),tokens([])]),mod([lexmatch([utf]),inputmatch(['UTF']),tag(noun),tokens([utf])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['8']),features([integer]),tokens(['8'])]),punc([inputmatch(['"']),tokens([])]),punc([inputmatch([?]),tokens([])])],28/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1555005','UTF-8','UTF-8',[utf,'8'],[inpr],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['HL7V3.0'],[30/5],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],37/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<root',[punc([inputmatch([<]),tokens([])]),head([lexmatch([root]),inputmatch([root]),tag(noun),tokens([root])])],39/5,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1318154','Root','Root body part',[root],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH'],[40/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],44/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<TEXT',[punc([inputmatch([<]),tokens([])]),head([lexmatch([text]),inputmatch(['TEXT']),tag(noun),tokens([text])])],48/5,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1705606','Text','Text Line',[text],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[49/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],53/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<!',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([!]),tokens([])])],54/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('[CDATA',[punc([inputmatch(['[']),tokens([])]),head([inputmatch(['CDATA']),tag(noun),tokens([cdata])])],56/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0640049','CDATA','3-chloro-4-dimethylaminothioangelicin',[cdata],[orch],[[[1,1],[1,1],0]],yes,no,['MSH'],[57/5],0,0)])]).
phrase('[',[punc([inputmatch(['[']),tokens([])])],62/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Record date: 2091-11-15",0/23,[]).
phrase('Record date',[mod([lexmatch([record]),inputmatch(['Record']),tag(noun),tokens([record])]),head([lexmatch([date]),inputmatch([date]),tag(noun),tokens([date])])],0/11,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-694,'C0034869','Record','Records',[record],[inpr],[[[1,1],[1,1],0]],no,no,['CHV','HL7V3.0','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA'],[0/6],0,0),ev(-861,'C0011008','DATE','Date in time',[date],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MSH','MTH','NCI','NCI_CareLex','NCI_NICHD','SNOMEDCT_US'],[7/4],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],11/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('2091-11-15',[shapes([inputmatch(['2091']),features([integer]),tokens(['2091'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['11']),features([integer]),tokens(['11'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['15']),features([integer]),tokens(['15'])])],13/10,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"CARDIOLOGY",0/10,[]).
phrase('CARDIOLOGY',[head([lexmatch([cardiology]),inputmatch(['CARDIOLOGY']),tag(noun),tokens([cardiology])])],0/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0007189','Cardiology','Cardiology discipline',[cardiology],[bmod],[[[1,1],[1,1],0]],yes,no,['CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[0/10],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"KELLIHER CARE CENTER",0/20,[]).
phrase('KELLIHER CARE CENTER',[mod([inputmatch(['KELLIHER']),tag(noun),tokens([kelliher])]),mod([lexmatch([care]),inputmatch(['CARE']),tag(noun),tokens([care])]),head([lexmatch([center]),inputmatch(['CENTER']),tag(noun),tokens([center])])],0/20,[]).
candidates(4,1,0,3,[]).
mappings([map(-790,[ev(-660,'C1947933','Care','care activity',[care],[acty],[[[2,2],[1,1],0]],no,no,['MTH','NCI'],[9/4],0,0),ev(-827,'C0205099','Center','Central',[center],[spco],[[[3,3],[1,1],0]],yes,no,['CHV','FMA','LNC','MTH','NCI','NCI_CDISC','NLMSubSyn','SNMI','SNOMEDCT_US','UWDA'],[14/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Reason for visit:",0/17,[]).
phrase('Reason for visit',[head([lexmatch([reason]),inputmatch(['Reason']),tag(noun),tokens([reason])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([visit]),inputmatch([visit]),tag(noun),tokens([visit])])],0/16,[]).
candidates(5,0,0,5,[]).
mappings([map(-1000,[ev(-1000,'C1704447','Reason for visit','Reason for patient visit',[reason,for,visit],[fndg],[[[1,1],[1,1],0],[[2,2],[2,2],0],[[3,3],[3,3],0]],yes,no,['LNC','MTH','NLMSubSyn'],[0/16],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],16/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"F/u of coronary disease and hypertension.",3/41,[]).
phrase('F/u of coronary disease',[mod([lexmatch([f]),inputmatch(['F',/]),tag(noun),tokens([f])]),head([lexmatch([u]),inputmatch([u]),tag(noun),tokens([u])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch(['coronary disease']),inputmatch([coronary,disease]),tag(noun),tokens([coronary,disease])])],3/23,[]).
candidates(8,3,0,5,[]).
mappings([map(-579,[ev(-593,'C0016327','F-','Fluorides',[f],[inch,phsu],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CRCH','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[3/1],0,0),ev(-640,'C1956346','Coronary Disease','Coronary Artery Disease',[coronary,disease],[dsyn],[[[4,5],[1,2],0]],no,no,['AOD','COSTAR','CSP','CST','DXP','HPO','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','OMIM','SNMI','SNOMEDCT_US'],[10/16],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],27/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('hypertension.',[head([lexmatch([hypertension]),inputmatch([hypertension]),tag(noun),tokens([hypertension])]),punc([inputmatch(['.']),tokens([])])],31/13,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0020538','HYPERTENSION','Hypertensive disease',[hypertension],[dsyn],[[[1,1],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[31/12],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Interval History:",0/17,[]).
phrase('Interval History',[mod([lexmatch([interval]),inputmatch(['Interval']),tag(noun),tokens([interval])]),head([lexmatch([history]),inputmatch(['History']),tag(noun),tokens([history])])],0/16,[]).
candidates(11,2,0,9,[]).
mappings([map(-888,[ev(-694,'C1552713','Interval','Data Type Interval',[interval],[inpr],[[[1,1],[1,1],0]],no,no,['HL7V3.0','MTH','NCI','NCI_BRIDG'],[0/8],0,0),ev(-861,'C2004062','History','History of previous events',[history],[fndg],[[[2,2],[1,1],0]],yes,no,['CHV','LCH','MTH','NCI'],[9/7],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],16/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([negation(nega,not,[147/3],['C0008031':'CHEST PAIN'],[155/10]),negation(nega,not,[246/3],['C0013604':'EDEMA'],[261/5]),negation(nega,not,[246/3],['C0085619':'ORTHOPNEA'],[270/9])]).
utterance('00000000.tx.1',"Ted continues to feel well. ",3/28,[]).
phrase('Ted',[head([lexmatch([ted]),inputmatch(['Ted']),tag(noun),tokens([ted])])],3/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1539997','TED','FAM155B gene',[ted],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH'],[3/3],0,0)])]).
phrase(continues,[verb([lexmatch([continues]),inputmatch([continues]),tag(verb),tokens([continues])])],7/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0549178','Continue','Continuous',[continue],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_FDA','SNMI','SNOMEDCT_US'],[7/9],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],17/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0040363','TO','Togo',[to],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LCH','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[17/2],0,0)])]).
phrase(feel,[verb([lexmatch([feel]),inputmatch([feel]),tag(verb),tokens([feel])])],20/4,[]).
candidates(2,1,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0013987',feel,'Emotions',[feel],[menp],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','ICF','ICF-CY','LCH','LCH_NW','MSH','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[20/4],0,0)])]).
phrase('well.',[adv([lexmatch([well]),inputmatch([well]),tag(adv),tokens([well])]),punc([inputmatch(['.']),tokens([])])],25/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0205170','Well','Good',[well],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_FDA','SNMI','SNOMEDCT_US'],[25/4],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"He has not taken nitroglycerine for 6 months. ",31/46,[]).
phrase('He',[pron([lexmatch([he]),inputmatch(['He']),tag(pron),tokens([he])])],31/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(has,[aux([lexmatch([has]),inputmatch([has]),tag(aux),tokens([has])])],34/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(not,[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])])],38/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[38/3],0,0)])]).
phrase(taken,[verb([lexmatch([taken]),inputmatch([taken]),tag(verb),tokens([taken])])],42/5,[]).
candidates(2,1,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1883727','Taken','Taken',[taken],[cnce],[[[1,1],[1,1],0]],yes,no,['NCI'],[42/5],0,0)])]).
phrase('nitroglycerine for 6 months.',[head([lexmatch([nitroglycerine]),inputmatch([nitroglycerine]),tag(noun),tokens([nitroglycerine])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),shapes([inputmatch(['6']),features([integer]),tokens(['6'])]),mod([lexmatch([months]),inputmatch([months]),tag(noun),tokens([months])]),punc([inputmatch(['.']),tokens([])])],48/28,[]).
candidates(9,6,0,3,[]).
mappings([map(-708,[ev(-770,'C0017887','NITROGLYCERIN','Nitroglycerin',[nitroglycerin],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[48/14],0,0),ev(-604,'C0439231','MONTHS',month,[months],[tmco],[[[4,4],[1,1],0]],no,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[69/6],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"He exercises for 25 minutes 3 days per week on the treadmill and does not get chest pain. ",77/90,[]).
phrase('He',[pron([lexmatch([he]),inputmatch(['He']),tag(pron),tokens([he])])],77/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('exercises for 25 minutes 3 days',[verb([lexmatch([exercises]),inputmatch([exercises]),tag(verb),tokens([exercises])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),shapes([inputmatch(['25']),features([integer]),tokens(['25'])]),mod([lexmatch([minutes]),inputmatch([minutes]),tag(noun),tokens([minutes])]),shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),mod([lexmatch([days]),inputmatch([days]),tag(noun),tokens([days])])],80/31,[]).
candidates(13,2,0,11,[]).
mappings([map(-716,[ev(-753,'C1522704','Exercise','Exercise Pain Management',[exercise],[topp],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[80/9],0,0),ev(-753,'C0702093','/minute','Per Minute',[minute],[tmco],[[[4,4],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_CDISC','NCI_UCUM','SNOMEDCT_US'],[97/7],0,0),ev(-767,'C3842675','Day 3','Day 3',[day,'3'],[fndg],[[[6,6],[1,1],1],[[5,5],[2,2],0]],yes,no,['LNC'],[105/6],0,0)])]).
phrase('per week on the treadmill',[prep([lexmatch([per]),inputmatch([per]),tag(prep),tokens([per])]),head([lexmatch([week]),inputmatch([week]),tag(noun),tokens([week])]),prep([lexmatch([on]),inputmatch([on]),tag(prep),tokens([on])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch([treadmill]),inputmatch([treadmill]),tag(noun),tokens([treadmill])])],112/25,[]).
candidates(6,0,0,6,[]).
mappings([map(-745,[ev(-806,'C0332174','Per Week','Weekly',[per,week],[tmco],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[112/8],0,0),ev(-593,'C2712999','Treadmill','Treadmill (physical activity)',[treadmill],[dora],[[[5,5],[1,1],0]],no,no,['MTH','MTHICD9'],[128/9],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],138/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(does,[aux([lexmatch([does]),inputmatch([does]),tag(aux),tokens([does])])],142/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(not,[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])])],147/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[147/3],0,0)])]).
phrase(get,[verb([lexmatch([get]),inputmatch([get]),tag(verb),tokens([get])])],151/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('chest pain.',[head([lexmatch(['chest pain']),inputmatch([chest,pain]),tag(noun),tokens([chest,pain])]),punc([inputmatch(['.']),tokens([])])],155/11,[]).
candidates(13,7,0,6,[]).
mappings([map(-1000,[ev(-1000,'C0008031','CHEST PAIN','Chest Pain',[chest,pain],[sosy],[[[1,2],[1,2],0]],yes,no,['CCS','CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','ICF','ICF-CY','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[155/10],0,1)])]).
'EOU'.
utterance('00000000.tx.4',"He does continue to gain weight because of dietary caloric indiscretion. ",167/73,[]).
phrase('He',[pron([lexmatch([he]),inputmatch(['He']),tag(pron),tokens([he])])],167/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(does,[aux([lexmatch([does]),inputmatch([does]),tag(aux),tokens([does])])],170/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(continue,[verb([lexmatch([continue]),inputmatch([continue]),tag(verb),tokens([continue])])],175/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0549178','Continue','Continuous',[continue],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_FDA','SNMI','SNOMEDCT_US'],[175/8],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],184/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0040363','TO','Togo',[to],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LCH','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[184/2],0,0)])]).
phrase(gain,[verb([lexmatch([gain]),inputmatch([gain]),tag(verb),tokens([gain])])],187/4,[]).
candidates(8,7,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1517378','Gain','Gain',[gain],[qnco],[[[1,1],[1,1],0]],yes,no,['LNC','NCI'],[187/4],0,0)])]).
phrase('weight because of dietary caloric indiscretion.',[head([lexmatch([weight]),inputmatch([weight]),tag(noun),tokens([weight])]),prep([lexmatch(['because of']),inputmatch([because,of]),tag(prep),tokens([because,of])]),mod([lexmatch([dietary]),inputmatch([dietary]),tag(adj),tokens([dietary])]),mod([lexmatch([caloric]),inputmatch([caloric]),tag(adj),tokens([caloric])]),mod([lexmatch([indiscretion]),inputmatch([indiscretion]),tag(noun),tokens([indiscretion])]),punc([inputmatch(['.']),tokens([])])],192/47,[]).
candidates(8,1,0,7,[]).
mappings([map(-716,[ev(-753,'C0043100','WEIGHT','Weight',[weight],[qnco],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_FDA','OMIM','SNMI','SNOMEDCT_US'],[192/6],0,0),ev(-617,'C1321006','Dietary indiscretion','Dietary indiscretion',[dietary,indiscretion],[fndg],[[[4,4],[1,1],0],[[6,6],[2,2],0]],no,no,['SNOMEDCT_US'],[210/7,226/12],0,0)])]).
'EOU'.
utterance('00000000.tx.5',"He is not having any edema or orthopnea.",240/40,[]).
phrase('He',[pron([lexmatch([he]),inputmatch(['He']),tag(pron),tokens([he])])],240/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(is,[aux([lexmatch([is]),inputmatch([is]),tag(aux),tokens([is])])],243/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(not,[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])])],246/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[246/3],0,0)])]).
phrase(having,[aux([lexmatch([having]),inputmatch([having]),tag(aux),tokens([having])])],250/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('any edema',[det([lexmatch([any]),inputmatch([any]),tag(det),tokens([any])]),head([lexmatch([edema]),inputmatch([edema]),tag(noun),tokens([edema])])],257/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0013604','EDEMA','Edema',[edema],[patf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET','UWDA'],[261/5],0,1)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],267/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('orthopnea.',[head([lexmatch([orthopnea]),inputmatch([orthopnea]),tag(noun),tokens([orthopnea])]),punc([inputmatch(['.']),tokens([])])],270/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0085619','ORTHOPNEA','Orthopnea',[orthopnea],[sosy],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','MTH','QMR','SNM','SNMI','SNOMEDCT_US'],[270/9],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Family history:",0/15,[]).
phrase('Family history',[head([lexmatch(['family history']),inputmatch(['Family',history]),tag(noun),tokens([family,history])])],0/14,[]).
candidates(13,3,0,10,[]).
mappings([map(-1000,[ev(-1000,'C0241889','FAMILY HISTORY','Family history',[family,history],[fndg],[[[1,2],[1,2],0]],yes,no,['CHV','CSP','DXP','MEDLINEPLUS','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNOMEDCT_US'],[0/14],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],14/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Brother has been diagnosed with prostate cancer.",3/48,[]).
phrase('Brother',[head([lexmatch([brother]),inputmatch(['Brother']),tag(noun),tokens([brother])])],3/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0337527','Brother','Brothers',[brother],[famg],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[3/7],0,0)])]).
phrase(has,[aux([lexmatch([has]),inputmatch([has]),tag(aux),tokens([has])])],11/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(been,[aux([lexmatch([been]),inputmatch([been]),tag(aux),tokens([been])])],15/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('diagnosed with prostate cancer.',[verb([lexmatch([diagnosed]),inputmatch([diagnosed]),tag(verb),tokens([diagnosed])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch(['prostate cancer']),inputmatch([prostate,cancer]),tag(noun),tokens([prostate,cancer])]),punc([inputmatch(['.']),tokens([])])],20/31,[]).
candidates(11,1,0,10,[]).
mappings([map(-783,[ev(-770,'C0011900','Diagnosed','Diagnosis',[diagnosed],[fndg],[[[1,1],[1,1],0]],yes,no,['AOD','CCS','CHV','CSP','HL7V3.0','LCH','LCH_NW','LNC','MCM','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NCI_NICHD','SNOMEDCT_US'],[20/9],0,0),ev(-833,'C0600139','Prostate Cancer','Prostate carcinoma',[prostate,cancer],[neop],[[[3,4],[1,2],0]],yes,no,['CHV','COSTAR','CST','DXP','LNC','MTH','NCI','NCI_CTEP-SDC','NCI_NCI-GLOSS','NLMSubSyn','PDQ','QMR','SNOMEDCT_US'],[35/15],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Physical examination:",0/21,[]).
phrase('Physical examination',[head([lexmatch(['physical examination']),inputmatch(['Physical',examination]),tag(noun),tokens([physical,examination])])],0/20,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C0031809','PHYSICAL EXAMINATION','Physical Examination',[physical,examination],[hlca],[[[1,2],[1,2],0]],yes,no,['AIR','AOD','AOT','CHV','ICD9CM','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NCI_NICHD','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[0/20],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],20/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([negation(nega,no,[12/2],['C0231303':'Distress'],[21/8])]).
utterance('00000000.tx.1',"-General:   No acute distress.",0/30,[]).
phrase('-General',[punc([inputmatch([-]),tokens([])]),head([lexmatch([general]),inputmatch(['General']),tag(adj),tokens([general])])],0/8,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0205246','General','Generalized',[general],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V3.0','HPO','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[1/7],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],8/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('No acute distress.',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),mod([lexmatch([acute]),inputmatch([acute]),tag(adj),tokens([acute])]),head([lexmatch([distress]),inputmatch([distress]),tag(noun),tokens([distress])]),punc([inputmatch(['.']),tokens([])])],12/18,[]).
candidates(3,1,0,2,[]).
mappings([map(-888,[ev(-694,'C0205178','ACUTE',acute,[acute],[tmco],[[[1,1],[1,1],0]],no,no,['CHV','DXP','HPO','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[15/5],0,0),ev(-861,'C0231303','Distress','Distress',[distress],[menp],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US'],[21/8],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([negation(nega,no,[9/2],['C0205180':'Anicteric'],[20/9]),negation(nega,no,[9/2],['C0015230':'Rashes'],[12/6])]).
utterance('00000000.tx.1',"-Skin:   No rashes, anicteric.",0/30,[]).
phrase('-Skin',[punc([inputmatch([-]),tokens([])]),head([lexmatch([skin]),inputmatch(['Skin']),tag(noun),tokens([skin])])],0/5,[]).
candidates(7,4,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0444099','Skin','Skin Specimen',[skin],[bdsu],[[[1,1],[1,1],0]],yes,no,['HL7V3.0','MTH','NLMSubSyn','SNOMEDCT_US'],[1/4],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],5/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('No rashes,',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([rashes]),inputmatch([rashes]),tag(noun),tokens([rashes])]),punc([inputmatch([',']),tokens([])])],9/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0015230','Rashes','Exanthema',[rashes],[sosy],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CST','HPO','ICD10CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[12/6],0,1)])]).
phrase('anicteric.',[head([lexmatch([anicteric]),inputmatch([anicteric]),tag(adj),tokens([anicteric])]),punc([inputmatch(['.']),tokens([])])],20/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0205180','Anicteric','Anicteric',[anicteric],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','SNMI','SNOMEDCT_US'],[20/9],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"-Heent:   Unremarkable",0/22,[]).
phrase('-Heent',[punc([inputmatch([-]),tokens([])]),head([lexmatch([heent]),inputmatch(['Heent']),tag(noun),tokens([heent])])],0/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1512338','HEENT','HEENT',[heent],[blor],[[[1,1],[1,1],0]],yes,no,['LNC','NCI','OMIM'],[1/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],6/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Unremarkable',[head([lexmatch([unremarkable]),inputmatch(['Unremarkable']),tag(adj),tokens([unremarkable])])],10/12,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0205307','Unremarkable','Normal',[unremarkable],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V2.5','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[10/12],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([negation(nega,without,[21/7],['C0006318':bruits],[29/6]),negation(nega,no,[41/2],['C0425687':'JUGULAR VENOUS DISTENTION'],[44/25])]).
utterance('00000000.tx.1',"-Neck:   Carotids 2+ without bruits. ",0/37,[]).
phrase('-Neck',[punc([inputmatch([-]),tokens([])]),head([lexmatch([neck]),inputmatch(['Neck']),tag(noun),tokens([neck])])],0/5,[]).
candidates(5,2,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0027530','NECK','Neck',[neck],[blor],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[1/4],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],5/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Carotids 2+',[mod([lexmatch([carotids]),inputmatch(['Carotids']),tag(noun),tokens([carotids])]),shapes([inputmatch(['2']),features([integer]),tokens(['2'])]),punc([inputmatch([+]),tokens([])])],9/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C0741968',carotids,carotid,[carotids],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V2.5'],[9/8],0,0)])]).
phrase('without bruits.',[prep([lexmatch([without]),inputmatch([without]),tag(prep),tokens([without])]),head([lexmatch([bruits]),inputmatch([bruits]),tag(noun),tokens([bruits])]),punc([inputmatch(['.']),tokens([])])],21/15,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0006318',bruits,'Bruit',[bruits],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','DXP','MTHICD9','SNM','SNMI','SNOMEDCT_US'],[29/6],0,1)])]).
'EOU'.
utterance('00000000.tx.2',"JVP no jugular venous distention.",37/33,[]).
phrase('JVP',[head([lexmatch([jvp]),inputmatch(['JVP']),tag(noun),tokens([jvp])])],37/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no jugular venous distention.',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch(['jugular venous distention']),inputmatch([jugular,venous,distention]),tag(noun),tokens([jugular,venous,distention])]),punc([inputmatch(['.']),tokens([])])],41/29,[]).
candidates(12,3,0,9,[]).
mappings([map(-1000,[ev(-1000,'C0425687','JUGULAR VENOUS DISTENTION','Jugular venous engorgement',[jugular,venous,distention],[fndg],[[[1,3],[1,3],0]],yes,no,['CHV','DXP','NLMSubSyn','SNOMEDCT_US'],[44/25],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"-Chest:   Clear to auscultation and percussion.",0/47,[]).
phrase('-Chest',[punc([inputmatch([-]),tokens([])]),head([lexmatch([chest]),inputmatch(['Chest']),tag(noun),tokens([chest])])],0/6,[]).
candidates(7,5,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0817096','CHEST','Chest',[chest],[blor],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[1/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],6/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Clear to auscultation',[head([lexmatch([clear]),inputmatch(['Clear']),tag(adj),tokens([clear])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),mod([lexmatch([auscultation]),inputmatch([auscultation]),tag(noun),tokens([auscultation])])],10/21,[]).
candidates(3,0,0,3,[]).
mappings([map(-746,[ev(-790,'C1709157','Clear','Negative Surgical Margin',[clear],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[10/5],0,0),ev(-623,'C0004339','AUSCULTATION','Auscultation',[auscultation],[diap],[[[3,3],[1,1],0]],no,no,['AOD','CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','SNM','SNMI','SNOMEDCT_US'],[19/12],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],32/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('percussion.',[head([lexmatch([percussion]),inputmatch([percussion]),tag(noun),tokens([percussion])]),punc([inputmatch(['.']),tokens([])])],36/11,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0030987','Percussion','Percussion',[percussion],[diap],[[[1,1],[1,1],0]],yes,no,['CHV','LCH','LCH_NW','MSH','MTH','SNM','SNMI','SNOMEDCT_US'],[36/10],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([negation(nega,no,[134/2],['C3842106':'Clicks'],[146/6]),negation(nega,no,[134/2],['C3842105':'Rubs'],[156/4]),negation(nega,no,[134/2],['C0018808':murmurs],[137/7])]).
utterance('00000000.tx.1',"-Cardiac:   Left ventricular impulse discrete and nondisplaced. ",0/64,[]).
phrase('-Cardiac',[punc([inputmatch([-]),tokens([])]),head([lexmatch([cardiac]),inputmatch(['Cardiac']),tag(adj),tokens([cardiac])])],0/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0018787','Cardiac','Heart',[cardiac],[bpoc],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[1/7],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],8/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Left ventricular impulse',[mod([lexmatch(['left ventricular']),inputmatch(['Left',ventricular]),tag(adj),tokens([left,ventricular])]),head([lexmatch([impulse]),inputmatch([impulse]),tag(noun),tokens([impulse])])],12/24,[]).
candidates(13,6,0,7,[]).
mappings([map(-901,[ev(-734,'C0225897','Left Ventricular','Left ventricular structure',[left,ventricular],[bpoc],[[[1,2],[1,2],0]],no,no,['AOD','CHV','FMA','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NLMSubSyn','SNM','SNMI','SNOMEDCT_US','UWDA'],[12/16],0,0),ev(-827,'C0443235','Impulse','Impulse technique',[impulse],[topp],[[[3,3],[1,1],0]],yes,no,['MTH','NLMSubSyn','SNOMEDCT_US'],[29/7],0,0)])]).
phrase(discrete,[head([lexmatch([discrete]),inputmatch([discrete]),tag(adj),tokens([discrete])])],37/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0443299','Discrete','Separate',[discrete],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US','SNOMEDCT_VET'],[37/8],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],46/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('nondisplaced.',[head([lexmatch([nondisplaced]),inputmatch([nondisplaced]),tag(adj),tokens([nondisplaced])]),punc([inputmatch(['.']),tokens([])])],50/13,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0746928','non displaced','non displaced',[non,displaced],[idcn],[[[1,1],[1,2],0]],yes,no,['CHV','NLMSubSyn'],[50/12],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Regular rate and rhythm, normal S1 and S2, with no S3 +S4. ",64/59,[]).
phrase('Regular rate',[mod([lexmatch([regular]),inputmatch(['Regular']),tag(adj),tokens([regular])]),head([lexmatch([rate]),inputmatch([rate]),tag(noun),tokens([rate])])],64/12,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0205272','Regular','Regular',[regular],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[64/7],0,0),ev(-861,'C1521828','Rate','Rate',[rate],[qnco],[[[2,2],[1,1],0]],yes,no,['LNC','MTH','NCI'],[72/4],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],77/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('rhythm,',[head([lexmatch([rhythm]),inputmatch([rhythm]),tag(noun),tokens([rhythm])]),punc([inputmatch([',']),tokens([])])],81/7,[]).
candidates(4,1,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0871269','Rhythm','Rhythm',[rhythm],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[81/6],0,0)])]).
phrase('normal S1',[mod([lexmatch([normal]),inputmatch([normal]),tag(adj),tokens([normal])]),head([lexmatch([s1]),inputmatch(['S1']),tag(noun),tokens([s1])])],89/9,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C0439166','% normal','Percent normal',[normal],[qnco],[[[1,1],[1,1],0]],no,no,['CHV','MTH','SNOMEDCT_US'],[89/6],0,0),ev(-861,'C3715215','S1','S1',[s1],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC','MTH'],[96/2],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],99/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('S2,',[head([lexmatch([s2]),inputmatch(['S2']),tag(noun),tokens([s2])]),punc([inputmatch([',']),tokens([])])],103/3,[]).
candidates(5,0,0,5,[]).
mappings([map(-1000,[ev(-1000,'C1419718','S2','RPS2 gene',[s2],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[103/2],0,0)])]).
phrase('with no S3 +S4.',[prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([s3]),inputmatch(['S3']),tag(noun),tokens([s3])]),punc([inputmatch([+]),tokens([])]),head([lexmatch([s4]),inputmatch(['S4']),tag(noun),tokens([s4])]),punc([inputmatch(['.']),tokens([])])],107/15,[]).
candidates(6,0,0,6,[]).
mappings([map(-888,[ev(-694,'C1335643','S3','RPS3 gene',[s3],[gngm],[[[1,1],[1,1],0]],no,no,['HGNC','MTH','NCI','OMIM'],[115/2],0,0),ev(-861,'C2349970','S4+','S4+',[s4],[elii],[[[2,2],[1,1],0]],yes,no,['NCI','NCI_CRCH'],[119/2],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"There were no murmurs, clicks or rubs.",123/38,[]).
phrase('There',[adv([lexmatch([there]),inputmatch(['There']),tag(adv),tokens([there])])],123/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(were,[aux([lexmatch([were]),inputmatch([were]),tag(aux),tokens([were])])],129/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no murmurs,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([murmurs]),inputmatch([murmurs]),tag(noun),tokens([murmurs])]),punc([inputmatch([',']),tokens([])])],134/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0018808',murmurs,'Heart murmur',[murmurs],[fndg],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CHV','COSTAR','DXP','HPO','ICD10CM','ICPC','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[137/7],0,1)])]).
phrase(clicks,[head([lexmatch([clicks]),inputmatch([clicks]),tag(noun),tokens([clicks])])],146/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3842106','Clicks','Clicks',[clicks],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC'],[146/6],0,1)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],153/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('rubs.',[verb([lexmatch([rubs]),inputmatch([rubs]),tag(verb),tokens([rubs])]),punc([inputmatch(['.']),tokens([])])],156/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3842105','Rubs','Rubs',[rubs],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC'],[156/4],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([negation(nega,no,[16/2],['C0149651':'CLUBBING'],[29/8]),negation(nega,no,[16/2],['C0010520':'CYANOSIS'],[19/8]),negation(nega,no,[16/2],['C0013604':'EDEMA'],[41/5]),negation(nega,without,[66/7],['C0006318':bruits],[74/6])]).
utterance('00000000.tx.1',"-Extremities:   No cyanosis, clubbing or edema. ",0/48,[]).
phrase('-Extremities',[punc([inputmatch([-]),tokens([])]),head([lexmatch([extremities]),inputmatch(['Extremities']),tag(noun),tokens([extremities])])],0/12,[]).
candidates(7,5,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0015385','Extremities','Limb structure',[extremities],[bpoc],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','LNC','MSH','MTH','NCI','NCI_CDISC','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[1/11],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],12/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('No cyanosis,',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([cyanosis]),inputmatch([cyanosis]),tag(noun),tokens([cyanosis])]),punc([inputmatch([',']),tokens([])])],16/12,[]).
candidates(2,1,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0010520','CYANOSIS','Cyanosis',[cyanosis],[sosy],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[19/8],0,1)])]).
phrase(clubbing,[verb([lexmatch([clubbing]),inputmatch([clubbing]),tag(verb),tokens([clubbing])])],29/8,[]).
candidates(4,2,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0149651','CLUBBING','Clubbing',[clubbing],[sosy],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','HPO','LNC','MTH','OMIM','SNM','SNMI','SNOMEDCT_US'],[29/8],0,1)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],38/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('edema.',[head([lexmatch([edema]),inputmatch([edema]),tag(noun),tokens([edema])]),punc([inputmatch(['.']),tokens([])])],41/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0013604','EDEMA','Edema',[edema],[patf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET','UWDA'],[41/5],0,1)])]).
'EOU'.
utterance('00000000.tx.2',"2+ femoral pulses without bruits. ",48/34,[]).
phrase('2+ femoral pulses without bruits.',[shapes([inputmatch(['2']),features([integer]),tokens(['2'])]),punc([inputmatch([+]),tokens([])]),mod([lexmatch([femoral]),inputmatch([femoral]),tag(adj),tokens([femoral])]),head([lexmatch([pulses]),inputmatch([pulses]),tag(noun),tokens([pulses])]),prep([lexmatch([without]),inputmatch([without]),tag(prep),tokens([without])]),mod([lexmatch([bruits]),inputmatch([bruits]),tag(noun),tokens([bruits])]),punc([inputmatch(['.']),tokens([])])],48/33,[]).
candidates(12,2,0,10,[]).
mappings([map(-761,[ev(-593,'C2981700','2+','2+ Score, WHO',['2'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[48/1],0,0),ev(-806,'C0232148','femoral pulses','Femoral pulse',[femoral,pulses],[ortf],[[[2,2],[1,1],0],[[3,3],[2,2],0]],yes,no,['CHV','SNM','SNMI','SNOMEDCT_US'],[51/14],0,0),ev(-593,'C0006318',bruits,'Bruit',[bruits],[fndg],[[[5,5],[1,1],0]],no,no,['CHV','COSTAR','DXP','MTHICD9','SNM','SNMI','SNOMEDCT_US'],[74/6],0,1)])]).
'EOU'.
utterance('00000000.tx.3',"2+ pedal pulses.",82/16,[]).
phrase('2+ pedal pulses.',[shapes([inputmatch(['2']),features([integer]),tokens(['2'])]),punc([inputmatch([+]),tokens([])]),mod([lexmatch([pedal]),inputmatch([pedal]),tag(adj),tokens([pedal])]),head([lexmatch([pulses]),inputmatch([pulses]),tag(noun),tokens([pulses])]),punc([inputmatch(['.']),tokens([])])],82/16,[]).
candidates(12,3,0,9,[]).
mappings([map(-901,[ev(-660,'C2981700','2+','2+ Score, WHO',['2'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[82/1],0,0),ev(-901,'C0232157','pedal pulses','Pedal pulse',[pedal,pulses],[ortf],[[[2,2],[1,1],0],[[3,3],[2,2],0]],yes,no,['CHV','MTH','SNM','SNMI','SNOMEDCT_US'],[85/12],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"-Neuro:   A&O x3, CN 2-12 grossly intact.",0/41,[]).
phrase('-Neuro',[punc([inputmatch([-]),tokens([])]),head([lexmatch([neuro]),inputmatch(['Neuro']),tag(adj),tokens([neuro])])],0/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(:,[punc([inputmatch([:]),tokens([])])],6/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('A&O x3,',[det([lexmatch([a]),inputmatch(['A']),tag(det),tokens([a])]),punc([inputmatch([&]),tokens([])]),mod([lexmatch([o]),inputmatch(['O']),tag(noun),tokens([o])]),head([inputmatch([x3]),tag(noun),tokens([x3])]),punc([inputmatch([',']),tokens([])])],10/7,[]).
candidates(2,0,0,2,[]).
mappings([map(-888,[ev(-694,'C0483204','O NOS','O NOS Ab',[o],[aapp,imft],[[[1,1],[1,1],0]],no,no,['LNC','NLMSubSyn'],[12/1],0,0),ev(-861,'C1421546','X3','XPR1 gene',[x3],[gngm],[[[2,2],[1,1],0]],yes,no,['HGNC','MTH','NLMSubSyn','OMIM'],[14/2],0,0)])]).
phrase('CN 2-12 grossly intact.',[mod([lexmatch(['cn 2']),inputmatch(['CN','2']),tag(noun),tokens([cn,'2'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['12']),features([integer]),tokens(['12'])]),adv([lexmatch([grossly]),inputmatch([grossly]),tag(adv),tokens([grossly])]),head([lexmatch([intact]),inputmatch([intact]),tag(adj),tokens([intact])]),punc([inputmatch(['.']),tokens([])])],18/23,[]).
candidates(3,0,0,3,[]).
mappings([map(-786,[ev(-637,'C0009490','CN','Comoros',[cn],[geoa],[[[1,1],[1,1],0]],no,no,['AOD','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[18/2],0,0),ev(-804,'C1554187','Intact','Gender Status - Intact',[intact],[fndg],[[[5,5],[1,1],0]],yes,no,['HL7V3.0','MTH'],[34/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([negation(nega,'with no',[74/7],['C0019214':'HEPATOSPLENOMEGALY'],[82/18])]).
utterance('00000000.tx.1',"-Abdomen:   Normal bowel sounds, soft and has mild epigastric tenderness, with no hepatosplenomegaly or masses appreciated.",0/123,[]).
phrase('-Abdomen',[punc([inputmatch([-]),tokens([])]),head([lexmatch([abdomen]),inputmatch(['Abdomen']),tag(noun),tokens([abdomen])])],0/8,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0000726','ABDOMEN','Abdomen',[abdomen],[blor],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NCI-GLOSS','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[1/7],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],8/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Normal bowel sounds,',[mod([lexmatch([normal]),inputmatch(['Normal']),tag(adj),tokens([normal])]),head([lexmatch(['bowel sounds']),inputmatch([bowel,sounds]),tag(noun),tokens([bowel,sounds])]),punc([inputmatch([',']),tokens([])])],12/20,[]).
candidates(10,3,0,7,[]).
mappings([map(-1000,[ev(-1000,'C0278005','Normal bowel sounds','Normal bowel sounds',[normal,bowel,sounds],[sosy],[[[1,1],[1,1],0],[[2,3],[2,3],0]],yes,no,['CHV','NLMSubSyn','SNMI','SNOMEDCT_US'],[12/19],0,0)])]).
phrase(soft,[head([lexmatch([soft]),inputmatch([soft]),tag(adj),tokens([soft])])],33/4,[]).
candidates(3,1,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0205358','Soft','Soft',[soft],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[33/4],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],38/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(has,[aux([lexmatch([has]),inputmatch([has]),tag(aux),tokens([has])])],42/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('mild epigastric tenderness,',[mod([lexmatch([mild]),inputmatch([mild]),tag(adj),tokens([mild])]),mod([lexmatch([epigastric]),inputmatch([epigastric]),tag(adj),tokens([epigastric])]),head([lexmatch([tenderness]),inputmatch([tenderness]),tag(noun),tokens([tenderness])]),punc([inputmatch([',']),tokens([])])],46/27,[]).
candidates(6,1,0,5,[]).
mappings([map(-901,[ev(-660,'C2945599','MILD','Mild (qualifier value)',[mild],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[46/4],0,0),ev(-901,'C0740433','epigastric tenderness','epigastric tenderness',[epigastric,tenderness],[sosy],[[[2,2],[1,1],0],[[3,3],[2,2],0]],yes,no,['CHV','NLMSubSyn'],[51/21],0,0)])]).
phrase('with no hepatosplenomegaly',[prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([hepatosplenomegaly]),inputmatch([hepatosplenomegaly]),tag(noun),tokens([hepatosplenomegaly])])],74/26,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0019214','HEPATOSPLENOMEGALY','Hepatosplenomegaly',[hepatosplenomegaly],[sosy],[[[1,1],[1,1],0]],yes,no,['CHV','CST','DXP','HPO','ICD10CM','LNC','NCI','OMIM','SNM','SNMI','SNOMEDCT_US'],[82/18],0,1)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],101/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(masses,[head([lexmatch([masses]),inputmatch([masses]),tag(noun),tokens([masses])])],104/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-966,[ev(-966,'C1306372','*Mass','Mass, a measure of quantity of matter',[mass],[qnco],[[[1,1],[1,1],1]],yes,no,['CHV','HL7V2.5','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[104/6],0,0)])]).
phrase('appreciated.',[verb([lexmatch([appreciated]),inputmatch([appreciated]),tag(verb),tokens([appreciated])]),punc([inputmatch(['.']),tokens([])])],111/12,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"-BP: 127/55",0/11,[]).
phrase('-BP',[punc([inputmatch([-]),tokens([])]),head([lexmatch([bp]),inputmatch(['BP']),tag(noun),tokens([bp])])],0/3,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1415692','Bp','HP gene',[bp],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH','NCI','OMIM'],[1/2],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],3/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('127/55',[shapes([inputmatch(['127',/,'55']),features([fraction]),tokens(['127','55'])])],5/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C0450382','55','55',['55'],[inpr],[[[2,2],[1,1],0]],yes,no,['SNOMEDCT_US'],[9/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"-Pulse: 43",0/10,[]).
phrase('-Pulse',[punc([inputmatch([-]),tokens([])]),head([lexmatch([pulse]),inputmatch(['Pulse']),tag(noun),tokens([pulse])])],0/6,[]).
candidates(4,1,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0391850','Pulse','Physiologic pulse',[pulse],[phsf],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[1/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],6/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('43',[shapes([inputmatch(['43']),features([integer]),tokens(['43'])])],8/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"-weight: 185  lbs.",0/18,[]).
phrase('-weight',[punc([inputmatch([-]),tokens([])]),head([lexmatch([weight]),inputmatch([weight]),tag(noun),tokens([weight])])],0/7,[]).
candidates(5,1,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1305866',weight,'Weighing patient',[weight],[diap],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','MTH','NLMSubSyn','SNMI','SNOMEDCT_US'],[1/6],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],7/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('185  lbs.',[shapes([inputmatch(['185']),features([integer]),tokens(['185'])]),head([lexmatch([lbs]),inputmatch([lbs]),tag(noun),tokens([lbs])]),punc([inputmatch(['.']),tokens([])])],9/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C0439219',lbs,'Pounds',[lbs],[qnco],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_ICH','NCI_NCPDP','NCI_NICHD','NCI_UCUM','SNOMEDCT_US'],[14/3],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"-BMI:",0/5,[]).
phrase('-BMI',[punc([inputmatch([-]),tokens([])]),head([lexmatch([bmi]),inputmatch(['BMI']),tag(noun),tokens([bmi])])],0/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(:,[punc([inputmatch([:]),tokens([])])],4/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"EKG:",0/4,[]).
phrase('EKG',[head([lexmatch([ekg]),inputmatch(['EKG']),tag(noun),tokens([ekg])])],0/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0013798','EKG','Electrocardiogram',[ekg],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','MTH','SNM','SNOMEDCT_US'],[0/3],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],3/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Sinus rhythm, intraventricular conduction defect, poor RWave progression, unchanged from previous.",3/98,[]).
phrase('Sinus rhythm,',[head([lexmatch(['sinus rhythm']),inputmatch(['Sinus',rhythm]),tag(noun),tokens([sinus,rhythm])]),punc([inputmatch([',']),tokens([])])],3/13,[]).
candidates(8,1,0,7,[]).
mappings([map(-1000,[ev(-1000,'C0232201','SINUS RHYTHM','Sinus rhythm',[sinus,rhythm],[fndg],[[[1,2],[1,2],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[3/12],0,0)])]).
phrase('intraventricular conduction defect,',[head([lexmatch(['intraventricular conduction defect']),inputmatch([intraventricular,conduction,defect]),tag(noun),tokens([intraventricular,conduction,defect])]),punc([inputmatch([',']),tokens([])])],17/35,[]).
candidates(8,0,0,8,[]).
mappings([map(-1000,[ev(-1000,'C0264909','Intraventricular conduction defect','Intraventricular conduction defect',[intraventricular,conduction,defect],[dsyn],[[[1,3],[1,3],0]],yes,no,['CHV','CST','MTH','MTHICD9','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[17/34],0,0)])]).
phrase('poor RWave progression,',[mod([lexmatch([poor]),inputmatch([poor]),tag(adj),tokens([poor])]),mod([inputmatch(['RWave']),tag(noun),tokens([rwave])]),head([lexmatch([progression]),inputmatch([progression]),tag(noun),tokens([progression])]),punc([inputmatch([',']),tokens([])])],53/23,[]).
candidates(5,0,0,5,[]).
mappings([map(-802,[ev(-660,'C2700379','Poor','Poor - qualifier',[poor],[qlco],[[[1,1],[1,1],0]],no,no,['LNC','MTH','NCI','NCI_FDA'],[53/4],0,0),ev(-827,'C0449258','Progression','Progression',[progression],[ftcn],[[[3,3],[1,1],0]],yes,no,['CHV','MTH','SNOMEDCT_US'],[64/11],0,0)])]).
phrase('unchanged from previous.',[head([lexmatch([unchanged]),inputmatch([unchanged]),tag(adj),tokens([unchanged])]),prep([lexmatch([from]),inputmatch([from]),tag(prep),tokens([from])]),mod([lexmatch([previous]),inputmatch([previous]),tag(adj),tokens([previous])]),punc([inputmatch(['.']),tokens([])])],77/24,[]).
candidates(4,0,0,4,[]).
mappings([map(-746,[ev(-790,'C2346711','Unchanged','About The Same',[unchanged],[qlco],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[77/9],0,0),ev(-623,'C0205156','Previous','Previous',[previous],[tmco],[[[3,3],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[92/8],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Impression:",0/11,[]).
phrase('Impression',[head([lexmatch([impression]),inputmatch(['Impression']),tag(noun),tokens([impression])])],0/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1998467','Impression','Impression',[impression],[qlco],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[0/10],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],10/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([negation(nega,'not had',[373/7],['C1947900':'Disease progression NOS'],[381/11,396/7])]).
utterance('00000000.tx.1',"Ted continues to do well. ",3/26,[]).
phrase('Ted',[head([lexmatch([ted]),inputmatch(['Ted']),tag(noun),tokens([ted])])],3/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1539997','TED','FAM155B gene',[ted],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH'],[3/3],0,0)])]).
phrase(continues,[verb([lexmatch([continues]),inputmatch([continues]),tag(verb),tokens([continues])])],7/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0549178','Continue','Continuous',[continue],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_FDA','SNMI','SNOMEDCT_US'],[7/9],0,0)])]).
phrase('to do well.',[head([lexmatch(['to do']),inputmatch([to,do]),tag(noun),tokens([to,do])]),adv([lexmatch([well]),inputmatch([well]),tag(adv),tokens([well])]),punc([inputmatch(['.']),tokens([])])],17/11,[]).
candidates(5,0,0,5,[]).
mappings([map(-802,[ev(-827,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[17/2],0,0),ev(-660,'C0205170','Well','Good',[well],[qlco],[[[3,3],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_FDA','SNMI','SNOMEDCT_US'],[23/4],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"I discussed with him the reason for his persistent positive stress test and the posterolateral redistribution being related to the circumflex occlusion. ",29/153,[]).
phrase('I',[head([lexmatch([i]),inputmatch(['I']),tag(noun),tokens([i])])],29/1,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0221138','I NOS','Blood group antibody I',[i],[aapp,imft],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[29/1],0,0)])]).
phrase('discussed with him',[verb([lexmatch([discussed]),inputmatch([discussed]),tag(verb),tokens([discussed])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),pron([lexmatch([him]),inputmatch([him]),tag(pron),tokens([him])])],31/18,[]).
candidates(1,0,0,1,[]).
mappings([map(-756,[ev(-756,'C2584313','Discuss','Discussion (communication)',[discuss],[socb],[[[1,1],[1,1],1]],yes,no,['ICF','ICF-CY','MTH','NCI'],[31/9],0,0)])]).
phrase('the reason for his persistent positive stress test',[det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),head([lexmatch([reason]),inputmatch([reason]),tag(noun),tokens([reason])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),pron([lexmatch([his]),inputmatch([his]),tag(pron),tokens([his])]),mod([lexmatch([persistent]),inputmatch([persistent]),tag(adj),tokens([persistent])]),mod([lexmatch([positive]),inputmatch([positive]),tag(adj),tokens([positive])]),mod([lexmatch(['stress test']),inputmatch([stress,test]),tag(noun),tokens([stress,test])])],50/50,[]).
candidates(19,2,0,17,[]).
mappings([map(-789,[ev(-793,'C3655965','Reason for test','Reason for test',[reason,for,test],[inpr],[[[2,2],[1,1],0],[[3,3],[2,2],0],[[8,8],[3,3],0]],yes,no,['LNC'],[54/10,96/4],0,0),ev(-578,'C0019602','HIS','Histidine',[his],[aapp,bacs,phsu],[[[4,4],[1,1],0]],no,no,['AOD','CHV','CSP','FMA','LNC','MSH','MTH','MTHSPL','NCI','NCI_CRCH','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[65/3],0,0),ev(-578,'C0205322','Persistent',persistent,[persistent],[tmco],[[[5,5],[1,1],0]],no,no,['CHV','NCI','SNMI','SNOMEDCT_US'],[69/10],0,0),ev(-578,'C1514241','POSITIVE','Positive Finding',[positive],[fndg],[[[6,6],[1,1],0]],no,no,['LNC','MTH','NCI','NCI_CDISC','NLMSubSyn'],[80/8],0,0),ev(-578,'C0038435','Stress','Stress',[stress],[fndg],[[[7,7],[1,1],0]],no,no,['AOD','CHV','CSP','LNC','MEDLINEPLUS','MTH','NCI','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US'],[89/6],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],101/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('the posterolateral redistribution',[det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch([posterolateral]),inputmatch([posterolateral]),tag(adj),tokens([posterolateral])]),head([lexmatch([redistribution]),inputmatch([redistribution]),tag(noun),tokens([redistribution])])],105/33,[]).
candidates(2,0,0,2,[]).
mappings([map(-888,[ev(-694,'C0332195','Posterolateral','Posterolateral',[posterolateral],[spco],[[[1,1],[1,1],0]],no,no,['CHV','FMA','SNMI','SNOMEDCT_US','UWDA'],[109/14],0,0),ev(-861,'C0332620','Redistribution','Redistribution',[redistribution],[ftcn],[[[2,2],[1,1],0]],yes,no,['CHV','SNMI','SNOMEDCT_US'],[124/14],0,0)])]).
phrase(being,[aux([lexmatch([being]),inputmatch([being]),tag(aux),tokens([being])])],139/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('related to the circumflex occlusion.',[verb([lexmatch([related]),inputmatch([related]),tag(verb),tokens([related])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch([circumflex]),inputmatch([circumflex]),tag(noun),tokens([circumflex])]),mod([lexmatch([occlusion]),inputmatch([occlusion]),tag(noun),tokens([occlusion])]),punc([inputmatch(['.']),tokens([])])],145/36,[]).
candidates(10,1,0,9,[]).
mappings([map(-696,[ev(-760,'C0439849','Related','Relationships',[related],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V2.5','LNC','MTH','NCI','SNOMEDCT_US'],[145/7],0,0),ev(-760,'C1880089','Circumflex','Circumflex',[circumflex],[spco],[[[4,4],[1,1],0]],yes,no,['NCI'],[160/10],0,0),ev(-760,'C1110554','OCCLUSION','Cardiovascular occlusion',[occlusion],[patf],[[[5,5],[1,1],0]],yes,no,['CHV','CST','MTH','NLMSubSyn'],[171/9],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"There is good collaterals to this territory and I told Ted he needs to continue to exercise to build up those collaterals. ",182/123,[]).
phrase('There',[adv([lexmatch([there]),inputmatch(['There']),tag(adv),tokens([there])])],182/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(is,[aux([lexmatch([is]),inputmatch([is]),tag(aux),tokens([is])])],188/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('good collaterals to this territory',[mod([lexmatch([good]),inputmatch([good]),tag(adj),tokens([good])]),head([lexmatch([collaterals]),inputmatch([collaterals]),tag(noun),tokens([collaterals])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),det([lexmatch([this]),inputmatch([this]),tag(det),tokens([this])]),mod([lexmatch([territory]),inputmatch([territory]),tag(noun),tokens([territory])])],191/34,[]).
candidates(6,1,0,5,[]).
mappings([map(-685,[ev(-593,'C0205170','Good','Good',[good],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_FDA','SNMI','SNOMEDCT_US'],[191/4],0,0),ev(-726,'C1275670','Collateral','Collateral branch of vessel',[collateral],[bpoc],[[[2,2],[1,1],1]],yes,no,['MTH','SNOMEDCT_US'],[196/11],0,0),ev(-593,'C1301808','Territory','Geographic state',[territory],[geoa],[[[5,5],[1,1],0]],no,no,['CHV','MTH','NCI','SNOMEDCT_US'],[216/9],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],226/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('I told Ted',[mod([lexmatch([i]),inputmatch(['I']),tag(noun),tokens([i])]),mod([lexmatch([told]),inputmatch([told]),tag(adj),tokens([told])]),head([lexmatch([ted]),inputmatch(['Ted']),tag(noun),tokens([ted])])],230/10,[]).
candidates(3,0,0,3,[]).
mappings([map(-802,[ev(-660,'C0221138','I NOS','Blood group antibody I',[i],[aapp,imft],[[[1,1],[1,1],0]],no,no,['LNC','MTH','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[230/1],0,0),ev(-827,'C1539997','TED','FAM155B gene',[ted],[gngm],[[[3,3],[1,1],0]],yes,no,['HGNC','MTH'],[237/3],0,0)])]).
phrase(he,[pron([lexmatch([he]),inputmatch([he]),tag(pron),tokens([he])])],241/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(needs,[verb([lexmatch([needs]),inputmatch([needs]),tag(verb),tokens([needs])])],244/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0027552','Need','Needs',[need],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','MTH','NCI','SNOMEDCT_US'],[244/5],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],250/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[250/2],0,0)])]).
phrase(continue,[verb([lexmatch([continue]),inputmatch([continue]),tag(verb),tokens([continue])])],253/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0549178','Continue','Continuous',[continue],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_FDA','SNMI','SNOMEDCT_US'],[253/8],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],262/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[262/2],0,0)])]).
phrase(exercise,[verb([lexmatch([exercise]),inputmatch([exercise]),tag(verb),tokens([exercise])])],265/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1522704','Exercise','Exercise Pain Management',[exercise],[topp],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[265/8],0,0)])]).
phrase('to build up',[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])]),head([lexmatch(['build up']),inputmatch([build,up]),tag(noun),tokens([build,up])])],274/11,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-660,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],no,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[274/2],0,0),ev(-901,'C2986569','Buildup','Buildup',[buildup],[sbst],[[[2,3],[1,1],0]],yes,no,['NCI'],[277/8],0,0)])]).
phrase('those collaterals.',[det([lexmatch([those]),inputmatch([those]),tag(det),tokens([those])]),head([lexmatch([collaterals]),inputmatch([collaterals]),tag(noun),tokens([collaterals])]),punc([inputmatch(['.']),tokens([])])],286/18,[]).
candidates(2,0,0,2,[]).
mappings([map(-966,[ev(-966,'C1275670','Collateral','Collateral branch of vessel',[collateral],[bpoc],[[[1,1],[1,1],1]],yes,no,['MTH','SNOMEDCT_US'],[292/11],0,0)])]).
'EOU'.
utterance('00000000.tx.4',"We will repeat a stress test on him next spring to make sure he has not had progression of disease in his other arteries.",305/121,[]).
phrase('We',[pron([lexmatch([we]),inputmatch(['We']),tag(pron),tokens([we])])],305/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(will,[modal([lexmatch([will]),inputmatch([will]),tag(modal),tokens([will])])],308/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(repeat,[verb([lexmatch([repeat]),inputmatch([repeat]),tag(verb),tokens([repeat])])],313/6,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0205341','Repeat','Repeat',[repeat],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[313/6],0,0)])]).
phrase('a stress test on him',[det([lexmatch([a]),inputmatch([a]),tag(det),tokens([a])]),head([lexmatch(['stress test']),inputmatch([stress,test]),tag(noun),tokens([stress,test])]),prep([lexmatch([on]),inputmatch([on]),tag(prep),tokens([on])]),pron([lexmatch([him]),inputmatch([him]),tag(pron),tokens([him])])],320/20,[]).
candidates(8,1,0,7,[]).
mappings([map(-806,[ev(-806,'C0015260','stress test','Exercise stress test',[stress,test],[diap],[[[2,3],[1,2],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NLMSubSyn','SNOMEDCT_US'],[322/11],0,0)])]).
phrase(next,[adv([lexmatch([next]),inputmatch([next]),tag(adv),tokens([next])])],341/4,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0332282','Next','Following',[next],[tmco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[341/4],0,0)])]).
phrase(spring,[verb([lexmatch([spring]),inputmatch([spring]),tag(verb),tokens([spring])])],346/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0241232','SPRING','spring (season)',[spring],[tmco],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','DXP','MTH','NCI'],[346/6],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],353/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[353/2],0,0)])]).
phrase(make,[verb([lexmatch([make]),inputmatch([make]),tag(verb),tokens([make])])],356/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1881534','Make','Make - Instruction Imperative',[make],[ftcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[356/4],0,0)])]).
phrase(sure,[head([lexmatch([sure]),inputmatch([sure]),tag(adj),tokens([sure])])],361/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0205423','Sure','Certain (qualifier value)',[sure],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[361/4],0,0)])]).
phrase(he,[pron([lexmatch([he]),inputmatch([he]),tag(pron),tokens([he])])],366/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(has,[aux([lexmatch([has]),inputmatch([has]),tag(aux),tokens([has])])],369/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(not,[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])])],373/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[373/3],0,0)])]).
phrase(had,[aux([lexmatch([had]),inputmatch([had]),tag(aux),tokens([had])])],377/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('progression of disease',[head([lexmatch([progression]),inputmatch([progression]),tag(noun),tokens([progression])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([disease]),inputmatch([disease]),tag(noun),tokens([disease])])],381/22,[]).
candidates(8,3,0,5,[]).
mappings([map(-858,[ev(-858,'C1947900','Disease progression NOS','Death Adverse Event Due to Disease Progression Not Associated with More Specific CTCAE Term',[disease,progression],[fndg],[[[3,3],[1,1],0],[[1,1],[2,2],0]],yes,no,['MTH','NCI_CTCAE'],[381/11,396/7],0,1)])]).
phrase('in his',[prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),pron([lexmatch([his]),inputmatch([his]),tag(pron),tokens([his])])],404/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('other arteries.',[det([lexmatch([other]),inputmatch([other]),tag(det),tokens([other])]),head([lexmatch([arteries]),inputmatch([arteries]),tag(noun),tokens([arteries])]),punc([inputmatch(['.']),tokens([])])],411/15,[]).
candidates(3,1,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0003842','Arteries','Arteries',[arteries],[bpoc],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US','UWDA'],[417/8],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"CC:   Ulysses B. ",0/17,[]).
phrase('CC',[head([lexmatch([cc]),inputmatch(['CC']),tag(noun),tokens([cc])])],0/2,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3538933','CC','C-Circle',[cc],[celc],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[0/2],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],2/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Ulysses B.',[mod([lexmatch([ulysses]),inputmatch(['Ulysses']),tag(noun),tokens([ulysses])]),head([lexmatch([b]),inputmatch(['B']),tag(noun),tokens([b])]),punc([inputmatch(['.']),tokens([])])],6/10,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.2',"Gilbert, MD of KCC Gastrointerology",17/35,[]).
phrase('Gilbert,',[head([lexmatch([gilbert]),inputmatch(['Gilbert']),tag(noun),tokens([gilbert])]),punc([inputmatch([',']),tokens([])])],17/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1551090','Gilbert','Units Of Measure - Gilbert',[gilbert],[qnco],[[[1,1],[1,1],0]],yes,no,['HL7V3.0','MTH','NCI','NCI_NCI-HL7'],[17/7],0,0)])]).
phrase('MD of KCC Gastrointerology',[head([lexmatch([md]),inputmatch(['MD']),tag(noun),tokens([md])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([inputmatch(['KCC']),tag(noun),tokens([kcc])]),mod([inputmatch(['Gastrointerology']),tag(noun),tokens([gastrointerology])])],26/26,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Signed electronically by   Yosef Q Ullrich MD  on  Jan 15, 2092",0/63,[]).
phrase('Signed',[verb([lexmatch([signed]),inputmatch(['Signed']),tag(verb),tokens([signed])])],0/6,[]).
candidates(4,2,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1561610',signed,'signed - ParticipationSignature',[signed],[inpr],[[[1,1],[1,1],0]],yes,no,['HL7V3.0','MTH'],[0/6],0,0)])]).
phrase('electronically by   Yosef Q Ullrich MD',[adv([lexmatch([electronically]),inputmatch([electronically]),tag(adv),tokens([electronically])]),prep([lexmatch([by]),inputmatch([by]),tag(prep),tokens([by])]),mod([inputmatch(['Yosef']),tag(noun),tokens([yosef])]),mod([lexmatch([q]),inputmatch(['Q']),tag(noun),tokens([q])]),mod([lexmatch([ullrich]),inputmatch(['Ullrich']),tag(noun),tokens([ullrich])]),mod([lexmatch([md]),inputmatch(['MD']),tag(noun),tokens([md])])],7/38,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('on  Jan 15,',[prep([lexmatch([on]),inputmatch([on]),tag(prep),tokens([on])]),mod([lexmatch([jan]),inputmatch(['Jan']),tag(noun),tokens([jan])]),shapes([inputmatch(['15']),features([integer]),tokens(['15'])]),punc([inputmatch([',']),tokens([])])],47/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C3843934','Jan.','Jan.',[jan],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC'],[51/3],0,0)])]).
phrase('2092',[shapes([inputmatch(['2092']),features([integer]),tokens(['2092'])])],59/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 221-03.xml outputs/221-03-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'221-03.xml',outfile-'outputs/221-03-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"]]></TEXT>   <TAGS></TAGS> </root>",0/34,[]).
phrase(']',[punc([inputmatch([']']),tokens([])])],0/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(']',[punc([inputmatch([']']),tokens([])])],1/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(>,[punc([inputmatch([>]),tokens([])])],2/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</TEXT',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([text]),inputmatch(['TEXT']),tag(noun),tokens([text])])],3/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1705606','Text','Text Line',[text],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[5/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],9/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<TAGS',[punc([inputmatch([<]),tokens([])]),head([lexmatch([tags]),inputmatch(['TAGS']),tag(noun),tokens([tags])])],13/5,[]).
candidates(4,3,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1139855',tags,'Tags (device)',[tags],[medd],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[14/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],18/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</TAGS',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([tags]),inputmatch(['TAGS']),tag(noun),tokens([tags])])],19/6,[]).
candidates(4,3,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1139855',tags,'Tags (device)',[tags],[medd],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[21/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],25/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</root',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([root]),inputmatch([root]),tag(noun),tokens([root])])],27/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1318154','Root','Root body part',[root],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH'],[29/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],33/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
