args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"<?xml version=""1.0"" encoding=""UTF-8""?> <root>   <TEXT><![CDATA[",0/63,[]).
phrase('<?xml version',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([?]),tokens([])]),mod([lexmatch([xml]),inputmatch([xml]),tag(noun),tokens([xml])]),head([lexmatch([version]),inputmatch([version]),tag(noun),tokens([version])])],0/13,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C1707981','XML','Extensible Markup Language',[xml],[inpr],[[[1,1],[1,1],0]],no,no,['HL7V3.0','NCI'],[2/3],0,0),ev(-861,'C0333052','Version','Version',[version],[ftcn],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','MTHICD9','NCI','NCI_CDISC'],[6/7],0,0)])]).
phrase('="1.0"',[punc([inputmatch([=]),tokens([])]),punc([inputmatch(['"']),tokens([])]),shapes([inputmatch(['1','.','0']),features([real_number]),tokens(['1','0'])]),punc([inputmatch(['"']),tokens([])])],13/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-861,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[15/1],0,0),ev(-861,'C3842591','0%','0%',['0'],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC'],[17/1],0,0)])]).
phrase(encoding,[verb([lexmatch([encoding]),inputmatch([encoding]),tag(verb),tokens([encoding])])],20/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1547699','Encoding','MIME encoding',[encoding],[idcn],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH'],[20/8],0,0)])]).
phrase('="UTF-8"?',[punc([inputmatch([=]),tokens([])]),punc([inputmatch(['"']),tokens([])]),mod([lexmatch([utf]),inputmatch(['UTF']),tag(noun),tokens([utf])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['8']),features([integer]),tokens(['8'])]),punc([inputmatch(['"']),tokens([])]),punc([inputmatch([?]),tokens([])])],28/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1555005','UTF-8','UTF-8',[utf,'8'],[inpr],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['HL7V3.0'],[30/5],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],37/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<root',[punc([inputmatch([<]),tokens([])]),head([lexmatch([root]),inputmatch([root]),tag(noun),tokens([root])])],39/5,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1318154','Root','Root body part',[root],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH'],[40/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],44/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<TEXT',[punc([inputmatch([<]),tokens([])]),head([lexmatch([text]),inputmatch(['TEXT']),tag(noun),tokens([text])])],48/5,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1705606','Text','Text Line',[text],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[49/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],53/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<!',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([!]),tokens([])])],54/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('[CDATA',[punc([inputmatch(['[']),tokens([])]),head([inputmatch(['CDATA']),tag(noun),tokens([cdata])])],56/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0640049','CDATA','3-chloro-4-dimethylaminothioangelicin',[cdata],[orch],[[[1,1],[1,1],0]],yes,no,['MSH'],[57/5],0,0)])]).
phrase('[',[punc([inputmatch(['[']),tokens([])])],62/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Record date: 2067-05-03",0/23,[]).
phrase('Record date',[mod([lexmatch([record]),inputmatch(['Record']),tag(noun),tokens([record])]),head([lexmatch([date]),inputmatch([date]),tag(noun),tokens([date])])],0/11,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-694,'C0034869','Record','Records',[record],[inpr],[[[1,1],[1,1],0]],no,no,['CHV','HL7V3.0','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA'],[0/6],0,0),ev(-861,'C0011008','DATE','Date in time',[date],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MSH','MTH','NCI','NCI_CareLex','NCI_NICHD','SNOMEDCT_US'],[7/4],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],11/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('2067-05-03',[shapes([inputmatch(['2067']),features([integer]),tokens(['2067'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['05']),features([integer]),tokens(['05'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['03']),features([integer]),tokens(['03'])])],13/10,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Narrative History",0/17,[]).
phrase('Narrative History',[mod([lexmatch([narrative]),inputmatch(['Narrative']),tag(adj),tokens([narrative])]),head([lexmatch([history]),inputmatch(['History']),tag(noun),tokens([history])])],0/17,[]).
candidates(9,2,0,7,[]).
mappings([map(-888,[ev(-694,'C1135957','Narrative','Narration',[narrative],[socb],[[[1,1],[1,1],0]],no,no,['CHV','MSH','MTH','NCI'],[0/9],0,0),ev(-861,'C2004062','History','History of previous events',[history],[fndg],[[[2,2],[1,1],0]],yes,no,['CHV','LCH','MTH','NCI'],[10/7],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"55 yo woman who presents for f/u",3/32,[]).
phrase('55 yo woman',[shapes([inputmatch(['55']),features([integer]),tokens(['55'])]),mod([lexmatch([yo]),inputmatch([yo]),tag(noun),tokens([yo])]),head([lexmatch([woman]),inputmatch([woman]),tag(noun),tokens([woman])])],3/11,[]).
candidates(3,0,0,3,[]).
mappings([map(-851,[ev(-660,'C0450382','55','55',['55'],[inpr],[[[1,1],[1,1],0]],no,no,['SNOMEDCT_US'],[3/2],0,0),ev(-660,'C1413296','Yo','CDR2 gene',[yo],[gngm],[[[2,2],[1,1],0]],no,no,['HGNC','MTH','OMIM'],[6/2],0,0),ev(-827,'C0043210','WOMAN','Woman',[woman],[popg],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','DXP','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[9/5],0,0)])]).
phrase(who,[pron([lexmatch([who]),inputmatch([who]),tag(pron),tokens([who])])],15/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('presents for f/u',[verb([lexmatch([presents]),inputmatch([presents]),tag(verb),tokens([presents])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([f]),inputmatch([f,/]),tag(noun),tokens([f])]),mod([lexmatch([u]),inputmatch([u]),tag(noun),tokens([u])])],19/16,[]).
candidates(3,0,0,3,[]).
mappings([map(-708,[ev(-770,'C0150312','Present','Present',[present],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[19/8],0,0),ev(-770,'C0016327','F-','Fluorides',[f],[inch,phsu],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CRCH','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[32/1],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Seen in Cardiac rehab locally last week and BP 170/80.  ",3/56,[]).
phrase('Seen in Cardiac rehab',[verb([lexmatch([seen]),inputmatch(['Seen']),tag(verb),tokens([seen])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([cardiac]),inputmatch(['Cardiac']),tag(adj),tokens([cardiac])]),mod([lexmatch([rehab]),inputmatch([rehab]),tag(noun),tokens([rehab])])],3/21,[]).
candidates(6,2,0,4,[]).
mappings([map(-733,[ev(-770,'C0205397','Seen',seen,[seen],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','SNMI','SNOMEDCT_US'],[3/4],0,0),ev(-770,'C1522601','Cardiac','Cardiac - anatomy qualifier',[cardiac],[spco],[[[3,3],[1,1],0]],yes,no,['MTH','NCI','NCI_NCI-GLOSS'],[11/7],0,0),ev(-770,'C0034991','Rehab','Rehabilitation therapy',[rehab],[topp],[[[4,4],[1,1],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[19/5],0,0)])]).
phrase(locally,[adv([lexmatch([locally]),inputmatch([locally]),tag(adv),tokens([locally])])],25/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1517927','Locally','Locally',[locally],[spco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[25/7],0,0)])]).
phrase(last,[verb([lexmatch([last]),inputmatch([last]),tag(verb),tokens([last])])],33/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1517741','Last','Last',[last],[qlco],[[[1,1],[1,1],0]],yes,no,['NCI'],[33/4],0,0)])]).
phrase(week,[head([lexmatch([week]),inputmatch([week]),tag(noun),tokens([week])])],38/4,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0332174','/week','Weekly',[week],[tmco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[38/4],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],43/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('BP 170/80.',[mod([lexmatch([bp]),inputmatch(['BP']),tag(noun),tokens([bp])]),shapes([inputmatch(['170',/,'80']),features([fraction]),tokens(['170','80'])]),punc([inputmatch(['.']),tokens([])])],47/10,[]).
candidates(4,0,0,4,[]).
mappings([map(-802,[ev(-827,'C0037623','BP','Solomon Islands',[bp],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[47/2],0,0),ev(-827,'C3842583','80%','80%',['80'],[fndg],[[[3,3],[1,1],0]],yes,no,['LNC'],[54/2],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"They called us and we increased her HCTZ to 25 mg from 12.5 mg.  ",59/65,[]).
phrase('They',[pron([lexmatch([they]),inputmatch(['They']),tag(pron),tokens([they])])],59/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(called,[verb([lexmatch([called]),inputmatch([called]),tag(verb),tokens([called])])],64/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-966,[ev(-966,'C1947967','Call','Call (Instruction)',[call],[ftcn],[[[1,1],[1,1],1]],yes,no,['MTH','NCI'],[64/6],0,0)])]).
phrase(us,[pron([lexmatch([us]),inputmatch([us]),tag(pron),tokens([us])])],71/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],74/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(we,[pron([lexmatch([we]),inputmatch([we]),tag(pron),tokens([we])])],78/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(increased,[verb([lexmatch([increased]),inputmatch([increased]),tag(verb),tokens([increased])])],81/9,[]).
candidates(8,6,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0442805','Increased','Increase',[increased],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[81/9],0,0)])]).
phrase('her HCTZ to 25 mg',[pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),head([lexmatch([hctz]),inputmatch(['HCTZ']),tag(noun),tokens([hctz])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),shapes([inputmatch(['25']),features([integer]),tokens(['25'])]),mod([lexmatch([mg]),inputmatch([mg]),tag(noun),tokens([mg])])],91/17,[]).
candidates(5,0,0,5,[]).
mappings([map(-686,[ev(-760,'C0020261','HCTZ','Hydrochlorothiazide',[hctz],[orch,phsu],[[[2,2],[1,1],0]],yes,no,['ATC','CHV','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[95/4],0,0),ev(-593,'C2346927','Mg++','Magnesium Cation',[mg],[elii,phsu],[[[5,5],[1,1],0]],no,no,['MTH','MTHSPL','NCI','NCI_CRCH','NCI_FDA','RXNORM'],[106/2],0,0)])]).
phrase('from 12.5 mg.',[prep([lexmatch([from]),inputmatch([from]),tag(prep),tokens([from])]),shapes([inputmatch(['12','.','5']),features([real_number]),tokens(['12','5'])]),head([lexmatch([mg]),inputmatch([mg]),tag(noun),tokens([mg])]),punc([inputmatch(['.']),tokens([])])],109/13,[]).
candidates(4,0,0,4,[]).
mappings([map(-827,[ev(-827,'C2346927','Mg++','Magnesium Cation',[mg],[elii,phsu],[[[3,3],[1,1],0]],yes,no,['MTH','MTHSPL','NCI','NCI_CRCH','NCI_FDA','RXNORM'],[119/2],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"States her BP's were fine there since - 130-140/70-80.",124/54,[]).
phrase('States',[verb([lexmatch([states]),inputmatch(['States']),tag(verb),tokens([states])])],124/6,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1301808','State','Geographic state',[state],[geoa],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[124/6],0,0)])]).
phrase('her BP\'s',[pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),head([lexmatch([bp]),inputmatch(['BP\'s']),tag(noun),tokens([bp])])],131/8,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0037623','BP','Solomon Islands',[bp],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[135/4],0,0)])]).
phrase(were,[aux([lexmatch([were]),inputmatch([were]),tag(aux),tokens([were])])],140/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('fine there since - 130-140/70-80.',[mod([lexmatch([fine]),inputmatch([fine]),tag(adj),tokens([fine])]),adv([lexmatch([there]),inputmatch([there]),tag(adv),tokens([there])]),adv([lexmatch([since]),inputmatch([since]),tag(adv),tokens([since])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['130']),features([integer]),tokens(['130'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['140',/,'70']),features([fraction]),tokens(['140','70'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['80']),features([integer]),tokens(['80'])]),punc([inputmatch(['.']),tokens([])])],145/33,[]).
candidates(4,0,0,4,[]).
mappings([map(-752,[ev(-795,'C0687757',fine,'Legal fine',[fine],[rnlw],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','MTH'],[145/4],0,0),ev(-795,'C3842584','70%','70%',['70'],[fndg],[[[6,6],[1,1],0]],yes,no,['LNC'],[172/2],0,0),ev(-795,'C3842583','80%','80%',['80'],[fndg],[[[7,7],[1,1],0]],yes,no,['LNC'],[175/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Saw Dr Oakley 4/5/67 - she was happy with results of ETT at Clarkfield.  ",3/73,[]).
phrase('Saw Dr Oakley 4/5/67 -',[mod([lexmatch([saw]),inputmatch(['Saw']),tag(noun),tokens([saw])]),mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),mod([lexmatch([oakley]),inputmatch(['Oakley']),tag(noun),tokens([oakley])]),shapes([inputmatch(['4',/,'5']),features([fraction]),tokens(['4','5'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['67']),features([integer]),tokens(['67'])]),punc([inputmatch([-]),tokens([])])],3/22,[]).
candidates(7,0,0,7,[]).
mappings([map(-768,[ev(-799,'C0183089','SAW','saw (device)',[saw],[medd],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','SNOMEDCT_US','SPN'],[3/3],0,0),ev(-839,'C1881023','DR-4','HLA Class II Histocompatibility Antigen, DRB1-4 Beta Chain Protein',[dr,'4'],[aapp,imft],[[[2,2],[1,1],0],[[4,4],[2,2],0]],yes,no,['MTH','NCI'],[7/2,17/1],0,0)])]).
phrase(she,[pron([lexmatch([she]),inputmatch([she]),tag(pron),tokens([she])])],26/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(was,[aux([lexmatch([was]),inputmatch([was]),tag(aux),tokens([was])])],30/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('happy with results of ETT',[head([lexmatch([happy]),inputmatch([happy]),tag(adj),tokens([happy])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([results]),inputmatch([results]),tag(noun),tokens([results])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([ett]),inputmatch(['ETT']),tag(noun),tokens([ett])])],34/25,[]).
candidates(4,0,0,4,[]).
mappings([map(-669,[ev(-760,'C0018592','Happy','Happiness',[happy],[menp],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[34/5],0,0),ev(-560,'C2825142','Result','Experimental Result',[result],[fndg],[[[3,3],[1,1],1]],no,no,['MTH','NCI','NLMSubSyn'],[45/7],0,0)])]).
phrase('at Clarkfield.',[prep([lexmatch([at]),inputmatch([at]),tag(prep),tokens([at])]),head([inputmatch(['Clarkfield']),tag(noun),tokens([clarkfield])]),punc([inputmatch(['.']),tokens([])])],60/14,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.2',"To f/u 7/67.  ",76/14,[]).
phrase('To f/u 7/67.',[prep([lexmatch([to]),inputmatch(['To']),tag(prep),tokens([to])]),mod([lexmatch([f]),inputmatch([f,/]),tag(noun),tokens([f])]),mod([lexmatch([u]),inputmatch([u]),tag(noun),tokens([u])]),shapes([inputmatch(['7',/,'67']),features([fraction]),tokens(['7','67'])]),punc([inputmatch(['.']),tokens([])])],76/12,[]).
candidates(1,0,0,1,[]).
mappings([map(-812,[ev(-812,'C0016327','F-','Fluorides',[f],[inch,phsu],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CRCH','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[79/1],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"No CP's since last admit.",90/25,[]).
phrase('No CP\'s',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([cp]),inputmatch(['CP\'s']),tag(noun),tokens([cp])])],90/7,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(since,[conj([lexmatch([since]),inputmatch([since]),tag(conj),tokens([since])])],98/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(last,[head([lexmatch([last]),inputmatch([last]),tag(adj),tokens([last])])],104/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1517741','Last','Last',[last],[qlco],[[[1,1],[1,1],0]],yes,no,['NCI'],[104/4],0,0)])]).
phrase('admit.',[verb([lexmatch([admit]),inputmatch([admit]),tag(verb),tokens([admit])]),punc([inputmatch(['.']),tokens([])])],109/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0184666','Admit','Hospital admission',[admit],[hlca],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[109/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([negation(nega,no,[39/2],['C1262477':'wt loss'],[42/7])]).
utterance('00000000.tx.1',"Back to work and starting to walk.  ",3/36,[]).
phrase('Back to work',[head([lexmatch(['back to work']),inputmatch(['Back',to,work]),tag(adj),tokens([back,to,work])])],3/12,[]).
candidates(6,0,0,6,[]).
mappings([map(-1000,[ev(-1000,'C0425105','Back-to-Work','Return to Work',[back,to,work],[fndg],[[[1,1],[1,1],0],[[2,2],[2,2],0],[[3,3],[3,3],0]],yes,no,['CHV','MSH','NLMSubSyn'],[3/12],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],16/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(starting,[head([lexmatch([starting]),inputmatch([starting]),tag(noun),tokens([starting])])],20/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-966,[ev(-966,'C0439659','Start','Beginning',[start],[tmco],[[[1,1],[1,1],1]],yes,no,['CHV','LCH','LNC','MTH','NCI','SNOMEDCT_US'],[20/8],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],29/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[29/2],0,0)])]).
phrase('walk.',[verb([lexmatch([walk]),inputmatch([walk]),tag(verb),tokens([walk])]),punc([inputmatch(['.']),tokens([])])],32/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0080331','Walk','Walking (activity)',[walk],[dora],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','ICF','ICF-CY','LCH_NW','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[32/4],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"No wt loss and discouraged by this, but just starting to exercise.",39/66,[]).
phrase('No wt loss',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),mod([lexmatch([wt]),inputmatch([wt]),tag(noun),tokens([wt])]),head([lexmatch([loss]),inputmatch([loss]),tag(noun),tokens([loss])])],39/10,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1262477','wt loss','Weight decreased',[wt,loss],[fndg],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','COSTAR','CSP','CST','DXP','HPO','ICD9CM','ICPC','LCH_NW','LNC','MSH','MTH','NCI','NCI_CTCAE','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[42/7],0,1)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],50/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('discouraged by this,',[verb([lexmatch([discouraged]),inputmatch([discouraged]),tag(verb),tokens([discouraged])]),prep([lexmatch([by]),inputmatch([by]),tag(prep),tokens([by])]),det([lexmatch([this]),inputmatch([this]),tag(det),tokens([this])]),punc([inputmatch([',']),tokens([])])],54/20,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(but,[conj([lexmatch([but]),inputmatch([but]),tag(conj),tokens([but])])],75/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(just,[adv([lexmatch([just]),inputmatch([just]),tag(adv),tokens([just])])],79/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(starting,[verb([lexmatch([starting]),inputmatch([starting]),tag(verb),tokens([starting])])],84/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-966,[ev(-966,'C0439659','Start','Beginning',[start],[tmco],[[[1,1],[1,1],1]],yes,no,['CHV','LCH','LNC','MTH','NCI','SNOMEDCT_US'],[84/8],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],93/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[93/2],0,0)])]).
phrase('exercise.',[verb([lexmatch([exercise]),inputmatch([exercise]),tag(verb),tokens([exercise])]),punc([inputmatch(['.']),tokens([])])],96/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1522704','Exercise','Exercise Pain Management',[exercise],[topp],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[96/8],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"No smoking for 3 months now!",3/28,[]).
phrase('No smoking for 3 months now!',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([smoking]),inputmatch([smoking]),tag(noun),tokens([smoking])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),mod([lexmatch([months]),inputmatch([months]),tag(noun),tokens([months])]),adv([lexmatch([now]),inputmatch([now]),tag(adv),tokens([now])]),punc([inputmatch([!]),tokens([])])],3/28,[]).
candidates(12,2,0,10,[]).
mappings([map(-691,[ev(-586,'C0028128','NO','Nitric Oxide',[no],[bacs,inch,phsu],[[[1,1],[1,1],0]],no,no,['AOD','ATC','CHV','CSP','LCH_NW','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[3/2],0,0),ev(-753,'C0453996','Smoking','Tobacco smoking behavior',[smoking],[inbe],[[[2,2],[1,1],0]],yes,no,['CHV','CSP','DXP','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[6/7],0,0),ev(-586,'C0439231','MONTHS',month,[months],[tmco],[[[5,5],[1,1],0]],no,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[20/6],0,0),ev(-586,'C1948052','Now','Now (temporal qualifier)',[now],[tmco],[[[6,6],[1,1],0]],no,no,['MTH','NCI'],[27/3],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Still with hotflashes, wakes her up at night.",3/45,[]).
phrase('Still with hotflashes,',[adv([lexmatch([still]),inputmatch(['Still']),tag(adv),tokens([still])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([inputmatch([hotflashes]),tag(noun),tokens([hotflashes])]),punc([inputmatch([',']),tokens([])])],3/22,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(wakes,[verb([lexmatch([wakes]),inputmatch([wakes]),tag(verb),tokens([wakes])])],26/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0585034','WAKE','On waking-temporal period',[wake],[tmco],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V3.0','MTH','SNOMEDCT_US'],[26/5],0,0)])]).
phrase('her up',[pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),prep([lexmatch([up]),inputmatch([up]),tag(prep),tokens([up])])],32/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('at night.',[prep([lexmatch([at]),inputmatch([at]),tag(prep),tokens([at])]),head([lexmatch([night]),inputmatch([night]),tag(noun),tokens([night])]),punc([inputmatch(['.']),tokens([])])],39/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0240526','Night','Night time',[night],[tmco],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','DXP','MTH','NCI','SNMI','SNOMEDCT_US'],[42/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Problems",0/8,[]).
phrase('Problems',[head([lexmatch([problems]),inputmatch(['Problems']),tag(noun),tokens([problems])])],0/8,[]).
candidates(3,2,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1546466','Problems','Problems - What subject filter',[problems],[idcn],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH'],[0/8],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"FH breast cancer   37 yo s",6/26,[]).
phrase('FH breast cancer   37 yo s',[mod([lexmatch([fh]),inputmatch(['FH']),tag(noun),tokens([fh])]),mod([lexmatch(['breast cancer']),inputmatch([breast,cancer]),tag(noun),tokens([breast,cancer])]),shapes([inputmatch(['37']),features([integer]),tokens(['37'])]),mod([lexmatch([yo]),inputmatch([yo]),tag(noun),tokens([yo])]),head([lexmatch([s]),inputmatch([s]),tag(noun),tokens([s])])],6/26,[]).
candidates(15,7,0,8,[]).
mappings([map(-601,[ev(-660,'C0006142','-- Breast Cancer','Malignant neoplasm of breast',[breast,cancer],[neop],[[[2,3],[1,2],0]],no,no,['AOD','CCS','CHV','CSP','ICD10CM','ICPC','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NLMSubSyn','OMIM','PDQ','SNOMEDCT_US'],[9/13],0,0),ev(-632,'C1413296','Yo','CDR2 gene',[yo],[gngm],[[[5,5],[1,1],0]],no,no,['HGNC','MTH','OMIM'],[28/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"FH myocardial infarction   mother died 66 yo",6/44,[]).
phrase('FH myocardial infarction   mother',[mod([lexmatch([fh]),inputmatch(['FH']),tag(noun),tokens([fh])]),mod([lexmatch(['myocardial infarction']),inputmatch([myocardial,infarction]),tag(noun),tokens([myocardial,infarction])]),head([lexmatch([mother]),inputmatch([mother]),tag(noun),tokens([mother])])],6/33,[]).
candidates(11,3,0,8,[]).
mappings([map(-824,[ev(-694,'C2926063','Myocardial infarction','Myocardial infarction:Finding:Point in time:^Patient:Ordinal',[myocardial,infarction],[clna],[[[2,3],[1,2],0]],no,no,['LNC','MTH','NLMSubSyn'],[9/21],0,0),ev(-812,'C0026591','Mother','Mother (person)',[mother],[famg],[[[4,4],[1,1],0]],yes,no,['AOD','CHV','CSP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[33/6],0,0)])]).
phrase(died,[verb([lexmatch([died]),inputmatch([died]),tag(verb),tokens([died])])],40/4,[]).
candidates(8,5,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1546956','Died','Patient Outcome - Died',[died],[fndg],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH','NLMSubSyn','SNOMEDCT_US'],[40/4],0,0)])]).
phrase('66 yo',[shapes([inputmatch(['66']),features([integer]),tokens(['66'])]),head([lexmatch([yo]),inputmatch([yo]),tag(noun),tokens([yo])])],45/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C1413296','Yo','CDR2 gene',[yo],[gngm],[[[2,2],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[48/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Hypertension",6/12,[]).
phrase('Hypertension',[head([lexmatch([hypertension]),inputmatch(['Hypertension']),tag(noun),tokens([hypertension])])],6/12,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1963138','Hypertension','Hypertension Adverse Event',[hypertension],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CTCAE'],[6/12],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Uterine fibroids   u/s 2062",6/27,[]).
phrase('Uterine fibroids   u/s 2062',[mod([lexmatch(['uterine fibroids']),inputmatch(['Uterine',fibroids]),tag(noun),tokens([uterine,fibroids])]),mod([lexmatch(['u/s']),inputmatch([u,/,s]),tag(noun),tokens([u,s])]),shapes([inputmatch(['2062']),features([integer]),tokens(['2062'])])],6/27,[]).
candidates(6,1,0,5,[]).
mappings([map(-826,[ev(-840,'C0042133','Uterine Fibroids','Uterine Fibroids',[uterine,fibroids],[neop],[[[1,2],[1,2],0]],yes,no,['CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','LCH_NW','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','OMIM','PDQ','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[6/16],0,0),ev(-840,'C0041703','U S','United States',[u,s],[geoa],[[[3,3],[1,1],0],[[4,4],[2,2],0]],yes,no,['AOD','CHV','CSP','HL7V3.0','LCH','LNC','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[25/1,26/1],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Smoking",6/7,[]).
phrase('Smoking',[head([lexmatch([smoking]),inputmatch(['Smoking']),tag(noun),tokens([smoking])])],6/7,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0453996','Smoking','Tobacco smoking behavior',[smoking],[inbe],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','DXP','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[6/7],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"hyperlipidemia   CRF mild chol, cigs, HTN, Fhx and known hx CAD in pt.",6/70,[]).
phrase('hyperlipidemia   CRF mild chol,',[mod([lexmatch([hyperlipidemia]),inputmatch([hyperlipidemia]),tag(noun),tokens([hyperlipidemia])]),mod([lexmatch([crf]),inputmatch(['CRF']),tag(noun),tokens([crf])]),mod([lexmatch([mild]),inputmatch([mild]),tag(adj),tokens([mild])]),head([lexmatch([chol]),inputmatch([chol]),tag(noun),tokens([chol])]),punc([inputmatch([',']),tokens([])])],6/31,[]).
candidates(4,0,0,4,[]).
mappings([map(-775,[ev(-645,'C0020473','HYPERLIPIDEMIA','Hyperlipidemia',[hyperlipidemia],[dsyn],[[[1,1],[1,1],0]],no,no,['AOD','CHV','COSTAR','CSP','CST','DXP','ICD10CM','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NDFRT','OMIM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[6/14],0,0),ev(-645,'C2945599','MILD','Mild (qualifier value)',[mild],[qlco],[[[3,3],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[27/4],0,0),ev(-812,'C0201950','CHOL','Cholesterol measurement test',[chol],[lbpr],[[[4,4],[1,1],0]],yes,no,['AOD','CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[32/4],0,0)])]).
phrase('cigs,',[head([lexmatch([cigs]),inputmatch([cigs]),tag(noun),tokens([cigs])]),punc([inputmatch([',']),tokens([])])],38/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('HTN,',[head([lexmatch([htn]),inputmatch(['HTN']),tag(noun),tokens([htn])]),punc([inputmatch([',']),tokens([])])],44/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0020538','HTN','Hypertensive disease',[htn],[dsyn],[[[1,1],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[44/3],0,0)])]).
phrase('Fhx',[head([lexmatch([fhx]),inputmatch(['Fhx']),tag(noun),tokens([fhx])])],49/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1428412','FHX','FOXJ2 gene',[fhx],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH'],[49/3],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],53/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('known hx CAD in pt.',[mod([lexmatch([known]),inputmatch([known]),tag(adj),tokens([known])]),mod([lexmatch([hx]),inputmatch([hx]),tag(noun),tokens([hx])]),head([lexmatch([cad]),inputmatch(['CAD']),tag(noun),tokens([cad])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([pt]),inputmatch([pt]),tag(noun),tokens([pt])]),punc([inputmatch(['.']),tokens([])])],57/19,[]).
candidates(7,0,0,7,[]).
mappings([map(-761,[ev(-797,'C3275096','KNOWN CAD','Known Coronary Artery Disease',[known,cad],[qnco],[[[1,1],[1,1],0],[[3,3],[2,2],0]],yes,no,['NCI','NCI_CDISC','NLMSubSyn'],[57/5,66/3],0,0),ev(-593,'C0262926','Hx','Medical History',[hx],[fndg],[[[2,2],[1,1],0]],no,no,['AIR','AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','NCI_NICHD','NLMSubSyn','SNOMEDCT_US'],[63/2],0,0),ev(-593,'C0699718','PT','Physical therapy (field)',[pt],[bmod],[[[5,5],[1,1],0]],no,no,['CHV','LNC','MTH','NLMSubSyn'],[73/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"borderline diabetes mellitus   4/63 125 , follow hgbaic",6/55,[]).
phrase('borderline diabetes mellitus   4/63 125 ,',[mod([lexmatch([borderline]),inputmatch([borderline]),tag(adj),tokens([borderline])]),mod([lexmatch(['diabetes mellitus']),inputmatch([diabetes,mellitus]),tag(noun),tokens([diabetes,mellitus])]),shapes([inputmatch(['4',/,'63']),features([fraction]),tokens(['4','63'])]),shapes([inputmatch(['125']),features([integer]),tokens(['125'])]),punc([inputmatch([',']),tokens([])])],6/41,[]).
candidates(7,1,0,6,[]).
mappings([map(-861,[ev(-861,'C0856873','Borderline Diabetes Mellitus','borderline diabetes',[borderline,diabetes,mellitus],[dsyn],[[[1,1],[1,1],0],[[2,3],[2,3],0]],yes,no,['CHV','NLMSubSyn'],[6/28],0,0)])]).
phrase(follow,[verb([lexmatch([follow]),inputmatch([follow]),tag(verb),tokens([follow])])],48/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1719822','Follow','Follow',[follow],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','SNOMEDCT_US'],[48/6],0,0)])]).
phrase(hgbaic,[head([inputmatch([hgbaic]),tag(noun),tokens([hgbaic])])],55/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"VPB   2065 - ETT showed freq PVC",6/32,[]).
phrase('VPB   2065 - ETT',[mod([lexmatch([vpb]),inputmatch(['VPB']),tag(noun),tokens([vpb])]),shapes([inputmatch(['2065']),features([integer]),tokens(['2065'])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([ett]),inputmatch(['ETT']),tag(noun),tokens([ett])])],6/16,[]).
candidates(2,0,0,2,[]).
mappings([map(-660,[ev(-660,'C0279462','VPB','bleomycin/procarbazine/vinblastine',[vpb],[topp],[[[1,1],[1,1],0]],no,no,['MTH','NCI','PDQ'],[6/3],0,0)])]).
phrase(showed,[verb([lexmatch([showed]),inputmatch([showed]),tag(verb),tokens([showed])])],23/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-966,[ev(-966,'C1547282','Show','Show',[show],[anim],[[[1,1],[1,1],1]],yes,no,['HL7V2.5','HL7V3.0'],[23/6],0,0)])]).
phrase('freq PVC',[mod([inputmatch([freq]),tag(noun),tokens([freq])]),head([lexmatch([pvc]),inputmatch(['PVC']),tag(noun),tokens([pvc])])],30/8,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-694,'C1414814','FREQ','NCS1 gene',[freq],[gngm],[[[1,1],[1,1],0]],no,no,['HGNC','MTH','OMIM'],[30/4],0,0),ev(-861,'C0151636','PVC\'S','Premature ventricular contractions',[pvc],[patf],[[[2,2],[1,1],0]],yes,no,['CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LNC','MSH','MTH','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[35/3],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"coronary artery disease   s/p ant SEMI + stent LAD 2/67, Dr Oakley",6/66,[]).
phrase('coronary artery disease   s/p ant SEMI + stent LAD 2/67,',[head([lexmatch(['coronary artery disease']),inputmatch([coronary,artery,disease]),tag(noun),tokens([coronary,artery,disease])]),prep([lexmatch(['s/p']),inputmatch([s,/,p]),tag(prep),tokens([s,p])]),mod([lexmatch([ant]),inputmatch([ant]),tag(noun),tokens([ant])]),mod([lexmatch([semi]),inputmatch(['SEMI']),tag(noun),tokens([semi])]),punc([inputmatch([+]),tokens([])]),mod([lexmatch([stent]),inputmatch([stent]),tag(noun),tokens([stent])]),mod([lexmatch([lad]),inputmatch(['LAD']),tag(noun),tokens([lad])]),shapes([inputmatch(['2',/,'67']),features([fraction]),tokens(['2','67'])]),punc([inputmatch([',']),tokens([])])],6/56,[]).
candidates(26,6,0,20,[]).
mappings([map(-683,[ev(-775,'C0010054','coronary artery disease','Coronary Arteriosclerosis',[coronary,artery,disease],[dsyn],[[[1,3],[1,3],0]],yes,no,['CCS','CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NLMSubSyn','OMIM','QMR','SNM','SNMI','SNOMEDCT_US'],[6/23],0,0),ev(-571,'C0003455','Ant','Ants',[ant],[euka],[[[6,6],[1,1],0]],no,no,['CHV','CSP','LCH','LCH_NW','MSH','MTH','NCBI','SNM','SNMI','SNOMEDCT_US'],[36/3],0,0),ev(-571,'C0038257','Stent','Stent, device',[stent],[medd],[[[8,8],[1,1],0]],no,no,['CHV','CSP','MSH','MTH','SNMI','SNOMEDCT_US'],[47/5],0,0)]),map(-683,[ev(-772,'C0687568','Coronary artery stent','Coronary artery stent',[coronary,artery,stent],[medd],[[[1,2],[1,2],0],[[8,8],[3,3],0]],yes,no,['CHV','NLMSubSyn','SNOMEDCT_US','SPN'],[6/15,47/5],0,0),ev(-738,'C0012634','Disease','Disease',[disease],[dsyn],[[[3,3],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','SNMI','SNOMEDCT_US'],[22/7],0,0),ev(-571,'C0003455','Ant','Ants',[ant],[euka],[[[6,6],[1,1],0]],no,no,['CHV','CSP','LCH','LCH_NW','MSH','MTH','NCBI','SNM','SNMI','SNOMEDCT_US'],[36/3],0,0)])]).
phrase('Dr Oakley',[mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),head([lexmatch([oakley]),inputmatch(['Oakley']),tag(noun),tokens([oakley])])],63/9,[]).
candidates(5,0,0,5,[]).
mappings([map(-694,[ev(-694,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[1,1],[1,1],0]],no,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[63/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"thyroid nodule   2065, hot, follow TSH.",6/39,[]).
phrase('thyroid nodule   2065,',[mod([lexmatch(['thyroid nodule']),inputmatch([thyroid,nodule]),tag(noun),tokens([thyroid,nodule])]),shapes([inputmatch(['2065']),features([integer]),tokens(['2065'])]),punc([inputmatch([',']),tokens([])])],6/22,[]).
candidates(16,11,0,5,[]).
mappings([map(-901,[ev(-901,'C0040137','THYROID NODULE','Thyroid Nodule',[thyroid,nodule],[neop],[[[1,2],[1,2],0]],yes,no,['CHV','COSTAR','DXP','MSH','MTH','MTHICD9','NCI','NDFRT','SNM','SNMI','SNOMEDCT_US'],[6/14],0,0)])]).
phrase('hot,',[head([lexmatch([hot]),inputmatch([hot]),tag(adj),tokens([hot])]),punc([inputmatch([',']),tokens([])])],29/4,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0444519','Hot','Hot sensation quality',[hot],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NLMSubSyn','SNOMEDCT_US'],[29/3],0,0)])]).
phrase(follow,[verb([lexmatch([follow]),inputmatch([follow]),tag(verb),tokens([follow])])],34/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1719822','Follow','Follow',[follow],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','SNOMEDCT_US'],[34/6],0,0)])]).
phrase('TSH.',[head([lexmatch([tsh]),inputmatch(['TSH']),tag(noun),tokens([tsh])]),punc([inputmatch(['.']),tokens([])])],41/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Medications",0/11,[]).
phrase('Medications',[head([lexmatch([medications]),inputmatch(['Medications']),tag(noun),tokens([medications])])],0/11,[]).
candidates(4,1,0,3,[]).
mappings([map(-1000,[ev(-1000,'C2598133','Medications','Medications:-:Point in time:^Patient:-',[medications],[clna],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[0/11],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"NORVASC (AMLODIPINE)     5MG  1 Tablet(s) PO QD",6/47,[]).
phrase('NORVASC',[head([lexmatch([norvasc]),inputmatch(['NORVASC']),tag(noun),tokens([norvasc])])],6/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0162712','Norvasc','Norvasc',[norvasc],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','MSH','MTH','RXNORM'],[6/7],0,0)])]).
phrase('(AMLODIPINE',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([amlodipine]),inputmatch(['AMLODIPINE']),tag(noun),tokens([amlodipine])])],14/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0051696','AMLODIPINE','Amlodipine',[amlodipine],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[15/10],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],25/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('5MG  1 Tablet',[mod([inputmatch(['5MG']),tag(noun),tokens(['5mg'])]),shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],31/13,[]).
candidates(2,0,0,2,[]).
mappings([map(-827,[ev(-827,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[3,3],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[38/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],44/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],45/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],48/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[48/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[51/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"PLAVIX (CLOPIDOGREL)   75 MG     PO QD",6/38,[]).
phrase('PLAVIX',[head([lexmatch([plavix]),inputmatch(['PLAVIX']),tag(noun),tokens([plavix])])],6/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0633084','Plavix','Plavix',[plavix],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','NCI','PDQ','RXNORM'],[6/6],0,0)])]).
phrase('(CLOPIDOGREL',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([clopidogrel]),inputmatch(['CLOPIDOGREL']),tag(noun),tokens([clopidogrel])])],13/12,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0070166','CLOPIDOGREL',clopidogrel,[clopidogrel],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LNC','MSH','MTHSPL','NCI','NCI_FDA','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[14/11],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],25/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('75 MG     PO QD',[shapes([inputmatch(['75']),features([integer]),tokens(['75'])]),mod([lexmatch([mg]),inputmatch(['MG']),tag(noun),tokens([mg])]),mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],29/15,[]).
candidates(7,0,0,7,[]).
mappings([map(-775,[ev(-645,'C2346927','Mg++','Magnesium Cation',[mg],[elii,phsu],[[[2,2],[1,1],0]],no,no,['MTH','MTHSPL','NCI','NCI_CRCH','NCI_FDA','RXNORM'],[32/2],0,0),ev(-645,'C0442027','PO','Oral',[po],[spco],[[[3,3],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[39/2],0,0),ev(-812,'C0332173','QD','Daily',[qd],[tmco],[[[4,4],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[42/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"ATENOLOL     50MG  1 Tablet(s) PO QD",6/36,[]).
phrase('ATENOLOL     50MG  1 Tablet',[mod([lexmatch([atenolol]),inputmatch(['ATENOLOL']),tag(noun),tokens([atenolol])]),mod([inputmatch(['50MG']),tag(noun),tokens(['50mg'])]),shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],6/27,[]).
candidates(4,0,0,4,[]).
mappings([map(-923,[ev(-923,'C0687940','Atenolol 50mg tablet','Atenolol 50 MG Oral Tablet',[atenolol,'50mg',tablet],[clnd],[[[1,1],[1,1],0],[[2,2],[2,2],0],[[4,4],[3,3],0]],yes,no,['MTHSPL','NDFRT','RXNORM','SNOMEDCT_US','VANDF'],[6/8,19/4,27/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],33/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],34/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],37/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[37/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[40/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"ASA (ACETYLSALICYLIC ACID)     325MG  1 Tablet(s) PO QD",6/55,[]).
phrase('ASA',[head([lexmatch([asa]),inputmatch(['ASA']),tag(noun),tokens([asa])])],6/3,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0004057','ASA','Aspirin',[asa],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','MSH','MTH','MTHSPL','NCI','NCI_DCP','NCI_DTP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[6/3],0,0)])]).
phrase('(ACETYLSALICYLIC ACID',[punc([inputmatch(['(']),tokens([])]),head([lexmatch(['acetylsalicylic acid']),inputmatch(['ACETYLSALICYLIC','ACID']),tag(noun),tokens([acetylsalicylic,acid])])],10/21,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0004057','Acetylsalicylic Acid','Aspirin',[acetylsalicylic,acid],[orch,phsu],[[[1,2],[1,2],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','MSH','MTH','MTHSPL','NCI','NCI_DCP','NCI_DTP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[11/20],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],31/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('325MG  1 Tablet',[mod([inputmatch(['325MG']),tag(noun),tokens(['325mg'])]),shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],37/15,[]).
candidates(2,0,0,2,[]).
mappings([map(-827,[ev(-827,'C0039225','TABLET','Tablet Dosage Form',[tablet],[bodm],[[[3,3],[1,1],0]],yes,no,['CHV','HL7V3.0','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NDFRT','RXNORM','SNMI','SNOMEDCT_US','VANDF'],[46/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],52/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],53/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],56/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[56/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[59/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"ZESTRIL (LISINOPRIL)     40MG  1 Tablet(s) PO QD",6/48,[]).
phrase('ZESTRIL',[head([lexmatch([zestril]),inputmatch(['ZESTRIL']),tag(noun),tokens([zestril])])],6/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0678140','Zestril','Zestril',[zestril],[aapp,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','NCI','NCI_NCI-GLOSS','RXNORM'],[6/7],0,0)])]).
phrase('(LISINOPRIL',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([lisinopril]),inputmatch(['LISINOPRIL']),tag(noun),tokens([lisinopril])])],14/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0065374','LISINOPRIL','Lisinopril',[lisinopril],[aapp,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LNC','MSH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[15/10],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],25/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('40MG  1 Tablet',[mod([inputmatch(['40MG']),tag(noun),tokens(['40mg'])]),shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],31/14,[]).
candidates(2,0,0,2,[]).
mappings([map(-827,[ev(-827,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[3,3],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[39/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],45/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],46/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],49/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[49/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[52/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"LIPITOR (ATORVASTATIN)     10MG  1 Tablet(s) PO QD",6/50,[]).
phrase('LIPITOR',[head([lexmatch([lipitor]),inputmatch(['LIPITOR']),tag(noun),tokens([lipitor])])],6/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0593906','Lipitor','Lipitor',[lipitor],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','MSH','NCI','NCI_NCI-GLOSS','PDQ','RXNORM'],[6/7],0,0)])]).
phrase('(ATORVASTATIN',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([atorvastatin]),inputmatch(['ATORVASTATIN']),tag(noun),tokens([atorvastatin])])],14/13,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0286651','ATORVASTATIN',atorvastatin,[atorvastatin],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[15/12],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],27/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('10MG  1 Tablet',[mod([inputmatch(['10MG']),tag(noun),tokens(['10mg'])]),shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],33/14,[]).
candidates(2,0,0,2,[]).
mappings([map(-827,[ev(-827,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[3,3],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[41/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],47/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],48/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],51/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[51/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[54/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"HCTZ (HYDROCHLOROTHIAZIDE)     25MG  1 Tablet(s) PO QD",6/54,[]).
phrase('HCTZ',[head([lexmatch([hctz]),inputmatch(['HCTZ']),tag(noun),tokens([hctz])])],6/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0020261','HCTZ','Hydrochlorothiazide',[hctz],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[6/4],0,0)])]).
phrase('(HYDROCHLOROTHIAZIDE',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([hydrochlorothiazide]),inputmatch(['HYDROCHLOROTHIAZIDE']),tag(noun),tokens([hydrochlorothiazide])])],11/20,[]).
candidates(4,3,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0020261','HYDROCHLOROTHIAZIDE','Hydrochlorothiazide',[hydrochlorothiazide],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[12/19],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],31/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('25MG  1 Tablet',[mod([inputmatch(['25MG']),tag(noun),tokens(['25mg'])]),shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],37/14,[]).
candidates(2,0,0,2,[]).
mappings([map(-827,[ev(-827,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[3,3],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[45/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],51/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],52/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],55/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[55/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[58/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"NITROGLYCERIN 1/150 (0.4 MG)   1 TAB     SL x1  PRN prn CP",6/58,[]).
phrase('NITROGLYCERIN 1/150',[mod([lexmatch([nitroglycerin]),inputmatch(['NITROGLYCERIN']),tag(noun),tokens([nitroglycerin])]),shapes([inputmatch(['1',/,'150']),features([fraction]),tokens(['1','150'])])],6/19,[]).
candidates(6,4,0,2,[]).
mappings([map(-827,[ev(-827,'C0017887','NITROGLYCERIN','Nitroglycerin',[nitroglycerin],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[6/13],0,0)])]).
phrase('(0.4 MG',[punc([inputmatch(['(']),tokens([])]),shapes([inputmatch(['0','.','4']),features([real_number]),tokens(['0','4'])]),head([lexmatch([mg]),inputmatch(['MG']),tag(noun),tokens([mg])])],26/7,[]).
candidates(5,0,0,5,[]).
mappings([map(-802,[ev(-660,'C3842591','0%','0%',['0'],[fndg],[[[1,1],[1,1],0]],no,no,['LNC'],[27/1],0,0),ev(-827,'C2346927','Mg++','Magnesium Cation',[mg],[elii,phsu],[[[3,3],[1,1],0]],yes,no,['MTH','MTHSPL','NCI','NCI_CRCH','NCI_FDA','RXNORM'],[31/2],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],33/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('1 TAB     SL x1  PRN prn CP',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),mod([lexmatch([tab]),inputmatch(['TAB']),tag(noun),tokens([tab])]),mod([lexmatch([sl]),inputmatch(['SL']),tag(noun),tokens([sl])]),mod([inputmatch([x1]),tag(noun),tokens([x1])]),mod([lexmatch([prn]),inputmatch(['PRN']),tag(noun),tokens([prn])]),mod([lexmatch([prn]),inputmatch([prn]),tag(noun),tokens([prn])]),head([lexmatch([cp]),inputmatch(['CP']),tag(noun),tokens([cp])])],37/27,[]).
candidates(5,0,0,5,[]).
mappings([map(-540,[ev(-629,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[37/1],0,0),ev(-629,'C1705223','Tab','Tablet Dosing Unit',[tab],[qnco],[[[2,2],[1,1],0]],no,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[39/3],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Allergies",0/9,[]).
phrase('Allergies',[head([lexmatch([allergies]),inputmatch(['Allergies']),tag(noun),tokens([allergies])])],0/9,[]).
candidates(7,6,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0020517','Allergies','Hypersensitivity',[allergies],[patf],[[[1,1],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','GO','HL7V2.5','HL7V3.0','ICD10CM','ICF','ICF-CY','ICPC','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[0/9],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"CECLOR (CEFACLOR)   Rash",6/24,[]).
phrase('CECLOR',[head([lexmatch([ceclor]),inputmatch(['CECLOR']),tag(noun),tokens([ceclor])])],6/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0701133','Ceclor','Ceclor',[ceclor],[antb,orch],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','RXNORM','SNMI'],[6/6],0,0)])]).
phrase('(CEFACLOR',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([cefaclor]),inputmatch(['CEFACLOR']),tag(noun),tokens([cefaclor])])],13/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0007537','CEFACLOR','Cefaclor',[cefaclor],[antb,orch],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[14/8],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],22/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Rash',[head([lexmatch([rash]),inputmatch(['Rash']),tag(noun),tokens([rash])])],26/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0015230','RASH','Exanthema',[rash],[sosy],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CST','HPO','ICD10CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[26/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Vital Signs",0/11,[]).
phrase('Vital Signs',[head([lexmatch(['vital signs']),inputmatch(['Vital','Signs']),tag(noun),tokens([vital,signs])])],0/11,[]).
candidates(8,1,0,7,[]).
mappings([map(-1000,[ev(-1000,'C0150404','Vital signs','Taking vital signs',[vital,signs],[hlca],[[[1,2],[1,2],0]],yes,no,['CHV','MTH','SNM','SNMI','SNOMEDCT_US'],[0/11],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"BLOOD PRESSURE-SITTING   150/70",6/31,[]).
phrase('BLOOD PRESSURE-',[head([lexmatch(['blood pressure']),inputmatch(['BLOOD','PRESSURE']),tag(noun),tokens([blood,pressure])]),punc([inputmatch([-]),tokens([])])],6/15,[]).
candidates(17,8,0,9,[]).
mappings([map(-1000,[ev(-1000,'C1271104','Blood Pressure','Blood pressure finding',[blood,pressure],[fndg],[[[1,2],[1,2],0]],yes,no,['MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[6/14],0,0)])]).
phrase('SITTING',[verb([lexmatch([sitting]),inputmatch(['SITTING']),tag(verb),tokens([sitting])])],21/7,[]).
candidates(3,1,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0277814','SITTING','Sitting position',[sitting],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[21/7],0,0)])]).
phrase('150/70',[shapes([inputmatch(['150',/,'70']),features([fraction]),tokens(['150','70'])])],31/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C3842584','70%','70%',['70'],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC'],[35/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"repeat 145/80   HR 60 reg  WT  202 lbs",9/38,[]).
phrase('repeat 145/80   HR 60 reg  WT  202 lbs',[mod([lexmatch([repeat]),inputmatch([repeat]),tag(noun),tokens([repeat])]),shapes([inputmatch(['145',/,'80']),features([fraction]),tokens(['145','80'])]),mod([lexmatch([hr]),inputmatch(['HR']),tag(noun),tokens([hr])]),shapes([inputmatch(['60']),features([integer]),tokens(['60'])]),mod([lexmatch([reg]),inputmatch([reg]),tag(noun),tokens([reg])]),mod([lexmatch([wt]),inputmatch(['WT']),tag(noun),tokens([wt])]),shapes([inputmatch(['202']),features([integer]),tokens(['202'])]),head([lexmatch([lbs]),inputmatch([lbs]),tag(noun),tokens([lbs])])],9/38,[]).
candidates(10,0,0,10,[]).
mappings([map(-720,[ev(-624,'C0205341','Repeat','Repeat',[repeat],[ftcn],[[[1,1],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[9/6],0,0),ev(-624,'C3842583','80%','80%',['80'],[fndg],[[[3,3],[1,1],0]],no,no,['LNC'],[20/2],0,0),ev(-624,'C3842585','60%','60%',['60'],[fndg],[[[5,5],[1,1],0]],no,no,['LNC'],[28/2],0,0),ev(-624,'C1705631','REG','EXTL3 wt Allele',[reg],[gngm],[[[6,6],[1,1],0]],no,no,['MTH','NCI'],[31/3],0,0),ev(-624,'C2700323','WT','Wild Type Unspecified - zebrafish',[wt],[fish],[[[7,7],[1,1],0]],no,no,['MTH','NCI','NCI_ZFin'],[36/2],0,0),ev(-791,'C0439219',lbs,'Pounds',[lbs],[qnco],[[[9,9],[1,1],0]],yes,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_ICH','NCI_NCPDP','NCI_NICHD','NCI_UCUM','SNOMEDCT_US'],[44/3],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Physical Exam",0/13,[]).
phrase('Physical Exam',[mod([lexmatch([physical]),inputmatch(['Physical']),tag(adj),tokens([physical])]),head([lexmatch([exam]),inputmatch(['Exam']),tag(noun),tokens([exam])])],0/13,[]).
candidates(6,0,0,6,[]).
mappings([map(-1000,[ev(-1000,'C1744699','Physical Exam','Physical Exam Domain',[physical,exam],[inpr],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['MTH','NCI','NCI_CDISC','NLMSubSyn'],[0/13],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([negation(nega,no,[50/2],['C0013604':'EDEMA'],[53/5])]).
utterance('00000000.tx.1',"Looks well.  ",3/13,[]).
phrase('Looks',[verb([lexmatch([looks]),inputmatch(['Looks']),tag(verb),tokens([looks])])],3/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0233426','Looks','Personal appearance',[looks],[orga],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','SNM','SNMI','SNOMEDCT_US'],[3/5],0,0)])]).
phrase('well.',[adv([lexmatch([well]),inputmatch([well]),tag(adv),tokens([well])]),punc([inputmatch(['.']),tokens([])])],9/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C3146287','Well','Well',[well],[mnob],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[9/4],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Lungs clear,  CVS  RRRs1s2, Ext - no edema",16/42,[]).
phrase('Lungs',[head([lexmatch([lungs]),inputmatch(['Lungs']),tag(noun),tokens([lungs])])],16/5,[]).
candidates(7,6,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0024109','LUNGS','Lung',[lungs],[bpoc],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[16/5],0,0)])]).
phrase(clear,[verb([lexmatch([clear]),inputmatch([clear]),tag(verb),tokens([clear])])],22/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1709157','Clear','Negative Surgical Margin',[clear],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[22/5],0,0)])]).
phrase(',',[punc([inputmatch([',']),tokens([])])],27/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('CVS  RRRs1s2,',[mod([lexmatch([cvs]),inputmatch(['CVS']),tag(noun),tokens([cvs])]),head([inputmatch(['RRRs1s2']),tag(noun),tokens([rrrs1s2])]),punc([inputmatch([',']),tokens([])])],30/13,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Ext -',[head([lexmatch([ext]),inputmatch(['Ext']),tag(noun),tokens([ext])]),punc([inputmatch([-]),tokens([])])],44/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no edema',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([edema]),inputmatch([edema]),tag(noun),tokens([edema])])],50/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0013604','EDEMA','Edema',[edema],[patf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET','UWDA'],[53/5],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Assessment and Plan",0/19,[]).
phrase('Assessment',[head([lexmatch([assessment]),inputmatch(['Assessment']),tag(noun),tokens([assessment])])],0/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1516048','Assessment','Assessed',[assessment],[acty],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_NCI-GLOSS'],[0/10],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],11/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Plan',[head([lexmatch([plan]),inputmatch(['Plan']),tag(noun),tokens([plan])])],15/4,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1301732','Plan','Planned',[plan],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNOMEDCT_US'],[15/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"1. ",3/3,[]).
phrase('1.',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),punc([inputmatch(['.']),tokens([])])],3/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[3/1],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"H/M - Pe next appt in few months.  ",6/35,[]).
phrase('H/M - Pe next appt in few months.',[mod([lexmatch([h]),inputmatch(['H',/]),tag(adj),tokens([h])]),mod([lexmatch([m]),inputmatch(['M']),tag(noun),tokens([m])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([pe]),inputmatch(['Pe']),tag(noun),tokens([pe])]),mod([lexmatch([next]),inputmatch([next]),tag(adj),tokens([next])]),head([lexmatch([appt]),inputmatch([appt]),tag(noun),tokens([appt])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([few]),inputmatch([few]),tag(adj),tokens([few])]),mod([lexmatch([months]),inputmatch([months]),tag(noun),tokens([months])]),punc([inputmatch(['.']),tokens([])])],6/33,[]).
candidates(16,2,0,14,[]).
mappings([map(-719,[ev(-604,'C2348952','H/m','Henry per Meter',[h,m],[qnco],[[[1,1],[1,1],0],[[2,2],[2,2],0]],no,no,['NCI'],[6/3],0,0),ev(-578,'C0070939','PE',phosphoethanolamine,[pe],[bacs,orch],[[[3,3],[1,1],0]],no,no,['CHV','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[12/2],0,0),ev(-578,'C0205117',next,'Adjacent',[next],[spco],[[[4,4],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[15/4],0,0),ev(-744,'C0245203','APPT','4-azido-7-phenylpyrazolo-(1,5a)-1,3,5-triazine',[appt],[bacs,orch],[[[5,5],[1,1],0]],yes,no,['MSH','MTH'],[20/4],0,0),ev(-578,'C0439231','MONTHS',month,[months],[tmco],[[[8,8],[1,1],0]],no,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[32/6],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Overdue for mammo - will need to stress this.",41/45,[]).
phrase('Overdue for mammo -',[head([lexmatch([overdue]),inputmatch(['Overdue']),tag(adj),tokens([overdue])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([inputmatch([mammo]),tag(noun),tokens([mammo])]),punc([inputmatch([-]),tokens([])])],41/19,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(will,[modal([lexmatch([will]),inputmatch([will]),tag(modal),tokens([will])])],61/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('need to stress',[verb([lexmatch([need]),inputmatch([need]),tag(verb),tokens([need])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),mod([lexmatch([stress]),inputmatch([stress]),tag(noun),tokens([stress])])],66/14,[]).
candidates(4,1,0,3,[]).
mappings([map(-746,[ev(-790,'C0027552','Need','Needs',[need],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','MTH','NCI','SNOMEDCT_US'],[66/4],0,0),ev(-790,'C0038435','Stress','Stress',[stress],[fndg],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','CSP','LNC','MEDLINEPLUS','MTH','NCI','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US'],[74/6],0,0)])]).
phrase('this.',[det([lexmatch([this]),inputmatch([this]),tag(det),tokens([this])]),punc([inputmatch(['.']),tokens([])])],81/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"2.  ",3/4,[]).
phrase('2.',[shapes([inputmatch(['2']),features([integer]),tokens(['2'])]),punc([inputmatch(['.']),tokens([])])],3/2,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C2981700','2+','2+ Score, WHO',['2'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[3/1],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"CAD - cont with cardiac rehab, exercise, Dr Oakley, but doing well.",7/67,[]).
phrase('CAD - cont with cardiac rehab,',[mod([lexmatch([cad]),inputmatch(['CAD']),tag(noun),tokens([cad])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([cont]),inputmatch([cont]),tag(noun),tokens([cont])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([cardiac]),inputmatch([cardiac]),tag(adj),tokens([cardiac])]),mod([lexmatch([rehab]),inputmatch([rehab]),tag(noun),tokens([rehab])]),punc([inputmatch([',']),tokens([])])],7/30,[]).
candidates(5,0,0,5,[]).
mappings([map(-724,[ev(-593,'C3813548','CAD','CALD1 wt Allele',[cad],[gngm],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[7/3],0,0),ev(-760,'C2826258','CONT','Subject Continuance',[cont],[evnt],[[[2,2],[1,1],0]],yes,no,['NCI','NCI_CDISC'],[13/4],0,0),ev(-593,'C1522601','Cardiac','Cardiac - anatomy qualifier',[cardiac],[spco],[[[4,4],[1,1],0]],no,no,['MTH','NCI','NCI_NCI-GLOSS'],[23/7],0,0),ev(-593,'C0034991','Rehab','Rehabilitation therapy',[rehab],[topp],[[[5,5],[1,1],0]],no,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[31/5],0,0)])]).
phrase('exercise,',[head([lexmatch([exercise]),inputmatch([exercise]),tag(noun),tokens([exercise])]),punc([inputmatch([',']),tokens([])])],38/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1522704','Exercise','Exercise Pain Management',[exercise],[topp],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[38/8],0,0)])]).
phrase('Dr Oakley,',[mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),head([lexmatch([oakley]),inputmatch(['Oakley']),tag(noun),tokens([oakley])]),punc([inputmatch([',']),tokens([])])],48/10,[]).
candidates(5,0,0,5,[]).
mappings([map(-694,[ev(-694,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[1,1],[1,1],0]],no,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[48/2],0,0)])]).
phrase(but,[conj([lexmatch([but]),inputmatch([but]),tag(conj),tokens([but])])],59/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(doing,[aux([lexmatch([doing]),inputmatch([doing]),tag(aux),tokens([doing])])],63/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('well.',[adv([lexmatch([well]),inputmatch([well]),tag(adv),tokens([well])]),punc([inputmatch(['.']),tokens([])])],69/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0205170','Well','Good',[well],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_FDA','SNMI','SNOMEDCT_US'],[69/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"3.  ",3/4,[]).
phrase('3.',[shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),punc([inputmatch(['.']),tokens([])])],3/2,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C0439086','<3','<3 (qualifier value)',['3'],[qnco],[[[1,1],[1,1],0]],yes,no,['MTH','SNOMEDCT_US'],[3/1],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"BP - better on increased HCTZ.  ",7/32,[]).
phrase('BP - better on increased HCTZ.',[mod([lexmatch([bp]),inputmatch(['BP']),tag(noun),tokens([bp])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([better]),inputmatch([better]),tag(adj),tokens([better])]),prep([lexmatch([on]),inputmatch([on]),tag(prep),tokens([on])]),mod([lexmatch([increased]),inputmatch([increased]),tag(adj),tokens([increased])]),mod([lexmatch([hctz]),inputmatch(['HCTZ']),tag(noun),tokens([hctz])]),punc([inputmatch(['.']),tokens([])])],7/30,[]).
candidates(7,0,0,7,[]).
mappings([map(-724,[ev(-593,'C0037623','BP','Solomon Islands',[bp],[geoa],[[[1,1],[1,1],0]],no,no,['AOD','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[7/2],0,0),ev(-760,'C0332272','Better','Better',[better],[qlco],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_FDA','SNMI','SNOMEDCT_US'],[12/6],0,0),ev(-593,'C0205217','Increased','Increased',[increased],[qnco],[[[4,4],[1,1],0]],no,no,['CHV','LNC','MTH','SNMI','SNOMEDCT_US'],[22/9],0,0),ev(-593,'C0020261','HCTZ','Hydrochlorothiazide',[hctz],[orch,phsu],[[[5,5],[1,1],0]],no,no,['ATC','CHV','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[32/4],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Check labs next visit, good K recently and on ACEI.",39/51,[]).
phrase('Check labs next visit,',[mod([lexmatch([check]),inputmatch(['Check']),tag(noun),tokens([check])]),mod([lexmatch([labs]),inputmatch([labs]),tag(noun),tokens([labs])]),mod([lexmatch([next]),inputmatch([next]),tag(adj),tokens([next])]),head([lexmatch([visit]),inputmatch([visit]),tag(noun),tokens([visit])]),punc([inputmatch([',']),tokens([])])],39/22,[]).
candidates(11,2,0,9,[]).
mappings([map(-833,[ev(-645,'C1283174','Check','Checking (action)',[check],[acty],[[[1,1],[1,1],0]],no,no,['LNC','MTH','NCI','SNOMEDCT_US'],[39/5],0,0),ev(-645,'C0587081','Labs','Laboratory test finding',[labs],[fndg],[[[2,2],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_FDA','NCI_NICHD','NLMSubSyn','SNOMEDCT_US'],[45/4],0,0),ev(-645,'C0205117',next,'Adjacent',[next],[spco],[[[3,3],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[50/4],0,0),ev(-812,'C0545082','Visit','Visit',[visit],[bhvr],[[[4,4],[1,1],0]],yes,no,['MTH','NCI','SNM'],[55/5],0,0)])]).
phrase('good K recently',[mod([lexmatch([good]),inputmatch([good]),tag(adj),tokens([good])]),head([lexmatch([k]),inputmatch(['K']),tag(noun),tokens([k])]),adv([lexmatch([recently]),inputmatch([recently]),tag(adv),tokens([recently])])],62/15,[]).
candidates(4,0,0,4,[]).
mappings([map(-851,[ev(-660,'C0205170','Good','Good',[good],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_FDA','SNMI','SNOMEDCT_US'],[62/4],0,0),ev(-827,'C1708601','K\'','K Prime',[k],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI'],[67/1],0,0),ev(-660,'C0332185','Recently','Recent',[recently],[tmco],[[[3,3],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[69/8],0,0)])]).
phrase('and on ACEI.',[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])]),prep([lexmatch([on]),inputmatch([on]),tag(prep),tokens([on])]),mod([lexmatch([acei]),inputmatch(['ACEI']),tag(noun),tokens([acei])]),punc([inputmatch(['.']),tokens([])])],78/12,[]).
candidates(1,0,0,1,[]).
mappings([map(-790,[ev(-790,'C1515981','And','And',[and],[idcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[78/3],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"4.  ",3/4,[]).
phrase('4.',[shapes([inputmatch(['4']),features([integer]),tokens(['4'])]),punc([inputmatch(['.']),tokens([])])],3/2,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3838679','4+','4+ Answer to question',['4'],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[3/1],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Cigs - great!",7/13,[]).
phrase('Cigs - great!',[mod([lexmatch([cigs]),inputmatch(['Cigs']),tag(noun),tokens([cigs])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([great]),inputmatch([great]),tag(adj),tokens([great])]),punc([inputmatch([!]),tokens([])])],7/13,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C1704243','Great','Greater',[great],[qnco],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[14/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"5. ",3/3,[]).
phrase('5.',[shapes([inputmatch(['5']),features([integer]),tokens(['5'])]),punc([inputmatch(['.']),tokens([])])],3/2,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0439084','>5','>5',['5'],[qnco],[[[1,1],[1,1],0]],yes,no,['SNOMEDCT_US'],[3/1],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Hot flashes - doesn't want to try any other meds - will try to put up with it.",6/78,[]).
phrase('Hot flashes -',[head([lexmatch(['hot flashes']),inputmatch(['Hot',flashes]),tag(noun),tokens([hot,flashes])]),punc([inputmatch([-]),tokens([])])],6/13,[]).
candidates(7,1,0,6,[]).
mappings([map(-1000,[ev(-1000,'C0600142','HOT FLASHES','Hot flushes',[hot,flashes],[sosy],[[[1,2],[1,2],0]],yes,no,['CHV','COSTAR','CSP','CST','MEDLINEPLUS','MSH','MTH','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','PDQ','SNM','SNMI','SNOMEDCT_US'],[6/11],0,0)])]).
phrase('doesn\'t',[aux([lexmatch(['doesn\'t']),inputmatch([doesn,'\'',t]),tag(aux),tokens([doesn,t])])],20/7,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(want,[head([lexmatch([want]),inputmatch([want]),tag(noun),tokens([want])])],28/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],33/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0040363','TO','Togo',[to],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LCH','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[33/2],0,0)])]).
phrase(try,[verb([lexmatch([try]),inputmatch([try]),tag(verb),tokens([try])])],36/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('any other meds -',[det([lexmatch([any]),inputmatch([any]),tag(det),tokens([any])]),det([lexmatch([other]),inputmatch([other]),tag(det),tokens([other])]),head([lexmatch([meds]),inputmatch([meds]),tag(noun),tokens([meds])]),punc([inputmatch([-]),tokens([])])],40/16,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3280240','MEDS','MICROCEPHALY, EPILEPSY, AND DIABETES SYNDROME',[meds],[dsyn],[[[1,1],[1,1],0]],yes,no,['OMIM'],[50/4],0,0)])]).
phrase(will,[modal([lexmatch([will]),inputmatch([will]),tag(modal),tokens([will])])],57/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(try,[verb([lexmatch([try]),inputmatch([try]),tag(verb),tokens([try])])],62/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],66/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0040363','TO','Togo',[to],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LCH','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[66/2],0,0)])]).
phrase('put up',[verb([lexmatch([put]),inputmatch([put]),tag(verb),tokens([put])]),prep([lexmatch([up]),inputmatch([up]),tag(prep),tokens([up])])],69/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-833,[ev(-833,'C1882509','Put','put - instruction imperative',[put],[acty],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[69/3],0,0)])]).
phrase('with it.',[prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])]),punc([inputmatch(['.']),tokens([])])],76/8,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"6. ",3/3,[]).
phrase('6.',[shapes([inputmatch(['6']),features([integer]),tokens(['6'])]),punc([inputmatch(['.']),tokens([])])],3/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.2',"Hot thyroid nodule - recheck TSH next visit.",6/44,[]).
phrase('Hot thyroid nodule - recheck TSH next visit.',[mod([lexmatch([hot]),inputmatch(['Hot']),tag(adj),tokens([hot])]),mod([lexmatch(['thyroid nodule']),inputmatch([thyroid,nodule]),tag(noun),tokens([thyroid,nodule])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([recheck]),inputmatch([recheck]),tag(noun),tokens([recheck])]),mod([lexmatch([tsh]),inputmatch(['TSH']),tag(noun),tokens([tsh])]),mod([lexmatch([next]),inputmatch([next]),tag(adj),tokens([next])]),head([lexmatch([visit]),inputmatch([visit]),tag(noun),tokens([visit])]),punc([inputmatch(['.']),tokens([])])],6/44,[]).
candidates(26,11,0,15,[]).
mappings([map(-793,[ev(-679,'C0749472','hot thyroid nodule','thyroid nodule hot',[hot,thyroid,nodule],[fndg],[[[1,1],[1,1],0],[[2,3],[2,3],0]],no,no,['CHV'],[6/18],0,0),ev(-629,'C0205117',next,'Adjacent',[next],[spco],[[[6,6],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[39/4],0,0),ev(-795,'C0545082','Visit','Visit',[visit],[bhvr],[[[7,7],[1,1],0]],yes,no,['MTH','NCI','SNM'],[44/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"7. ",3/3,[]).
phrase('7.',[shapes([inputmatch(['7']),features([integer]),tokens(['7'])]),punc([inputmatch(['.']),tokens([])])],3/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.2',"Borderline glc - ok hgba1c 3/67.",6/32,[]).
phrase('Borderline glc - ok hgba1c 3/67.',[mod([lexmatch([borderline]),inputmatch(['Borderline']),tag(adj),tokens([borderline])]),mod([lexmatch([glc]),inputmatch([glc]),tag(noun),tokens([glc])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([ok]),inputmatch([ok]),tag(noun),tokens([ok])]),mod([lexmatch([hgba1c]),inputmatch([hgba1c]),tag(noun),tokens([hgba1c])]),shapes([inputmatch(['3',/,'67']),features([fraction]),tokens(['3','67'])]),punc([inputmatch(['.']),tokens([])])],6/32,[]).
candidates(2,0,0,2,[]).
mappings([map(-716,[ev(-799,'C0205189','BORDERLINE','Borderline',[borderline],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','HPO','LNC','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[6/10],0,0),ev(-799,'C0008556','GLC','Chromatography, Gas-Liquid',[glc],[lbpr],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','HL7V3.0','MSH','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[17/3],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"8.  ",3/4,[]).
phrase('8.',[shapes([inputmatch(['8']),features([integer]),tokens(['8'])]),punc([inputmatch(['.']),tokens([])])],3/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.2',"Chol - ok, fasting on next visit.",7/33,[]).
phrase('Chol - ok,',[mod([lexmatch([chol]),inputmatch(['Chol']),tag(noun),tokens([chol])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([ok]),inputmatch([ok]),tag(noun),tokens([ok])]),punc([inputmatch([',']),tokens([])])],7/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-694,[ev(-694,'C0201950','CHOL','Cholesterol measurement test',[chol],[lbpr],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[7/4],0,0)])]).
phrase('fasting on next visit.',[verb([lexmatch([fasting]),inputmatch([fasting]),tag(verb),tokens([fasting])]),prep([lexmatch([on]),inputmatch([on]),tag(prep),tokens([on])]),mod([lexmatch([next]),inputmatch([next]),tag(adj),tokens([next])]),mod([lexmatch([visit]),inputmatch([visit]),tag(noun),tokens([visit])]),punc([inputmatch(['.']),tokens([])])],18/22,[]).
candidates(9,2,0,7,[]).
mappings([map(-733,[ev(-770,'C0015663','FASTING','Fasting',[fasting],[fndg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','DXP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[18/7],0,0),ev(-770,'C0205117',next,'Adjacent',[next],[spco],[[[3,3],[1,1],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[29/4],0,0),ev(-770,'C0545082','Visit','Visit',[visit],[bhvr],[[[4,4],[1,1],0]],yes,no,['MTH','NCI','SNM'],[34/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-01.xml outputs/220-01-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-01.xml',outfile-'outputs/220-01-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"]]></TEXT>   <TAGS></TAGS> </root>",0/34,[]).
phrase(']',[punc([inputmatch([']']),tokens([])])],0/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(']',[punc([inputmatch([']']),tokens([])])],1/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(>,[punc([inputmatch([>]),tokens([])])],2/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</TEXT',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([text]),inputmatch(['TEXT']),tag(noun),tokens([text])])],3/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1705606','Text','Text Line',[text],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[5/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],9/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<TAGS',[punc([inputmatch([<]),tokens([])]),head([lexmatch([tags]),inputmatch(['TAGS']),tag(noun),tokens([tags])])],13/5,[]).
candidates(4,3,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1139855',tags,'Tags (device)',[tags],[medd],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[14/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],18/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</TAGS',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([tags]),inputmatch(['TAGS']),tag(noun),tokens([tags])])],19/6,[]).
candidates(4,3,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1139855',tags,'Tags (device)',[tags],[medd],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[21/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],25/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</root',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([root]),inputmatch([root]),tag(noun),tokens([root])])],27/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1318154','Root','Root body part',[root],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH'],[29/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],33/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
