

---------  Citations Results  ----------------

numCitations = 1
begin listing citations:
---------------------------------------------------------------

PMID = 00000000
-------------Utterances-----------------------
00000000.ti.1',"<?xml version=""1.0"" encoding=""UTF-8""?> <root>   <TEXT><![CDATA[",0/63,[]).phrase('<?xml version',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([?]),tokens([])]),mod([lexmatch([xml]),inputmatch([xml]),tag(noun),tokens([xml])]),head([lexmatch([version]),inputmatch([version]),tag(noun),tokens([version])])],0/13,[]).candidates(3,0,0,3,[]).mappings([map(-888,[ev(-694,'C1707981','XML','Extensible Markup Language',[xml],[inpr],[[[1,1],[1,1],0]],no,no,['HL7V3.0','NCI'],[2/3],0,0),ev(-861,'C0333052','Version','Version',[version],[ftcn],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','MTHICD9','NCI','NCI_CDISC'],[6/7],0,0)])]).phrase('="1.0"',[punc([inputmatch([=]),tokens([])]),punc([inputmatch(['"']),tokens([])]),shapes([inputmatch(['1','.','0']),features([real_number]),tokens(['1','0'])]),punc([inputmatch(['"']),tokens([])])],13/6,[]).candidates(4,0,0,4,[]).mappings([map(-888,[ev(-861,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[15/1],0,0),ev(-861,'C3842591','0%','0%',['0'],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC'],[17/1],0,0)])]).phrase(encoding,[verb([lexmatch([encoding]),inputmatch([encoding]),tag(verb),tokens([encoding])])],20/8,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1547699','Encoding','MIME encoding',[encoding],[idcn],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH'],[20/8],0,0)])]).phrase('="UTF-8"?',[punc([inputmatch([=]),tokens([])]),punc([inputmatch(['"']),tokens([])]),mod([lexmatch([utf]),inputmatch(['UTF']),tag(noun),tokens([utf])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['8']),features([integer]),tokens(['8'])]),punc([inputmatch(['"']),tokens([])]),punc([inputmatch([?]),tokens([])])],28/9,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C1555005','UTF-8','UTF-8',[utf,'8'],[inpr],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['HL7V3.0'],[30/5],0,0)])]).phrase(>,[punc([inputmatch([>]),tokens([])])],37/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('<root',[punc([inputmatch([<]),tokens([])]),head([lexmatch([root]),inputmatch([root]),tag(noun),tokens([root])])],39/5,[]).candidates(4,0,0,4,[]).mappings([map(-1000,[ev(-1000,'C1318154','Root','Root body part',[root],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH'],[40/4],0,0)])]).phrase(>,[punc([inputmatch([>]),tokens([])])],44/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('<TEXT',[punc([inputmatch([<]),tokens([])]),head([lexmatch([text]),inputmatch(['TEXT']),tag(noun),tokens([text])])],48/5,[]).candidates(4,0,0,4,[]).mappings([map(-1000,[ev(-1000,'C1705606','Text','Text Line',[text],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[49/4],0,0)])]).phrase(>,[punc([inputmatch([>]),tokens([])])],53/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('<!',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([!]),tokens([])])],54/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('[CDATA',[punc([inputmatch(['[']),tokens([])]),head([inputmatch(['CDATA']),tag(noun),tokens([cdata])])],56/6,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0640049','CDATA','3-chloro-4-dimethylaminothioangelicin',[cdata],[orch],[[[1,1],[1,1],0]],yes,no,['MSH'],[57/5],0,0)])]).phrase('[',[punc([inputmatch(['[']),tokens([])])],62/1,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Record date: 2068-12-05",0/23,[]).phrase('Record date',[mod([lexmatch([record]),inputmatch(['Record']),tag(noun),tokens([record])]),head([lexmatch([date]),inputmatch([date]),tag(noun),tokens([date])])],0/11,[]).candidates(4,0,0,4,[]).mappings([map(-888,[ev(-694,'C0034869','Record','Records',[record],[inpr],[[[1,1],[1,1],0]],no,no,['CHV','HL7V3.0','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA'],[0/6],0,0),ev(-861,'C0011008','DATE','Date in time',[date],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MSH','MTH','NCI','NCI_CareLex','NCI_NICHD','SNOMEDCT_US'],[7/4],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],11/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('2068-12-05',[shapes([inputmatch(['2068']),features([integer]),tokens(['2068'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['12']),features([integer]),tokens(['12'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['05']),features([integer]),tokens(['05'])])],13/10,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Narrative History",0/17,[]).phrase('Narrative History',[mod([lexmatch([narrative]),inputmatch(['Narrative']),tag(adj),tokens([narrative])]),head([lexmatch([history]),inputmatch(['History']),tag(noun),tokens([history])])],0/17,[]).candidates(9,2,0,7,[]).mappings([map(-888,[ev(-694,'C1135957','Narrative','Narration',[narrative],[socb],[[[1,1],[1,1],0]],no,no,['CHV','MSH','MTH','NCI'],[0/9],0,0),ev(-861,'C2004062','History','History of previous events',[history],[fndg],[[[2,2],[1,1],0]],yes,no,['CHV','LCH','MTH','NCI'],[10/7],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Patient presents for uri.  ",1/27,[]).phrase('Patient',[head([lexmatch([patient]),inputmatch(['Patient']),tag(noun),tokens([patient])])],1/7,[]).candidates(4,0,0,4,[]).mappings([map(-1000,[ev(-1000,'C0030705','*^patient','Patients',[patient],[podg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_DICOM','NCI_FDA','SNOMEDCT_US'],[1/7],0,0)])]).phrase('presents for uri.',[verb([lexmatch([presents]),inputmatch([presents]),tag(verb),tokens([presents])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([uri]),inputmatch([uri]),tag(noun),tokens([uri])]),punc([inputmatch(['.']),tokens([])])],9/17,[]).candidates(2,0,0,2,[]).mappings([map(-790,[ev(-790,'C0150312','Present','Present',[present],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[9/8],0,0)])]).'EOU'.utterance('00000000.ti.2',"Walks -in .  Overdue for follow-up by 3 months.",28/47,[]).phrase('Walks -',[head([lexmatch([walks]),inputmatch(['Walks']),tag(noun),tokens([walks])]),punc([inputmatch([-]),tokens([])])],28/7,[]).candidates(2,1,0,1,[]).mappings([map(-1000,[ev(-1000,'C0600108','Walks','Does walk',[walks],[fndg],[[[1,1],[1,1],0]],yes,no,['SNOMEDCT_US'],[28/5],0,0)])]).phrase('in .  Overdue for follow-up',[prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),punc([inputmatch(['.']),tokens([])]),head([lexmatch([overdue]),inputmatch(['Overdue']),tag(adj),tokens([overdue])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch(['follow-up']),inputmatch([follow,-,up]),tag(adj),tokens([follow,up])])],35/27,[]).candidates(8,0,0,8,[]).mappings([map(-579,[ev(-593,'C0150312','In','Present',[in],[qnco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[35/2],0,0),ev(-640,'C1522577','Follow Up','follow-up',[follow,up],[hlca],[[[4,4],[1,1],0],[[5,5],[2,2],0]],no,no,['MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS'],[53/9],0,0)])]).phrase('by 3 months.',[prep([lexmatch([by]),inputmatch([by]),tag(prep),tokens([by])]),shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),head([lexmatch([months]),inputmatch([months]),tag(noun),tokens([months])]),punc([inputmatch(['.']),tokens([])])],63/12,[]).candidates(8,2,0,6,[]).mappings([map(-1000,[ev(-1000,'C1442461','3 Months','3 Months',['3',months],[tmco],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['HL7V2.5','LNC','MTH'],[66/8],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Started last week.   ",0/21,[]).phrase('Started last week.',[mod([lexmatch([started]),inputmatch(['Started']),tag(adj),tokens([started])]),mod([lexmatch([last]),inputmatch([last]),tag(adj),tokens([last])]),head([lexmatch([week]),inputmatch([week]),tag(noun),tokens([week])]),punc([inputmatch(['.']),tokens([])])],0/18,[]).candidates(4,1,0,3,[]).mappings([map(-802,[ev(-660,'C1272689','Started','Started',[started],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','MTH','SNOMEDCT_US'],[0/7],0,0),ev(-827,'C0332174','/week','Weekly',[week],[tmco],[[[3,3],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[13/4],0,0)])]).'EOU'.utterance('00000000.ti.2',"Sinus pressure, post nasal drip , headache , ears blocked.",21/58,[]).phrase('Sinus pressure,',[mod([lexmatch([sinus]),inputmatch(['Sinus']),tag(noun),tokens([sinus])]),head([lexmatch([pressure]),inputmatch([pressure]),tag(noun),tokens([pressure])]),punc([inputmatch([',']),tokens([])])],21/15,[]).candidates(7,0,0,7,[]).mappings([map(-1000,[ev(-1000,'C0848633','sinus pressure','sinus pressure',[sinus,pressure],[sosy],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','NLMSubSyn'],[21/14],0,0)])]).phrase('post nasal drip ,',[head([lexmatch(['post nasal drip']),inputmatch([post,nasal,drip]),tag(noun),tokens([post,nasal,drip])]),punc([inputmatch([',']),tokens([])])],37/17,[]).candidates(6,1,0,5,[]).mappings([map(-1000,[ev(-1000,'C0032781','DRIP, POSTNASAL','Posterior rhinorrhea',[postnasal,drip],[sosy],[[[1,2],[1,1],0],[[3,3],[2,2],0]],yes,no,['CHV','COSTAR','CST','ICD10CM','ICD9CM','MTH','NCI','NCI_CTCAE','NCI_NICHD','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[37/15],0,0)])]).phrase('headache ,',[head([lexmatch([headache]),inputmatch([headache]),tag(noun),tokens([headache])]),punc([inputmatch([',']),tokens([])])],55/10,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0018681','HEAD ACHE','Headache',[head,ache],[sosy],[[[1,1],[1,2],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NCI_FDA','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[55/8],0,0)])]).phrase(ears,[head([lexmatch([ears]),inputmatch([ears]),tag(noun),tokens([ears])])],66/4,[]).candidates(6,4,0,2,[]).mappings([map(-1000,[ev(-1000,'C0521421','EARS','Entire ear',[ears],[bpoc],[[[1,1],[1,1],0]],yes,no,['MTH','NLMSubSyn','SNMI','SNOMEDCT_US'],[66/4],0,0)])]).phrase('blocked.',[verb([lexmatch([blocked]),inputmatch([blocked]),tag(verb),tokens([blocked])]),punc([inputmatch(['.']),tokens([])])],71/8,[]).candidates(13,11,0,2,[]).mappings([map(-1000,[ev(-1000,'C0028778','Blocked','Obstruction',[blocked],[patf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LCH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US'],[71/7],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([negation(nega,no,[0/2],['C0015967':'Fevers'],[3/6])]).utterance('00000000.ti.1',"No fevers.",0/10,[]).phrase('No fevers.',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([fevers]),inputmatch([fevers]),tag(noun),tokens([fevers])]),punc([inputmatch(['.']),tokens([])])],0/10,[]).candidates(2,1,0,1,[]).mappings([map(-1000,[ev(-1000,'C0015967','Fevers','Fever',[fevers],[fndg],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CHV','COSTAR','CSP','CST','DXP','GO','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','QMR','SNM','SNMI','SNOMEDCT_US'],[3/6],0,1)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Slight white nasal cdischarge.",0/30,[]).phrase('Slight white nasal cdischarge.',[mod([lexmatch([slight]),inputmatch(['Slight']),tag(adj),tokens([slight])]),mod([lexmatch([white]),inputmatch([white]),tag(adj),tokens([white])]),mod([lexmatch([nasal]),inputmatch([nasal]),tag(adj),tokens([nasal])]),head([inputmatch([cdischarge]),tag(noun),tokens([cdischarge])]),punc([inputmatch(['.']),tokens([])])],0/30,[]).candidates(6,0,0,6,[]).mappings([map(-608,[ev(-645,'C2945599','Slight','Mild (qualifier value)',[slight],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[0/6],0,0),ev(-645,'C0007457','WHITE','Caucasoid Race',[white],[popg],[[[2,2],[1,1],0]],no,no,['AOD','CHV','CSP','DXP','HL7V3.0','LCH_NW','MSH','MTH','NCI','NCI_CDC','NCI_CDISC','NCI_FDA','NLMSubSyn','SNMI','SNOMEDCT_US'],[7/5],0,0),ev(-645,'C0028429','NASAL','Nose',[nasal],[bpoc],[[[3,3],[1,1],0]],no,no,['AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[13/5],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Taking advil sinus only helps transiently.",0/42,[]).phrase('Taking advil sinus',[mod([lexmatch([taking]),inputmatch(['Taking']),tag(adj),tokens([taking])]),mod([lexmatch([advil]),inputmatch([advil]),tag(noun),tokens([advil])]),head([lexmatch([sinus]),inputmatch([sinus]),tag(noun),tokens([sinus])])],0/18,[]).candidates(6,0,0,6,[]).mappings([map(-840,[ev(-627,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],1]],no,no,['NCI','SNOMEDCT_US'],[0/6],0,0),ev(-660,'C0593507','Advil','Advil',[advil],[orch,phsu],[[[2,2],[1,1],0]],no,no,['CHV','MTH','NCI_NCI-GLOSS','RXNORM'],[7/5],0,0),ev(-827,'C0030471','Sinus','Nasal sinus',[sinus],[bsoj],[[[3,3],[1,1],0]],yes,no,['CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US','UWDA'],[13/5],0,0)])]).phrase(only,[adv([lexmatch([only]),inputmatch([only]),tag(adv),tokens([only])])],19/4,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C0205171','Only','Singular',[only],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[19/4],0,0)])]).phrase(helps,[verb([lexmatch([helps]),inputmatch([helps]),tag(verb),tokens([helps])])],24/5,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1269765','Help','Assisted (qualifier value)',[help],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[24/5],0,0)])]).phrase('transiently.',[adv([lexmatch([transiently]),inputmatch([transiently]),tag(adv),tokens([transiently])]),punc([inputmatch(['.']),tokens([])])],30/12,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([negation(nega,not,[0/3],['C1279889':'Worse'],[22/5])]).utterance('00000000.ti.1',"Not getting better or worse.",0/28,[]).phrase('Not getting better',[adv([lexmatch([not]),inputmatch(['Not']),tag(adv),tokens([not])]),head([lexmatch([getting]),inputmatch([getting]),tag(noun),tokens([getting])]),adv([lexmatch([better]),inputmatch([better]),tag(adv),tokens([better])])],0/18,[]).candidates(5,2,0,3,[]).mappings([map(-730,[ev(-730,'C3841798','Not well','Not well',[not,well],[fndg],[[[1,1],[1,1],0],[[3,3],[2,2],1]],no,no,['LNC'],[0/3,12/6],0,0)])]).phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],19/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('worse.',[head([lexmatch([worse]),inputmatch([worse]),tag(adj),tokens([worse])]),punc([inputmatch(['.']),tokens([])])],22/6,[]).candidates(7,4,0,3,[]).mappings([map(-1000,[ev(-1000,'C1279889','Worse','Deterioration of status',[worse],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','SNOMEDCT_US'],[22/5],0,1)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([negation(nega,no,[0/2],['C0010200':'COUGHING'],[20/8])]).utterance('00000000.ti.1',"No chest symptoms - coughing etc..",0/34,[]).phrase('No chest symptoms -',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),mod([lexmatch([chest]),inputmatch([chest]),tag(noun),tokens([chest])]),head([lexmatch([symptoms]),inputmatch([symptoms]),tag(noun),tokens([symptoms])]),punc([inputmatch([-]),tokens([])])],0/19,[]).candidates(11,7,0,4,[]).mappings([map(-888,[ev(-694,'C1527391','Chest','Anterior thoracic region',[chest],[blor],[[[1,1],[1,1],0]],no,no,['MTH','NLMSubSyn','UWDA'],[3/5],0,0),ev(-861,'C0683368',symptoms,'Symptoms aspect',[symptoms],[ftcn],[[[2,2],[1,1],0]],yes,no,['MSH','MTH'],[9/8],0,0)])]).phrase(coughing,[verb([lexmatch([coughing]),inputmatch([coughing]),tag(verb),tokens([coughing])])],20/8,[]).candidates(2,1,0,1,[]).mappings([map(-1000,[ev(-1000,'C0010200','COUGHING','Coughing',[coughing],[sosy],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','NCI','NCI_CTCAE','NCI_NICHD','NDFRT','OMIM','QMR','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[20/8],0,1)])]).phrase('etc..',[head([lexmatch([etc]),inputmatch([etc]),tag(noun),tokens([etc])]),punc([inputmatch(['.']),tokens([])]),punc([inputmatch(['.']),tokens([])])],29/5,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C1548556','etc.','etc.',[etc],[idcn],[[[1,1],[1,1],0]],yes,no,['HL7V2.5'],[29/3],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Got flu shot already.",0/21,[]).phrase('Got flu',[mod([lexmatch([got]),inputmatch(['Got']),tag(noun),tokens([got])]),head([lexmatch([flu]),inputmatch([flu]),tag(noun),tokens([flu])])],0/7,[]).candidates(3,0,0,3,[]).mappings([map(-861,[ev(-861,'C2348686','FlU','Fluorescence Units',[flu],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI'],[4/3],0,0)])]).phrase(shot,[verb([lexmatch([shot]),inputmatch([shot]),tag(verb),tokens([shot])])],8/4,[]).candidates(6,2,0,4,[]).mappings([map(-1000,[ev(-1000,'C2919062','Shot NOS','Shot (injury)',[shot],[inpo],[[[1,1],[1,1],0]],yes,no,['ICD10CM','MTH'],[8/4],0,0)])]).phrase('already.',[adv([lexmatch([already]),inputmatch([already]),tag(adv),tokens([already])]),punc([inputmatch(['.']),tokens([])])],13/8,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Problems",0/8,[]).phrase('Problems',[head([lexmatch([problems]),inputmatch(['Problems']),tag(noun),tokens([problems])])],0/8,[]).candidates(3,2,0,1,[]).mappings([map(-1000,[ev(-1000,'C1546466','Problems','Problems - What subject filter',[problems],[idcn],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH'],[0/8],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"FH breast cancer : 37 yo s",0/26,[]).phrase('FH breast cancer',[mod([lexmatch([fh]),inputmatch(['FH']),tag(noun),tokens([fh])]),head([lexmatch(['breast cancer']),inputmatch([breast,cancer]),tag(noun),tokens([breast,cancer])])],0/16,[]).candidates(14,7,0,7,[]).mappings([map(-901,[ev(-901,'C0006142','-- Breast Cancer','Malignant neoplasm of breast',[breast,cancer],[neop],[[[2,3],[1,2],0]],yes,no,['AOD','CCS','CHV','CSP','ICD10CM','ICPC','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NLMSubSyn','OMIM','PDQ','SNOMEDCT_US'],[3/13],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],17/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('37 yo s',[shapes([inputmatch(['37']),features([integer]),tokens(['37'])]),mod([lexmatch([yo]),inputmatch([yo]),tag(noun),tokens([yo])]),head([lexmatch([s]),inputmatch([s]),tag(noun),tokens([s])])],19/7,[]).candidates(1,0,0,1,[]).mappings([map(-660,[ev(-660,'C1413296','Yo','CDR2 gene',[yo],[gngm],[[[2,2],[1,1],0]],no,no,['HGNC','MTH','OMIM'],[22/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"FH myocardial infarction : mother died 66 yo",0/44,[]).phrase('FH myocardial infarction',[mod([lexmatch([fh]),inputmatch(['FH']),tag(noun),tokens([fh])]),head([lexmatch(['myocardial infarction']),inputmatch([myocardial,infarction]),tag(noun),tokens([myocardial,infarction])])],0/24,[]).candidates(8,1,0,7,[]).mappings([map(-901,[ev(-901,'C2926063','Myocardial infarction','Myocardial infarction:Finding:Point in time:^Patient:Ordinal',[myocardial,infarction],[clna],[[[2,3],[1,2],0]],yes,no,['LNC','MTH','NLMSubSyn'],[3/21],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],25/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase(mother,[head([lexmatch([mother]),inputmatch([mother]),tag(noun),tokens([mother])])],27/6,[]).candidates(3,2,0,1,[]).mappings([map(-1000,[ev(-1000,'C0026591','Mother','Mother (person)',[mother],[famg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[27/6],0,0)])]).phrase(died,[verb([lexmatch([died]),inputmatch([died]),tag(verb),tokens([died])])],34/4,[]).candidates(8,5,0,3,[]).mappings([map(-1000,[ev(-1000,'C1546956','Died','Patient Outcome - Died',[died],[fndg],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH','NLMSubSyn','SNOMEDCT_US'],[34/4],0,0)])]).phrase('66 yo',[shapes([inputmatch(['66']),features([integer]),tokens(['66'])]),head([lexmatch([yo]),inputmatch([yo]),tag(noun),tokens([yo])])],39/5,[]).candidates(1,0,0,1,[]).mappings([map(-861,[ev(-861,'C1413296','Yo','CDR2 gene',[yo],[gngm],[[[2,2],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[42/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Hypertension",0/12,[]).phrase('Hypertension',[head([lexmatch([hypertension]),inputmatch(['Hypertension']),tag(noun),tokens([hypertension])])],0/12,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1963138','Hypertension','Hypertension Adverse Event',[hypertension],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CTCAE'],[0/12],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Uterine fibroids : u/s 2062",0/27,[]).phrase('Uterine fibroids',[head([lexmatch(['uterine fibroids']),inputmatch(['Uterine',fibroids]),tag(noun),tokens([uterine,fibroids])])],0/16,[]).candidates(5,1,0,4,[]).mappings([map(-1000,[ev(-1000,'C0042133','Uterine Fibroids','Uterine Fibroids',[uterine,fibroids],[neop],[[[1,2],[1,2],0]],yes,no,['CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','LCH_NW','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','OMIM','PDQ','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[0/16],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],17/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('u/s 2062',[mod([lexmatch(['u/s']),inputmatch([u,/,s]),tag(noun),tokens([u,s])]),shapes([inputmatch(['2062']),features([integer]),tokens(['2062'])])],19/8,[]).candidates(1,0,0,1,[]).mappings([map(-901,[ev(-901,'C0041703','U S','United States',[u,s],[geoa],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['AOD','CHV','CSP','HL7V3.0','LCH','LNC','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[19/1,20/1],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Smoking : quit 2/67 s/p MI",0/26,[]).phrase('Smoking',[head([lexmatch([smoking]),inputmatch(['Smoking']),tag(noun),tokens([smoking])])],0/7,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C0453996','Smoking','Tobacco smoking behavior',[smoking],[inbe],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','DXP','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[0/7],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],8/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('quit 2/67 s/p MI',[mod([lexmatch([quit]),inputmatch([quit]),tag(noun),tokens([quit])]),shapes([inputmatch(['2',/,'67']),features([fraction]),tokens(['2','67'])]),prep([lexmatch(['s/p']),inputmatch([s,/,p]),tag(prep),tokens([s,p])]),mod([lexmatch([mi]),inputmatch(['MI']),tag(noun),tokens([mi])])],10/16,[]).candidates(4,0,0,4,[]).mappings([map(-722,[ev(-753,'C0748223','QUIT','QUIT',[quit],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[10/4],0,0),ev(-783,'C1440961','Mi-2','Mi-2',[mi,'2'],[imft],[[[6,6],[1,1],0],[[2,2],[2,2],0]],yes,no,['LNC'],[15/1,24/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Hyperlipidemia : CRF mild chol, cigs, HTN, Fhx and known hx CAD in pt.",0/70,[]).phrase('Hyperlipidemia',[head([lexmatch([hyperlipidemia]),inputmatch(['Hyperlipidemia']),tag(noun),tokens([hyperlipidemia])])],0/14,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C0020473','HYPERLIPIDEMIA','Hyperlipidemia',[hyperlipidemia],[dsyn],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','ICD10CM','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NDFRT','OMIM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[0/14],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],15/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('CRF mild chol,',[mod([lexmatch([crf]),inputmatch(['CRF']),tag(noun),tokens([crf])]),mod([lexmatch([mild]),inputmatch([mild]),tag(adj),tokens([mild])]),head([lexmatch([chol]),inputmatch([chol]),tag(noun),tokens([chol])]),punc([inputmatch([',']),tokens([])])],17/14,[]).candidates(2,0,0,2,[]).mappings([map(-790,[ev(-660,'C2945599','MILD','Mild (qualifier value)',[mild],[qlco],[[[2,2],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[21/4],0,0),ev(-827,'C0201950','CHOL','Cholesterol measurement test',[chol],[lbpr],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[26/4],0,0)])]).phrase('cigs,',[head([lexmatch([cigs]),inputmatch([cigs]),tag(noun),tokens([cigs])]),punc([inputmatch([',']),tokens([])])],32/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase('HTN,',[head([lexmatch([htn]),inputmatch(['HTN']),tag(noun),tokens([htn])]),punc([inputmatch([',']),tokens([])])],38/4,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0020538','HTN','Hypertensive disease',[htn],[dsyn],[[[1,1],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[38/3],0,0)])]).phrase('Fhx',[head([lexmatch([fhx]),inputmatch(['Fhx']),tag(noun),tokens([fhx])])],43/3,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C1428412','FHX','FOXJ2 gene',[fhx],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH'],[43/3],0,0)])]).phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],47/3,[]).candidates(0,0,0,0,[]).mappings([]).phrase('known hx CAD in pt.',[mod([lexmatch([known]),inputmatch([known]),tag(adj),tokens([known])]),mod([lexmatch([hx]),inputmatch([hx]),tag(noun),tokens([hx])]),head([lexmatch([cad]),inputmatch(['CAD']),tag(noun),tokens([cad])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([pt]),inputmatch([pt]),tag(noun),tokens([pt])]),punc([inputmatch(['.']),tokens([])])],51/19,[]).candidates(7,0,0,7,[]).mappings([map(-761,[ev(-797,'C3275096','KNOWN CAD','Known Coronary Artery Disease',[known,cad],[qnco],[[[1,1],[1,1],0],[[3,3],[2,2],0]],yes,no,['NCI','NCI_CDISC','NLMSubSyn'],[51/5,60/3],0,0),ev(-593,'C0262926','Hx','Medical History',[hx],[fndg],[[[2,2],[1,1],0]],no,no,['AIR','AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','NCI_NICHD','NLMSubSyn','SNOMEDCT_US'],[57/2],0,0),ev(-593,'C0699718','PT','Physical therapy (field)',[pt],[bmod],[[[5,5],[1,1],0]],no,no,['CHV','LNC','MTH','NLMSubSyn'],[67/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"borderline diabetes mellitus : 4/63 125 , follow hgbaic",0/55,[]).phrase('borderline diabetes mellitus',[mod([lexmatch([borderline]),inputmatch([borderline]),tag(adj),tokens([borderline])]),head([lexmatch(['diabetes mellitus']),inputmatch([diabetes,mellitus]),tag(noun),tokens([diabetes,mellitus])])],0/28,[]).candidates(7,1,0,6,[]).mappings([map(-1000,[ev(-1000,'C0856873','Borderline Diabetes Mellitus','borderline diabetes',[borderline,diabetes,mellitus],[dsyn],[[[1,1],[1,1],0],[[2,3],[2,3],0]],yes,no,['CHV','NLMSubSyn'],[0/28],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],29/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('4/63 125 ,',[shapes([inputmatch(['4',/,'63']),features([fraction]),tokens(['4','63'])]),shapes([inputmatch(['125']),features([integer]),tokens(['125'])]),punc([inputmatch([',']),tokens([])])],31/10,[]).candidates(1,0,0,1,[]).mappings([map(-827,[ev(-827,'C3838679','4+','4+ Answer to question',['4'],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[31/1],0,0)])]).phrase(follow,[verb([lexmatch([follow]),inputmatch([follow]),tag(verb),tokens([follow])])],42/6,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1719822','Follow','Follow',[follow],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','SNOMEDCT_US'],[42/6],0,0)])]).phrase(hgbaic,[head([inputmatch([hgbaic]),tag(noun),tokens([hgbaic])])],49/6,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"VPB : 2065 - ETT showed freq PVC's, bigeminy and couplets, nondx for ischemia",0/77,[]).phrase('VPB',[head([lexmatch([vpb]),inputmatch(['VPB']),tag(noun),tokens([vpb])])],0/3,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C0151636','VPB','Premature ventricular contractions',[vpb],[patf],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LNC','MSH','MTH','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[0/3],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],4/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('2065 - ETT',[shapes([inputmatch(['2065']),features([integer]),tokens(['2065'])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([ett]),inputmatch(['ETT']),tag(noun),tokens([ett])])],6/10,[]).candidates(0,0,0,0,[]).mappings([]).phrase(showed,[verb([lexmatch([showed]),inputmatch([showed]),tag(verb),tokens([showed])])],17/6,[]).candidates(1,0,0,1,[]).mappings([map(-966,[ev(-966,'C1547282','Show','Show',[show],[anim],[[[1,1],[1,1],1]],yes,no,['HL7V2.5','HL7V3.0'],[17/6],0,0)])]).phrase('freq PVC\'s,',[mod([inputmatch([freq]),tag(noun),tokens([freq])]),head([lexmatch([pvc]),inputmatch(['PVC\'s']),tag(noun),tokens([pvc])]),punc([inputmatch([',']),tokens([])])],24/11,[]).candidates(4,0,0,4,[]).mappings([map(-888,[ev(-694,'C1414814','FREQ','NCS1 gene',[freq],[gngm],[[[1,1],[1,1],0]],no,no,['HGNC','MTH','OMIM'],[24/4],0,0),ev(-861,'C0151636','PVC\'S','Premature ventricular contractions',[pvc],[patf],[[[2,2],[1,1],0]],yes,no,['CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LNC','MSH','MTH','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[29/5],0,0)])]).phrase(bigeminy,[head([lexmatch([bigeminy]),inputmatch([bigeminy]),tag(noun),tokens([bigeminy])])],36/8,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C1963278','Bigeminy','Bigeminy Adverse Event',[bigeminy],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CTCAE'],[36/8],0,0)])]).phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],45/3,[]).candidates(0,0,0,0,[]).mappings([]).phrase('couplets,',[head([lexmatch([couplets]),inputmatch([couplets]),tag(noun),tokens([couplets])]),punc([inputmatch([',']),tokens([])])],49/9,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0429001','Couplets','Paired ventricular premature complexes',[couplets],[patf],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_CDISC','NLMSubSyn','OMIM','SNOMEDCT_US'],[49/8],0,0)])]).phrase('nondx for ischemia',[head([inputmatch([nondx]),tag(noun),tokens([nondx])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([ischemia]),inputmatch([ischemia]),tag(noun),tokens([ischemia])])],59/18,[]).candidates(2,1,0,1,[]).mappings([map(-623,[ev(-623,'C0022116','ISCHEMIA','Ischemia',[ischemia],[patf],[[[3,3],[1,1],0]],no,no,['AOD','CHV','COSTAR','CSP','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US'],[69/8],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Coronary artery disease : s/p ant SEMI + stent LAD 2/67, Dr Oakley, ETT Clarkfield 3/67 - neg scan for ischemia.",0/112,[]).phrase('Coronary artery disease',[head([lexmatch(['coronary artery disease']),inputmatch(['Coronary',artery,disease]),tag(noun),tokens([coronary,artery,disease])])],0/23,[]).candidates(16,4,0,12,[]).mappings([map(-1000,[ev(-1000,'C1956346','CORONARY ARTERY DISEASE','Coronary Artery Disease',[coronary,artery,disease],[dsyn],[[[1,3],[1,3],0]],yes,no,['AOD','COSTAR','CSP','CST','DXP','HPO','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','OMIM','SNMI','SNOMEDCT_US'],[0/23],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],24/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('s/p ant SEMI + stent LAD 2/67,',[prep([lexmatch(['s/p']),inputmatch([s,/,p]),tag(prep),tokens([s,p])]),mod([lexmatch([ant]),inputmatch([ant]),tag(noun),tokens([ant])]),mod([lexmatch([semi]),inputmatch(['SEMI']),tag(noun),tokens([semi])]),punc([inputmatch([+]),tokens([])]),mod([lexmatch([stent]),inputmatch([stent]),tag(noun),tokens([stent])]),mod([lexmatch([lad]),inputmatch(['LAD']),tag(noun),tokens([lad])]),shapes([inputmatch(['2',/,'67']),features([fraction]),tokens(['2','67'])]),punc([inputmatch([',']),tokens([])])],26/30,[]).candidates(3,0,0,3,[]).mappings([map(-728,[ev(-799,'C0003455','Ant','Ants',[ant],[euka],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','MSH','MTH','NCBI','SNM','SNMI','SNOMEDCT_US'],[30/3],0,0),ev(-799,'C0038257','Stent','Stent, device',[stent],[medd],[[[3,3],[1,1],0]],yes,no,['CHV','CSP','MSH','MTH','SNMI','SNOMEDCT_US'],[41/5],0,0)])]).phrase('Dr Oakley,',[mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),head([lexmatch([oakley]),inputmatch(['Oakley']),tag(noun),tokens([oakley])]),punc([inputmatch([',']),tokens([])])],57/10,[]).candidates(5,0,0,5,[]).mappings([map(-694,[ev(-694,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[1,1],[1,1],0]],no,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[57/2],0,0)])]).phrase('ETT Clarkfield 3/67 - neg scan for ischemia.',[mod([lexmatch([ett]),inputmatch(['ETT']),tag(noun),tokens([ett])]),mod([inputmatch(['Clarkfield']),tag(noun),tokens([clarkfield])]),shapes([inputmatch(['3',/,'67']),features([fraction]),tokens(['3','67'])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([neg]),inputmatch([neg]),tag(noun),tokens([neg])]),head([lexmatch([scan]),inputmatch([scan]),tag(noun),tokens([scan])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([ischemia]),inputmatch([ischemia]),tag(noun),tokens([ischemia])]),punc([inputmatch(['.']),tokens([])])],68/44,[]).candidates(6,1,0,5,[]).mappings([map(-645,[ev(-578,'C3853545','NEG','Negative - answer',[neg],[qlco],[[[5,5],[1,1],0]],no,no,['MTH','NCI'],[90/3],0,0),ev(-744,'C0441633','Scan','Scanning',[scan],[diap],[[[6,6],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNOMEDCT_US'],[94/4],0,0),ev(-578,'C0022116','ISCHEMIA','Ischemia',[ischemia],[patf],[[[8,8],[1,1],0]],no,no,['AOD','CHV','COSTAR','CSP','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US'],[103/8],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Thyroid nodule : 2065, thyroid scan 2066 consistent with hot nodule and toxic multinodular goiter, saw Dr Dolan, follow TSH.",0/124,[]).phrase('Thyroid nodule',[head([lexmatch(['thyroid nodule']),inputmatch(['Thyroid',nodule]),tag(noun),tokens([thyroid,nodule])])],0/14,[]).candidates(16,11,0,5,[]).mappings([map(-1000,[ev(-1000,'C0040137','THYROID NODULE','Thyroid Nodule',[thyroid,nodule],[neop],[[[1,2],[1,2],0]],yes,no,['CHV','COSTAR','DXP','MSH','MTH','MTHICD9','NCI','NDFRT','SNM','SNMI','SNOMEDCT_US'],[0/14],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],15/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('2065,',[shapes([inputmatch(['2065']),features([integer]),tokens(['2065'])]),punc([inputmatch([',']),tokens([])])],17/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase('thyroid scan 2066 consistent with hot nodule',[mod([lexmatch(['thyroid scan']),inputmatch([thyroid,scan]),tag(noun),tokens([thyroid,scan])]),shapes([inputmatch(['2066']),features([integer]),tokens(['2066'])]),head([lexmatch([consistent]),inputmatch([consistent]),tag(adj),tokens([consistent])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([hot]),inputmatch([hot]),tag(adj),tokens([hot])]),mod([lexmatch([nodule]),inputmatch([nodule]),tag(noun),tokens([nodule])])],23/44,[]).candidates(29,13,0,16,[]).mappings([map(-774,[ev(-581,'C0441633','Scan','Scanning',[scan],[diap],[[[2,2],[1,1],0]],no,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNOMEDCT_US'],[31/4],0,0),ev(-778,'C0332290','Consistent with','Consistent with',[consistent,with],[idcn],[[[4,4],[1,1],0],[[5,5],[2,2],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[41/15],0,0),ev(-638,'C0749472','hot nodule thyroid','thyroid nodule hot',[hot,nodule,thyroid],[fndg],[[[6,6],[1,1],0],[[7,7],[2,2],0],[[1,1],[3,3],0]],no,no,['CHV'],[23/7,57/10],0,0)])]).phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],68/3,[]).candidates(0,0,0,0,[]).mappings([]).phrase('toxic multinodular goiter,',[head([lexmatch(['toxic multinodular goiter']),inputmatch([toxic,multinodular,goiter]),tag(noun),tokens([toxic,multinodular,goiter])]),punc([inputmatch([',']),tokens([])])],72/26,[]).candidates(7,0,0,7,[]).mappings([map(-1000,[ev(-1000,'C0154143','Toxic multinodular goiter','Toxic multinodular goiter',[toxic,multinodular,goiter],[dsyn],[[[1,3],[1,3],0]],yes,no,['CHV','COSTAR','DXP','HPO','ICD10CM','ICD9CM','MTHICD9','SNMI','SNOMEDCT_US'],[72/25],0,0)])]).phrase('saw Dr Dolan,',[mod([lexmatch([saw]),inputmatch([saw]),tag(noun),tokens([saw])]),mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),head([inputmatch(['Dolan']),tag(noun),tokens([dolan])]),punc([inputmatch([',']),tokens([])])],99/13,[]).candidates(6,0,0,6,[]).mappings([map(-623,[ev(-660,'C0183089','SAW','saw (device)',[saw],[medd],[[[1,1],[1,1],0]],no,no,['CHV','MTH','SNOMEDCT_US','SPN'],[99/3],0,0),ev(-660,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[2,2],[1,1],0]],no,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[103/2],0,0)])]).phrase(follow,[verb([lexmatch([follow]),inputmatch([follow]),tag(verb),tokens([follow])])],113/6,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1719822','Follow','Follow',[follow],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','SNOMEDCT_US'],[113/6],0,0)])]).phrase('TSH.',[head([lexmatch([tsh]),inputmatch(['TSH']),tag(noun),tokens([tsh])]),punc([inputmatch(['.']),tokens([])])],120/4,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Medications",0/11,[]).phrase('Medications',[head([lexmatch([medications]),inputmatch(['Medications']),tag(noun),tokens([medications])])],0/11,[]).candidates(4,1,0,3,[]).mappings([map(-1000,[ev(-1000,'C2598133','Medications','Medications:-:Point in time:^Patient:-',[medications],[clna],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[0/11],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Asa (ACETYLSALICYLIC Acid) 325MG, 1 Tablet(s) PO QD",0/51,[]).phrase('Asa',[head([lexmatch([asa]),inputmatch(['Asa']),tag(noun),tokens([asa])])],0/3,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C0004057','ASA','Aspirin',[asa],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','MSH','MTH','MTHSPL','NCI','NCI_DCP','NCI_DTP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[0/3],0,0)])]).phrase('(ACETYLSALICYLIC Acid',[punc([inputmatch(['(']),tokens([])]),head([lexmatch(['acetylsalicylic acid']),inputmatch(['ACETYLSALICYLIC','Acid']),tag(noun),tokens([acetylsalicylic,acid])])],4/21,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C0004057','Acetylsalicylic Acid','Aspirin',[acetylsalicylic,acid],[orch,phsu],[[[1,2],[1,2],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','MSH','MTH','MTHSPL','NCI','NCI_DCP','NCI_DTP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[5/20],0,0)])]).phrase(')',[punc([inputmatch([')']),tokens([])])],25/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('325MG,',[head([inputmatch(['325MG']),tag(noun),tokens(['325mg'])]),punc([inputmatch([',']),tokens([])])],27/6,[]).candidates(0,0,0,0,[]).mappings([]).phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],34/8,[]).candidates(5,0,0,5,[]).mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[34/1],0,0),ev(-861,'C0039225','TABLET','Tablet Dosage Form',[tablet],[bodm],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NDFRT','RXNORM','SNMI','SNOMEDCT_US','VANDF'],[36/6],0,0)])]).phrase('(',[punc([inputmatch(['(']),tokens([])])],42/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],43/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],46/5,[]).candidates(3,0,0,3,[]).mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[46/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[49/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Nitroglycerin 1/150 (0.4 Mg) 1 TAB SL x1 PRN prn CP",0/51,[]).phrase('Nitroglycerin 1/150',[mod([lexmatch([nitroglycerin]),inputmatch(['Nitroglycerin']),tag(noun),tokens([nitroglycerin])]),shapes([inputmatch(['1',/,'150']),features([fraction]),tokens(['1','150'])])],0/19,[]).candidates(6,4,0,2,[]).mappings([map(-827,[ev(-827,'C0017887','NITROGLYCERIN','Nitroglycerin',[nitroglycerin],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[0/13],0,0)])]).phrase('(0.4 Mg',[punc([inputmatch(['(']),tokens([])]),shapes([inputmatch(['0','.','4']),features([real_number]),tokens(['0','4'])]),head([lexmatch([mg]),inputmatch(['Mg']),tag(noun),tokens([mg])])],20/7,[]).candidates(5,0,0,5,[]).mappings([map(-802,[ev(-660,'C3842591','0%','0%',['0'],[fndg],[[[1,1],[1,1],0]],no,no,['LNC'],[21/1],0,0),ev(-827,'C2346927','Mg++','Magnesium Cation',[mg],[elii,phsu],[[[3,3],[1,1],0]],yes,no,['MTH','MTHSPL','NCI','NCI_CRCH','NCI_FDA','RXNORM'],[25/2],0,0)])]).phrase(')',[punc([inputmatch([')']),tokens([])])],27/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('1 TAB SL x1 PRN prn CP',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),mod([lexmatch([tab]),inputmatch(['TAB']),tag(noun),tokens([tab])]),mod([lexmatch([sl]),inputmatch(['SL']),tag(noun),tokens([sl])]),mod([inputmatch([x1]),tag(noun),tokens([x1])]),mod([lexmatch([prn]),inputmatch(['PRN']),tag(noun),tokens([prn])]),mod([lexmatch([prn]),inputmatch([prn]),tag(noun),tokens([prn])]),head([lexmatch([cp]),inputmatch(['CP']),tag(noun),tokens([cp])])],29/22,[]).candidates(5,0,0,5,[]).mappings([map(-540,[ev(-629,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[29/1],0,0),ev(-629,'C1705223','Tab','Tablet Dosing Unit',[tab],[qnco],[[[2,2],[1,1],0]],no,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[31/3],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Norvasc (AMLODIPINE) 5MG, 1 Tablet(s) PO QD",0/43,[]).phrase('Norvasc',[head([lexmatch([norvasc]),inputmatch(['Norvasc']),tag(noun),tokens([norvasc])])],0/7,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0162712','Norvasc','Norvasc',[norvasc],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','MSH','MTH','RXNORM'],[0/7],0,0)])]).phrase('(AMLODIPINE',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([amlodipine]),inputmatch(['AMLODIPINE']),tag(noun),tokens([amlodipine])])],8/11,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0051696','AMLODIPINE','Amlodipine',[amlodipine],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[9/10],0,0)])]).phrase(')',[punc([inputmatch([')']),tokens([])])],19/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('5MG,',[head([inputmatch(['5MG']),tag(noun),tokens(['5mg'])]),punc([inputmatch([',']),tokens([])])],21/4,[]).candidates(0,0,0,0,[]).mappings([]).phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],26/8,[]).candidates(5,0,0,5,[]).mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[26/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[28/6],0,0)])]).phrase('(',[punc([inputmatch(['(']),tokens([])])],34/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],35/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],38/5,[]).candidates(3,0,0,3,[]).mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[38/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[41/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Plavix (CLOPIDOGREL) 75 MG PO QD",0/32,[]).phrase('Plavix',[head([lexmatch([plavix]),inputmatch(['Plavix']),tag(noun),tokens([plavix])])],0/6,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0633084','Plavix','Plavix',[plavix],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','NCI','PDQ','RXNORM'],[0/6],0,0)])]).phrase('(CLOPIDOGREL',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([clopidogrel]),inputmatch(['CLOPIDOGREL']),tag(noun),tokens([clopidogrel])])],7/12,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0070166','CLOPIDOGREL',clopidogrel,[clopidogrel],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LNC','MSH','MTHSPL','NCI','NCI_FDA','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[8/11],0,0)])]).phrase(')',[punc([inputmatch([')']),tokens([])])],19/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('75 MG PO QD',[shapes([inputmatch(['75']),features([integer]),tokens(['75'])]),mod([lexmatch([mg]),inputmatch(['MG']),tag(noun),tokens([mg])]),mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],21/11,[]).candidates(7,0,0,7,[]).mappings([map(-775,[ev(-645,'C2346927','Mg++','Magnesium Cation',[mg],[elii,phsu],[[[2,2],[1,1],0]],no,no,['MTH','MTHSPL','NCI','NCI_CRCH','NCI_FDA','RXNORM'],[24/2],0,0),ev(-645,'C0442027','PO','Oral',[po],[spco],[[[3,3],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[27/2],0,0),ev(-812,'C0332173','QD','Daily',[qd],[tmco],[[[4,4],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[30/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"ATENOLOL 50MG, 1 Tablet(s) PO QD",0/32,[]).phrase('ATENOLOL 50MG,',[mod([lexmatch([atenolol]),inputmatch(['ATENOLOL']),tag(noun),tokens([atenolol])]),head([inputmatch(['50MG']),tag(noun),tokens(['50mg'])]),punc([inputmatch([',']),tokens([])])],0/14,[]).candidates(1,0,0,1,[]).mappings([map(-694,[ev(-694,'C0004147','ATENOLOL','Atenolol',[atenolol],[orch,phsu],[[[1,1],[1,1],0]],no,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[0/8],0,0)])]).phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],15/8,[]).candidates(5,0,0,5,[]).mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[15/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[17/6],0,0)])]).phrase('(',[punc([inputmatch(['(']),tokens([])])],23/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],24/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],27/5,[]).candidates(3,0,0,3,[]).mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[27/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[30/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Lipitor (ATORVASTATIN) 10MG, 1 Tablet(s) PO QD",0/46,[]).phrase('Lipitor',[head([lexmatch([lipitor]),inputmatch(['Lipitor']),tag(noun),tokens([lipitor])])],0/7,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0593906','Lipitor','Lipitor',[lipitor],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','MSH','NCI','NCI_NCI-GLOSS','PDQ','RXNORM'],[0/7],0,0)])]).phrase('(ATORVASTATIN',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([atorvastatin]),inputmatch(['ATORVASTATIN']),tag(noun),tokens([atorvastatin])])],8/13,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0286651','ATORVASTATIN',atorvastatin,[atorvastatin],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[9/12],0,0)])]).phrase(')',[punc([inputmatch([')']),tokens([])])],21/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('10MG,',[head([inputmatch(['10MG']),tag(noun),tokens(['10mg'])]),punc([inputmatch([',']),tokens([])])],23/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],29/8,[]).candidates(5,0,0,5,[]).mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[29/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[31/6],0,0)])]).phrase('(',[punc([inputmatch(['(']),tokens([])])],37/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],38/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],41/5,[]).candidates(3,0,0,3,[]).mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[41/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[44/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Hctz (HYDROCHLOROTHIAZIDE) 25MG, 1 Tablet(s) PO QD",0/50,[]).phrase('Hctz',[head([lexmatch([hctz]),inputmatch(['Hctz']),tag(noun),tokens([hctz])])],0/4,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0020261','HCTZ','Hydrochlorothiazide',[hctz],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[0/4],0,0)])]).phrase('(HYDROCHLOROTHIAZIDE',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([hydrochlorothiazide]),inputmatch(['HYDROCHLOROTHIAZIDE']),tag(noun),tokens([hydrochlorothiazide])])],5/20,[]).candidates(4,3,0,1,[]).mappings([map(-1000,[ev(-1000,'C0020261','HYDROCHLOROTHIAZIDE','Hydrochlorothiazide',[hydrochlorothiazide],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[6/19],0,0)])]).phrase(')',[punc([inputmatch([')']),tokens([])])],25/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('25MG,',[head([inputmatch(['25MG']),tag(noun),tokens(['25mg'])]),punc([inputmatch([',']),tokens([])])],27/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],33/8,[]).candidates(5,0,0,5,[]).mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[33/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[35/6],0,0)])]).phrase('(',[punc([inputmatch(['(']),tokens([])])],41/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],42/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],45/5,[]).candidates(3,0,0,3,[]).mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[45/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[48/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Zestril (LISINOPRIL) 40MG, 1 Tablet(s) PO QD",0/44,[]).phrase('Zestril',[head([lexmatch([zestril]),inputmatch(['Zestril']),tag(noun),tokens([zestril])])],0/7,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0678140','Zestril','Zestril',[zestril],[aapp,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','NCI','NCI_NCI-GLOSS','RXNORM'],[0/7],0,0)])]).phrase('(LISINOPRIL',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([lisinopril]),inputmatch(['LISINOPRIL']),tag(noun),tokens([lisinopril])])],8/11,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0065374','LISINOPRIL','Lisinopril',[lisinopril],[aapp,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LNC','MSH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[9/10],0,0)])]).phrase(')',[punc([inputmatch([')']),tokens([])])],19/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('40MG,',[head([inputmatch(['40MG']),tag(noun),tokens(['40mg'])]),punc([inputmatch([',']),tokens([])])],21/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],27/8,[]).candidates(5,0,0,5,[]).mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[27/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[29/6],0,0)])]).phrase('(',[punc([inputmatch(['(']),tokens([])])],35/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],36/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],39/5,[]).candidates(3,0,0,3,[]).mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[39/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[42/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Allergies",0/9,[]).phrase('Allergies',[head([lexmatch([allergies]),inputmatch(['Allergies']),tag(noun),tokens([allergies])])],0/9,[]).candidates(7,6,0,1,[]).mappings([map(-1000,[ev(-1000,'C0020517','Allergies','Hypersensitivity',[allergies],[patf],[[[1,1],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','GO','HL7V2.5','HL7V3.0','ICD10CM','ICF','ICF-CY','ICPC','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[0/9],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Ceclor (CEFACLOR) - Rash",0/24,[]).phrase('Ceclor',[head([lexmatch([ceclor]),inputmatch(['Ceclor']),tag(noun),tokens([ceclor])])],0/6,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0701133','Ceclor','Ceclor',[ceclor],[antb,orch],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','RXNORM','SNMI'],[0/6],0,0)])]).phrase('(CEFACLOR',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([cefaclor]),inputmatch(['CEFACLOR']),tag(noun),tokens([cefaclor])])],7/9,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0007537','CEFACLOR','Cefaclor',[cefaclor],[antb,orch],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[8/8],0,0)])]).phrase(') -',[punc([inputmatch([')']),tokens([])]),punc([inputmatch([-]),tokens([])])],16/3,[]).candidates(0,0,0,0,[]).mappings([]).phrase('Rash',[head([lexmatch([rash]),inputmatch(['Rash']),tag(noun),tokens([rash])])],20/4,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0015230','RASH','Exanthema',[rash],[sosy],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CST','HPO','ICD10CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[20/4],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Physical Exam",0/13,[]).phrase('Physical Exam',[mod([lexmatch([physical]),inputmatch(['Physical']),tag(adj),tokens([physical])]),head([lexmatch([exam]),inputmatch(['Exam']),tag(noun),tokens([exam])])],0/13,[]).candidates(6,0,0,6,[]).mappings([map(-1000,[ev(-1000,'C1744699','Physical Exam','Physical Exam Domain',[physical,exam],[inpr],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['MTH','NCI','NCI_CDISC','NLMSubSyn'],[0/13],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Vital signs  140/82  98.2",0/25,[]).phrase('Vital signs  140/82  98.2',[mod([lexmatch(['vital signs']),inputmatch(['Vital',signs]),tag(noun),tokens([vital,signs])]),shapes([inputmatch(['140',/,'82']),features([fraction]),tokens(['140','82'])]),shapes([inputmatch(['98','.','2']),features([real_number]),tokens(['98','2'])])],0/25,[]).candidates(9,1,0,8,[]).mappings([map(-827,[ev(-827,'C0150404','Vital signs','Taking vital signs',[vital,signs],[hlca],[[[1,2],[1,2],0]],yes,no,['CHV','MTH','SNM','SNMI','SNOMEDCT_US'],[0/11],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Looks well,  nontoxic",0/21,[]).phrase('Looks',[verb([lexmatch([looks]),inputmatch(['Looks']),tag(verb),tokens([looks])])],0/5,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0233426','Looks','Personal appearance',[looks],[orga],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','SNM','SNMI','SNOMEDCT_US'],[0/5],0,0)])]).phrase('well,',[adv([lexmatch([well]),inputmatch([well]),tag(adv),tokens([well])]),punc([inputmatch([',']),tokens([])])],6/5,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C3146287','Well','Well',[well],[mnob],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[6/4],0,0)])]).phrase(nontoxic,[head([lexmatch([nontoxic]),inputmatch([nontoxic]),tag(adj),tokens([nontoxic])])],13/8,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C1518413','Nontoxic','Nontoxic',[nontoxic],[qlco],[[[1,1],[1,1],0]],yes,no,['NCI','NCI_NCI-GLOSS'],[13/8],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Sinuses - nontender",0/19,[]).phrase('Sinuses - nontender',[mod([lexmatch([sinuses]),inputmatch(['Sinuses']),tag(noun),tokens([sinuses])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([nontender]),inputmatch([nontender]),tag(adj),tokens([nontender])])],0/19,[]).candidates(4,0,0,4,[]).mappings([map(-901,[ev(-694,'C0016169','Sinus','pathologic fistula',[sinus],[anab],[[[1,1],[1,1],0]],no,no,['AOD','CHV','COSTAR','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[0/7],0,0),ev(-861,'C0520960','Non-tender','Non-tender',[non,tender],[qlco],[[[2,2],[1,2],0]],yes,no,['CHV','OMIM','SNMI','SNOMEDCT_US'],[10/9],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"TM's clear",0/10,[]).phrase('TM\'s',[head([lexmatch([tm]),inputmatch(['TM\'s']),tag(noun),tokens([tm])])],0/4,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C2744539','TM','THBD protein, human',[tm],[aapp,bacs],[[[1,1],[1,1],0]],yes,no,['MSH','MTH','NCI'],[0/4],0,0)])]).phrase(clear,[verb([lexmatch([clear]),inputmatch([clear]),tag(verb),tokens([clear])])],5/5,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1709157','Clear','Negative Surgical Margin',[clear],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[5/5],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"OP - negative without exudates",0/30,[]).phrase('OP - negative without exudates',[mod([lexmatch([op]),inputmatch(['OP']),tag(noun),tokens([op])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([negative]),inputmatch([negative]),tag(noun),tokens([negative])]),prep([lexmatch([without]),inputmatch([without]),tag(prep),tokens([without])]),mod([lexmatch([exudates]),inputmatch([exudates]),tag(noun),tokens([exudates])])],0/30,[]).candidates(7,1,0,6,[]).mappings([map(-708,[ev(-770,'C0205160','Negative','Negative',[negative],[qlco],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','SNMI','SNOMEDCT_US'],[5/8],0,0),ev(-604,'C0015388','Exudates','Exudate',[exudates],[bdsu],[[[4,4],[1,1],0]],no,no,['CHV','CSP','LNC','MSH','MTH','NCI','NCI_CDISC','SNM','SNMI','SNOMEDCT_US'],[22/8],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"neck- supple without increased nodes",0/36,[]).phrase('neck- supple without increased nodes',[mod([lexmatch([neck]),inputmatch([neck]),tag(noun),tokens([neck])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([supple]),inputmatch([supple]),tag(adj),tokens([supple])]),prep([lexmatch([without]),inputmatch([without]),tag(prep),tokens([without])]),mod([lexmatch([increased]),inputmatch([increased]),tag(adj),tokens([increased])]),mod([lexmatch([nodes]),inputmatch([nodes]),tag(noun),tokens([nodes])])],0/36,[]).candidates(21,13,0,8,[]).mappings([map(-724,[ev(-593,'C0027530','NECK','Neck',[neck],[blor],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[0/4],0,0),ev(-760,'C0332254','Supple','Supple',[supple],[ftcn],[[[2,2],[1,1],0]],yes,no,['CHV','SNMI','SNOMEDCT_US'],[6/6],0,0),ev(-593,'C0205217','Increased','Increased',[increased],[qnco],[[[4,4],[1,1],0]],no,no,['CHV','LNC','MTH','SNMI','SNOMEDCT_US'],[21/9],0,0),ev(-593,'C0746922',nodes,'Anatomic Node',[nodes],[bpoc],[[[5,5],[1,1],0]],no,no,['CHV','MTH','NCI'],[31/5],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([negation(nega,without,[14/7],['C1709157':'Clear'],[8/5]),negation(nega,without,[14/7],['C0043144':'WHEEZING'],[22/8])]).utterance('00000000.ti.1',"lungs - clear without wheezing on forced exp",0/44,[]).phrase('lungs - clear without wheezing',[mod([lexmatch([lungs]),inputmatch([lungs]),tag(noun),tokens([lungs])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([clear]),inputmatch([clear]),tag(adj),tokens([clear])]),prep([lexmatch([without]),inputmatch([without]),tag(prep),tokens([without])]),mod([lexmatch([wheezing]),inputmatch([wheezing]),tag(noun),tokens([wheezing])])],0/30,[]).candidates(10,6,0,4,[]).mappings([map(-733,[ev(-604,'C0024109','LUNGS','Lung',[lungs],[bpoc],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[0/5],0,0),ev(-770,'C1709157','Clear','Negative Surgical Margin',[clear],[fndg],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[8/5],0,1),ev(-604,'C0043144','WHEEZING','Wheezing',[wheezing],[sosy],[[[4,4],[1,1],0]],no,no,['CHV','COSTAR','CST','DXP','ICD10CM','ICD9CM','ICPC','LNC','MSH','MTH','NCI','NCI_CTCAE','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US'],[22/8],0,1)])]).phrase('on forced exp',[prep([lexmatch([on]),inputmatch([on]),tag(prep),tokens([on])]),mod([lexmatch([forced]),inputmatch([forced]),tag(adj),tokens([forced])]),head([lexmatch([exp]),inputmatch([exp]),tag(noun),tokens([exp])])],31/13,[]).candidates(4,1,0,3,[]).mappings([map(-888,[ev(-694,'C0443221','Forced','Forced',[forced],[ftcn],[[[1,1],[1,1],0]],no,no,['CHV','MTH','NCI','SNOMEDCT_US'],[34/6],0,0),ev(-861,'C1417055','EXP','MBNL1 gene',[exp],[gngm],[[[2,2],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[41/3],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"CVS - rrrs2s2",0/13,[]).phrase('CVS - rrrs2s2',[mod([lexmatch([cvs]),inputmatch(['CVS']),tag(noun),tokens([cvs])]),punc([inputmatch([-]),tokens([])]),head([inputmatch([rrrs2s2]),tag(noun),tokens([rrrs2s2])])],0/13,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Assessment and Plan",0/19,[]).phrase('Assessment',[head([lexmatch([assessment]),inputmatch(['Assessment']),tag(noun),tokens([assessment])])],0/10,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1516048','Assessment','Assessed',[assessment],[acty],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_NCI-GLOSS'],[0/10],0,0)])]).phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],11/3,[]).candidates(0,0,0,0,[]).mappings([]).phrase('Plan',[head([lexmatch([plan]),inputmatch(['Plan']),tag(noun),tokens([plan])])],15/4,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C1301732','Plan','Planned',[plan],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNOMEDCT_US'],[15/4],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([negation(nega,'no evidence',[9/11],['C0037199':'Sinus Infection'],[29/15])]).utterance('00000000.ti.1',"1. ",0/3,[]).phrase('1.',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),punc([inputmatch(['.']),tokens([])])],0/2,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C2827734','1+','1+ Score',['1'],[qnco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[0/1],0,0)])]).'EOU'.utterance('00000000.ti.2',"URI - no evidence of bact sinus infection.  ",3/44,[]).phrase('URI -',[head([lexmatch([uri]),inputmatch(['URI']),tag(noun),tokens([uri])]),punc([inputmatch([-]),tokens([])])],3/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase('no evidence of bact sinus infection.',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([evidence]),inputmatch([evidence]),tag(noun),tokens([evidence])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([bact]),inputmatch([bact]),tag(noun),tokens([bact])]),mod([lexmatch([sinus]),inputmatch([sinus]),tag(noun),tokens([sinus])]),mod([lexmatch([infection]),inputmatch([infection]),tag(noun),tokens([infection])]),punc([inputmatch(['.']),tokens([])])],9/36,[]).candidates(18,3,0,15,[]).mappings([map(-864,[ev(-833,'C0332125','No evidence of','No evidence of',[no,evidence,of],[qlco],[[[1,1],[1,1],0],[[2,2],[2,2],0],[[3,3],[3,3],0]],yes,no,['MTH','NLMSubSyn','SNMI','SNOMEDCT_US'],[9/14],0,0),ev(-586,'C0004618','BACT','Bacterial Count Measurement',[bact],[lbpr],[[[4,4],[1,1],0]],no,no,['CHV','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[24/4],0,0),ev(-623,'C0037199','Sinus Infection','Sinusitis',[sinus,infection],[dsyn],[[[5,5],[1,1],0],[[6,6],[2,2],0]],no,no,['AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[29/15],0,1)])]).'EOU'.utterance('00000000.ti.3',"Needs decongestion but would like to avoid decong systemically given history CAD and ectopy in past. ",47/101,[]).phrase('Needs',[verb([lexmatch([needs]),inputmatch(['Needs']),tag(verb),tokens([needs])])],47/5,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C0027552','Need','Needs',[need],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','MTH','NCI','SNOMEDCT_US'],[47/5],0,0)])]).phrase(decongestion,[head([lexmatch([decongestion]),inputmatch([decongestion]),tag(noun),tokens([decongestion])])],53/12,[]).candidates(0,0,0,0,[]).mappings([]).phrase(but,[conj([lexmatch([but]),inputmatch([but]),tag(conj),tokens([but])])],66/3,[]).candidates(0,0,0,0,[]).mappings([]).phrase('would like',[modal([lexmatch([would]),inputmatch([would]),tag(modal),tokens([would])]),prep([lexmatch([like]),inputmatch([like]),tag(prep),tokens([like])])],70/10,[]).candidates(0,0,0,0,[]).mappings([]).phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],81/2,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C0040363','TO','Togo',[to],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LCH','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[81/2],0,0)])]).phrase(avoid,[verb([lexmatch([avoid]),inputmatch([avoid]),tag(verb),tokens([avoid])])],84/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase('decong systemically given history CAD',[mod([inputmatch([decong]),tag(noun),tokens([decong])]),adv([lexmatch([systemically]),inputmatch([systemically]),tag(adv),tokens([systemically])]),mod([lexmatch([given]),inputmatch([given]),tag(adj),tokens([given])]),mod([lexmatch([history]),inputmatch([history]),tag(noun),tokens([history])]),head([lexmatch([cad]),inputmatch(['CAD']),tag(noun),tokens([cad])])],90/37,[]).candidates(9,2,0,7,[]).mappings([map(-728,[ev(-637,'C2004062','History','History of previous events',[history],[fndg],[[[4,4],[1,1],0]],no,no,['CHV','LCH','MTH','NCI'],[116/7],0,0),ev(-804,'C3813548','CAD','CALD1 wt Allele',[cad],[gngm],[[[5,5],[1,1],0]],yes,no,['MTH','NCI'],[124/3],0,0)])]).phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],128/3,[]).candidates(0,0,0,0,[]).mappings([]).phrase('ectopy in past.',[head([lexmatch([ectopy]),inputmatch([ectopy]),tag(noun),tokens([ectopy])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([past]),inputmatch([past]),tag(noun),tokens([past])]),punc([inputmatch(['.']),tokens([])])],132/15,[]).candidates(4,2,0,2,[]).mappings([map(-711,[ev(-718,'C0574895','Ectopic','Ectopic (qualifier value)',[ectopic],[spco],[[[1,1],[1,1],3]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[132/6],0,0),ev(-623,'C1444637','Past','Past',[past],[tmco],[[[3,3],[1,1],0]],no,no,['NCI','SNOMEDCT_US'],[142/4],0,0)])]).'EOU'.utterance('00000000.ti.4',"Will use steam, humidity, nasal decong spray for 3 days.  ",148/58,[]).phrase('Will',[modal([lexmatch([will]),inputmatch(['Will']),tag(modal),tokens([will])])],148/4,[]).candidates(0,0,0,0,[]).mappings([]).phrase(use,[verb([lexmatch([use]),inputmatch([use]),tag(verb),tokens([use])])],153/3,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C0042153',use,'utilization qualifier',[use],[ftcn],[[[1,1],[1,1],0]],yes,no,['MSH','MTH'],[153/3],0,0)])]).phrase('steam,',[head([lexmatch([steam]),inputmatch([steam]),tag(noun),tokens([steam])]),punc([inputmatch([',']),tokens([])])],157/6,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0038225','Steam','Steam',[steam],[inch],[[[1,1],[1,1],0]],yes,no,['CHV','LCH','LCH_NW','MSH','NDFRT','SNM','SNMI','SNOMEDCT_US'],[157/5],0,0)])]).phrase('humidity,',[head([lexmatch([humidity]),inputmatch([humidity]),tag(noun),tokens([humidity])]),punc([inputmatch([',']),tokens([])])],164/9,[]).candidates(3,1,0,2,[]).mappings([map(-1000,[ev(-1000,'C0020167','Humidity','Humidity',[humidity],[npop],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[164/8],0,0)])]).phrase('nasal decong spray for 3 days.',[mod([lexmatch([nasal]),inputmatch([nasal]),tag(adj),tokens([nasal])]),mod([inputmatch([decong]),tag(noun),tokens([decong])]),head([lexmatch([spray]),inputmatch([spray]),tag(noun),tokens([spray])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),mod([lexmatch([days]),inputmatch([days]),tag(noun),tokens([days])]),punc([inputmatch(['.']),tokens([])])],174/30,[]).candidates(8,2,0,6,[]).mappings([map(-732,[ev(-783,'C0461725','Nasal Spray','Nasal Spray',[nasal,spray],[bodm],[[[1,1],[1,1],0],[[3,3],[2,2],0]],yes,no,['CHV','HL7V3.0','MTH','NCI','NCI_NCPDP','NDFRT','RXNORM','SNOMEDCT_US'],[174/5,187/5],0,0),ev(-600,'C3842675','Day 3','Day 3',[day,'3'],[fndg],[[[6,6],[1,1],1],[[5,5],[2,2],0]],no,no,['LNC'],[197/6],0,0)])]).'EOU'.utterance('00000000.ti.5',"Call if fevers, worsens or persists.",206/36,[]).phrase('Call',[verb([lexmatch([call]),inputmatch(['Call']),tag(verb),tokens([call])])],206/4,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1947967','Call','Call (Instruction)',[call],[ftcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[206/4],0,0)])]).phrase(if,[conj([lexmatch([if]),inputmatch([if]),tag(conj),tokens([if])])],211/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('fevers,',[head([lexmatch([fevers]),inputmatch([fevers]),tag(noun),tokens([fevers])]),punc([inputmatch([',']),tokens([])])],214/7,[]).candidates(2,1,0,1,[]).mappings([map(-1000,[ev(-1000,'C0015967','Fevers','Fever',[fevers],[fndg],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CHV','COSTAR','CSP','CST','DXP','GO','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','QMR','SNM','SNMI','SNOMEDCT_US'],[214/6],0,0)])]).phrase(worsens,[verb([lexmatch([worsens]),inputmatch([worsens]),tag(verb),tokens([worsens])])],222/7,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1457868','Worsens','Worse',[worsens],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_FDA','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[222/7],0,0)])]).phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],230/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('persists.',[verb([lexmatch([persists]),inputmatch([persists]),tag(verb),tokens([persists])]),punc([inputmatch(['.']),tokens([])])],233/9,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"2. ",0/3,[]).phrase('2.',[shapes([inputmatch(['2']),features([integer]),tokens(['2'])]),punc([inputmatch(['.']),tokens([])])],0/2,[]).candidates(4,0,0,4,[]).mappings([map(-1000,[ev(-1000,'C2981700','2+','2+ Score, WHO',['2'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[0/1],0,0)])]).'EOU'.utterance('00000000.ti.2',"Hot thyroid nodule - was slightly higher last visit - will refer to Dr Dolan for discussion re treating this now especially given her history of cardiac ds in the last couple of years.",3/184,[]).phrase('Hot thyroid nodule -',[mod([lexmatch([hot]),inputmatch(['Hot']),tag(adj),tokens([hot])]),head([lexmatch(['thyroid nodule']),inputmatch([thyroid,nodule]),tag(noun),tokens([thyroid,nodule])]),punc([inputmatch([-]),tokens([])])],3/20,[]).candidates(20,11,0,9,[]).mappings([map(-1000,[ev(-1000,'C0749472','hot thyroid nodule','thyroid nodule hot',[hot,thyroid,nodule],[fndg],[[[1,1],[1,1],0],[[2,3],[2,3],0]],yes,no,['CHV'],[3/18],0,0)])]).phrase(was,[aux([lexmatch([was]),inputmatch([was]),tag(aux),tokens([was])])],24/3,[]).candidates(0,0,0,0,[]).mappings([]).phrase('slightly higher last',[adv([lexmatch([slightly]),inputmatch([slightly]),tag(adv),tokens([slightly])]),mod([lexmatch([higher]),inputmatch([higher]),tag(adj),tokens([higher])]),head([lexmatch([last]),inputmatch([last]),tag(adj),tokens([last])])],28/20,[]).candidates(8,5,0,3,[]).mappings([map(-623,[ev(-660,'C0750482','Slightly','Slightly (qualifier value)',[slightly],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','SNOMEDCT_US'],[28/8],0,0),ev(-660,'C0205250','Higher','High',[higher],[qlco],[[[2,2],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[37/6],0,0)])]).phrase(visit,[verb([lexmatch([visit]),inputmatch([visit]),tag(verb),tokens([visit])])],49/5,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C1512346',visit,'Patient Visit',[visit],[hlca],[[[1,1],[1,1],0]],yes,no,['HL7V3.0','LNC','MTH','NCI','NCI_CDISC','NLMSubSyn'],[49/5],0,0)])]).phrase(-,[punc([inputmatch([-]),tokens([])])],55/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase(will,[modal([lexmatch([will]),inputmatch([will]),tag(modal),tokens([will])])],57/4,[]).candidates(0,0,0,0,[]).mappings([]).phrase('refer to Dr Dolan',[verb([lexmatch([refer]),inputmatch([refer]),tag(verb),tokens([refer])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),mod([inputmatch(['Dolan']),tag(noun),tokens([dolan])])],62/17,[]).candidates(6,0,0,6,[]).mappings([map(-708,[ev(-770,'C0205543','Refer','Referring',[refer],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI'],[62/5],0,0),ev(-770,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[3,3],[1,1],0]],yes,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[71/2],0,0)])]).phrase('for discussion',[prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),head([lexmatch([discussion]),inputmatch([discussion]),tag(noun),tokens([discussion])])],80/14,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C0557061','Discussion','Discussion (procedure)',[discussion],[topp],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','SNOMEDCT_US'],[84/10],0,0)])]).phrase('re treating',[verb([lexmatch(['re treating']),inputmatch([re,treating]),tag(verb),tokens([re,treating])])],95/11,[]).candidates(5,2,0,3,[]).mappings([map(-888,[ev(-861,'C0556581','{RE}','Retinol equivalents',[re],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_UCUM','SNOMEDCT_US'],[95/2],0,0),ev(-861,'C1522326','Treating','Treating',[treating],[ftcn],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI'],[98/8],0,0)])]).phrase('this now',[det([lexmatch([this]),inputmatch([this]),tag(det),tokens([this])]),adv([lexmatch([now]),inputmatch([now]),tag(adv),tokens([now])])],107/8,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C1948052','Now','Now (temporal qualifier)',[now],[tmco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[112/3],0,0)])]).phrase(especially,[adv([lexmatch([especially]),inputmatch([especially]),tag(adv),tokens([especially])])],116/10,[]).candidates(0,0,0,0,[]).mappings([]).phrase(given,[verb([lexmatch([given]),inputmatch([given]),tag(verb),tokens([given])])],127/5,[]).candidates(4,0,0,4,[]).mappings([map(-1000,[ev(-1000,'C1947971','Given','Give - dosing instruction imperative',[given],[ftcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','SNOMEDCT_US'],[127/5],0,0)])]).phrase('her history of cardiac ds',[pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),head([lexmatch([history]),inputmatch([history]),tag(noun),tokens([history])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([cardiac]),inputmatch([cardiac]),tag(adj),tokens([cardiac])]),mod([lexmatch([ds]),inputmatch([ds]),tag(noun),tokens([ds])])],133/25,[]).candidates(11,2,0,9,[]).mappings([map(-696,[ev(-760,'C2004062','History','History of previous events',[history],[fndg],[[[2,2],[1,1],0]],yes,no,['CHV','LCH','MTH','NCI'],[137/7],0,0),ev(-593,'C1522601','Cardiac','Cardiac - anatomy qualifier',[cardiac],[spco],[[[4,4],[1,1],0]],no,no,['MTH','NCI','NCI_NCI-GLOSS'],[148/7],0,0),ev(-593,'C3714751','DS','Disease Steps Questionnaire',[ds],[inpr],[[[5,5],[1,1],0]],no,no,['MTH','NCI','NCI_CDISC'],[156/2],0,0)])]).phrase('in the last couple of years.',[prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch([last]),inputmatch([last]),tag(adj),tokens([last])]),head([lexmatch([couple]),inputmatch([couple]),tag(noun),tokens([couple])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([years]),inputmatch([years]),tag(noun),tokens([years])]),punc([inputmatch(['.']),tokens([])])],159/28,[]).candidates(6,1,0,5,[]).mappings([map(-666,[ev(-586,'C0332285','In','Within',[in],[spco],[[[1,1],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[159/2],0,0),ev(-753,'C0010222',couple,'Couples (persons)',[couple],[famg],[[[4,4],[1,1],0]],yes,no,['CHV','MSH','MTH'],[171/6],0,0),ev(-586,'C0439234','YEARS',year,[years],[tmco],[[[6,6],[1,1],0]],no,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[181/5],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"3. ",0/3,[]).phrase('3.',[shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),punc([inputmatch(['.']),tokens([])])],0/2,[]).candidates(4,0,0,4,[]).mappings([map(-1000,[ev(-1000,'C0439086','<3','<3 (qualifier value)',['3'],[qnco],[[[1,1],[1,1],0]],yes,no,['MTH','SNOMEDCT_US'],[0/1],0,0)])]).'EOU'.utterance('00000000.ti.2',"blood pressure - slightly elevated above what would want it. ",3/61,[]).phrase('blood pressure -',[head([lexmatch(['blood pressure']),inputmatch([blood,pressure]),tag(noun),tokens([blood,pressure])]),punc([inputmatch([-]),tokens([])])],3/16,[]).candidates(17,8,0,9,[]).mappings([map(-1000,[ev(-1000,'C1271104','Blood Pressure','Blood pressure finding',[blood,pressure],[fndg],[[[1,2],[1,2],0]],yes,no,['MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[3/14],0,0)])]).phrase(slightly,[adv([lexmatch([slightly]),inputmatch([slightly]),tag(adv),tokens([slightly])])],20/8,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C0750482','Slightly','Slightly (qualifier value)',[slightly],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','SNOMEDCT_US'],[20/8],0,0)])]).phrase('elevated above what',[verb([lexmatch([elevated]),inputmatch([elevated]),tag(verb),tokens([elevated])]),prep([lexmatch([above]),inputmatch([above]),tag(prep),tokens([above])]),pron([lexmatch([what]),inputmatch([what]),tag(pron),tokens([what])])],29/19,[]).candidates(2,0,0,2,[]).mappings([map(-790,[ev(-790,'C0205250','Elevated','High',[elevated],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[29/8],0,0)])]).phrase(would,[modal([lexmatch([would]),inputmatch([would]),tag(modal),tokens([would])])],49/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase(want,[verb([lexmatch([want]),inputmatch([want]),tag(verb),tokens([want])])],55/4,[]).candidates(0,0,0,0,[]).mappings([]).phrase('it.',[pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])]),punc([inputmatch(['.']),tokens([])])],60/3,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.utterance('00000000.ti.3',"Will recheck on follow-up which will be soon",64/44,[]).phrase('Will',[modal([lexmatch([will]),inputmatch(['Will']),tag(modal),tokens([will])])],64/4,[]).candidates(0,0,0,0,[]).mappings([]).phrase('recheck on follow-up',[verb([lexmatch([recheck]),inputmatch([recheck]),tag(verb),tokens([recheck])]),prep([lexmatch([on]),inputmatch([on]),tag(prep),tokens([on])]),mod([lexmatch(['follow-up']),inputmatch([follow,-,up]),tag(adj),tokens([follow,up])])],69/20,[]).candidates(6,0,0,6,[]).mappings([map(-833,[ev(-833,'C1522577','Follow Up','follow-up',[follow,up],[hlca],[[[3,3],[1,1],0],[[4,4],[2,2],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS'],[80/9],0,0)])]).phrase(which,[pron([lexmatch([which]),inputmatch([which]),tag(pron),tokens([which])])],90/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase(will,[modal([lexmatch([will]),inputmatch([will]),tag(modal),tokens([will])])],96/4,[]).candidates(0,0,0,0,[]).mappings([]).phrase(be,[aux([lexmatch([be]),inputmatch([be]),tag(aux),tokens([be])])],101/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase(soon,[adv([lexmatch([soon]),inputmatch([soon]),tag(adv),tokens([soon])])],104/4,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"4. ",0/3,[]).phrase('4.',[shapes([inputmatch(['4']),features([integer]),tokens(['4'])]),punc([inputmatch(['.']),tokens([])])],0/2,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C3838679','4+','4+ Answer to question',['4'],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[0/1],0,0)])]).'EOU'.utterance('00000000.ti.2',"Chol- will check fastings next visit. ",3/38,[]).phrase('Chol-',[head([lexmatch([chol]),inputmatch(['Chol']),tag(noun),tokens([chol])]),punc([inputmatch([-]),tokens([])])],3/5,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0201950','CHOL','Cholesterol measurement test',[chol],[lbpr],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[3/4],0,0)])]).phrase(will,[modal([lexmatch([will]),inputmatch([will]),tag(modal),tokens([will])])],9/4,[]).candidates(0,0,0,0,[]).mappings([]).phrase(check,[verb([lexmatch([check]),inputmatch([check]),tag(verb),tokens([check])])],14/5,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C1283174','Check','Checking (action)',[check],[acty],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI','SNOMEDCT_US'],[14/5],0,0)])]).phrase('fastings next visit.',[mod([inputmatch([fastings]),tag(noun),tokens([fastings])]),mod([lexmatch([next]),inputmatch([next]),tag(adj),tokens([next])]),head([lexmatch([visit]),inputmatch([visit]),tag(noun),tokens([visit])]),punc([inputmatch(['.']),tokens([])])],20/20,[]).candidates(6,0,0,6,[]).mappings([map(-790,[ev(-660,'C0205117',next,'Adjacent',[next],[spco],[[[2,2],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[29/4],0,0),ev(-827,'C0545082','Visit','Visit',[visit],[bhvr],[[[3,3],[1,1],0]],yes,no,['MTH','NCI','SNM'],[34/5],0,0)])]).'EOU'.utterance('00000000.ti.3',"Lfts okay in June",41/17,[]).phrase('Lfts',[head([lexmatch([lfts]),inputmatch(['Lfts']),tag(noun),tokens([lfts])])],41/4,[]).candidates(1,0,0,1,[]).mappings([map(-966,[ev(-966,'C0023901','LFT','Liver Function Tests',[lft],[lbpr],[[[1,1],[1,1],1]],yes,no,['AOD','CHV','LCH','LCH_NW','MSH','MTH','MTHMST','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[41/4],0,0)])]).phrase('okay in June',[verb([lexmatch([okay]),inputmatch([okay]),tag(verb),tokens([okay])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([june]),inputmatch(['June']),tag(noun),tokens([june])])],46/12,[]).candidates(1,0,0,1,[]).mappings([map(-790,[ev(-790,'C3829443','June','June',[june],[tmco],[[[3,3],[1,1],0]],yes,no,['LNC','NCI'],[54/4],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Due for annual - will schedule next avail.",0/42,[]).phrase('Due for annual -',[head([lexmatch([due]),inputmatch(['Due']),tag(adj),tokens([due])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([annual]),inputmatch([annual]),tag(adj),tokens([annual])]),punc([inputmatch([-]),tokens([])])],0/16,[]).candidates(3,0,0,3,[]).mappings([map(-746,[ev(-790,'C0678226',due,'Due to',[due],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[0/3],0,0),ev(-623,'C0332181','Annual','Annual',[annual],[tmco],[[[3,3],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[8/6],0,0)])]).phrase(will,[modal([lexmatch([will]),inputmatch([will]),tag(modal),tokens([will])])],17/4,[]).candidates(0,0,0,0,[]).mappings([]).phrase(schedule,[verb([lexmatch([schedule]),inputmatch([schedule]),tag(verb),tokens([schedule])])],22/8,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0086960','Schedule','Schedule (document type)',[schedule],[inpr],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','MTH','NCI','NCI_NCI-GLOSS'],[22/8],0,0)])]).phrase('next avail.',[mod([lexmatch([next]),inputmatch([next]),tag(adj),tokens([next])]),head([lexmatch([avail]),inputmatch([avail]),tag(noun),tokens([avail])]),punc([inputmatch(['.']),tokens([])])],31/11,[]).candidates(3,0,0,3,[]).mappings([map(-694,[ev(-694,'C0332282','Next','Following',[next],[tmco],[[[1,1],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[31/4],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Beverly Thiel MD",0/16,[]).phrase('Beverly Thiel MD',[mod([lexmatch([beverly]),inputmatch(['Beverly']),tag(noun),tokens([beverly])]),mod([inputmatch(['Thiel']),tag(noun),tokens([thiel])]),head([lexmatch([md]),inputmatch(['MD']),tag(noun),tokens([md])])],0/16,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1*
-------------Tokens-----------------------
<*?*xml*version*=*"*1 . 0*"*encoding*=*"*UTF*-*8*"*?*>*<*root*>*<*TEXT*>*<*!*punc*CDATA*punc*Record*date*:*2068*-*12*-*05*Narrative*History*Patient*presents*for*uri*.*Walks*-*in*.*Overdue*for*follow - up*by*3*months*.*Started*last*week*.*Sinus*pressure*' '*post nasal drip*' '*headache*' '*ears*blocked*.*No*fevers*.*Slight*white*nasal*cdischarge*.*Taking*advil*sinus*only*helps*transiently*.*Not*getting*better*or*worse*.*No*chest*symptoms*-*coughing*etc*.*.*Got*flu*shot*already*.*Problems*FH*breast cancer*:*37*yo*s*FH*myocardial infarction*:*mother*died*66*yo*Hypertension*Uterine fibroids*:*u / s*2062*Smoking*:*quit*2 / 67*s / p*MI*Hyperlipidemia*:*CRF*mild*chol*' '*cigs*' '*HTN*' '*Fhx*and*known*hx*CAD*in*pt*.*borderline*diabetes mellitus*:*4 / 63*125*' '*follow*hgbaic*VPB*:*2065*-*ETT*showed*freq*PVC\'s*' '*bigeminy*and*couplets*' '*nondx*for*ischemia*Coronary artery disease*:*s / p*ant*SEMI*+*stent*LAD*2 / 67*' '*Dr*Oakley*' '*ETT*Clarkfield*3 / 67*-*neg*scan*for*ischemia*.*Thyroid nodule*:*2065*' '*thyroid scan*2066*consistent*with*hot*nodule*and*toxic multinodular goiter*' '*saw*Dr*Dolan*' '*follow*TSH*.*Medications*Asa*(*ACETYLSALICYLIC Acid*)*325MG*' '*1*Tablet*(*s )*PO*QD*Nitroglycerin*1 / 150*(*0 . 4*Mg*)*1*TAB*SL*x1*PRN*prn*CP*Norvasc*(*AMLODIPINE*)*5MG*' '*1*Tablet*(*s )*PO*QD*Plavix*(*CLOPIDOGREL*)*75*MG*PO*QD*ATENOLOL*50MG*' '*1*Tablet*(*s )*PO*QD*Lipitor*(*ATORVASTATIN*)*10MG*' '*1*Tablet*(*s )*PO*QD*Hctz*(*HYDROCHLOROTHIAZIDE*)*25MG*' '*1*Tablet*(*s )*PO*QD*Zestril*(*LISINOPRIL*)*40MG*' '*1*Tablet*(*s )*PO*QD*Allergies*Ceclor*(*CEFACLOR*)*-*Rash*Physical*Exam*Vital signs*140 / 82*98 . 2*Looks*well*' '*nontoxic*Sinuses*-*nontender*TM\'s*clear*OP*-*negative*without*exudates*neck*-*supple*without*increased*nodes*lungs*-*clear*without*wheezing*on*forced*exp*CVS*-*rrrs2s2*Assessment*and*Plan*1*.*URI*-*no*evidence*of*bact*sinus*infection*.*Needs*decongestion*but*would*like*to*avoid*decong*systemically*given*history*CAD*and*ectopy*in*past*.*Will*use*steam*' '*humidity*' '*nasal*decong*spray*for*3*days*.*Call*if*fevers*' '*worsens*or*persists*.*2*.*Hot*thyroid nodule*-*was*slightly*higher*last*visit*-*will*refer*to*Dr*Dolan*for*discussion*re treating*this*now*especially*given*her*history*of*cardiac*ds*in*the*last*couple*of*years*.*3*.*blood pressure*-*slightly*elevated*above*what*would*want*it*.*Will*recheck*on*follow - up*which*will*be*soon*4*.*Chol*-*will*check*fastings*next*visit*.*Lfts*okay*in*June*Due*for*annual*-*will*schedule*next*avail*.*Beverly*Thiel*MD*'*'*>*<*/*TEXT*>*<*TAGS*>*<*/*TAGS*>*<*/*root*>*
-------------Concepts-----------------------
XML*
Version*
1+',*
0%*
Encoding*
UTF-8*
Root*
Text*
CDATA*
Record*
DATE*
Narrative*
History*
*^patient*
Present*
Walks*
In*
Follow Up*
3 Months*
Started*
/week*
sinus pressure*
DRIP, POSTNASAL*
HEAD ACHE*
EARS*
Blocked*
Fevers*
Slight*
WHITE*
NASAL*
Take*
Advil*
Sinus*
Only*
Help*
Not well*
Worse*
Chest*
symptoms*
COUGHING*
etc.*
FlU*
Shot NOS*
Problems*
-- Breast Cancer*
Yo*
Myocardial infarction*
Mother*
Died*
Yo*
Hypertension*
Uterine Fibroids*
U S*
Smoking*
QUIT*
Mi-2*
HYPERLIPIDEMIA*
MILD*
CHOL*
HTN*
FHX*
KNOWN CAD*
Hx*
PT*
Borderline Diabetes Mellitus*
4+*
Follow*
VPB*
Show*
FREQ*
PVC\'S*
Bigeminy*
Couplets*
ISCHEMIA*
CORONARY ARTERY DISEASE*
Ant*
Stent',*
DR*
NEG*
Scan*
ISCHEMIA*
THYROID NODULE*
Scan*
Consistent with*
hot nodule thyroid*
Toxic multinodular goiter*
SAW*
DR*
Follow*
Medications*
ASA*
Acetylsalicylic Acid*
1+',*
TABLET*
PO*
QD*
NITROGLYCERIN*
0%*
Mg++*
1+',*
Tab*
Norvasc*
AMLODIPINE*
1+',*
TABLET*
PO*
QD*
Plavix*
CLOPIDOGREL*
Mg++*
PO*
QD*
ATENOLOL*
1+',*
TABLET*
PO*
QD*
Lipitor*
ATORVASTATIN*
1+',*
TABLET*
PO*
QD*
HCTZ*
HYDROCHLOROTHIAZIDE*
1+',*
TABLET*
PO*
QD*
Zestril*
LISINOPRIL*
1+',*
TABLET*
PO*
QD*
Allergies*
Ceclor*
CEFACLOR*
RASH*
Physical Exam*
Vital signs*
Looks*
Well*
Nontoxic*
Sinus*
Non-tender*
TM',*
Clear*
Negative*
Exudates*
NECK*
Supple*
Increased*
nodes*
LUNGS*
Clear*
WHEEZING*
Forced*
EXP*
Assessment*
Plan*
1+*
No evidence of*
BACT*
Sinus Infection*
Need*
TO*
History*
CAD*
Ectopic*
Past*
use*
Steam*
Humidity*
Nasal Spray*
Day 3*
Call*
Fevers*
Worsens*
2+',*
hot thyroid nodule*
Slightly*
Higher*
visit*
Refer*
DR*
Discussion*
{RE}*Treating*
Now*
Given*
History*
Cardiac*
DS*
In*
couple*
YEARS*
<3*
Blood Pressure*
Slightly*
Elevated*
Follow Up*
4+*
CHOL*
Check*
next*
Visit*
LFT*
June*
due*
Annual*
Schedule*
Next*
Text*
tags*
tags*
Root*

-------------Unique Concepts-----------------------
Number of unique Concepts = 167
C2348686 - FlU
C1413296 - Yo
C3842591 - 0%
C2919062 - Shot NOS
C2004062 - History
C1272689 - Started
C1963138 - Hypertension
C0521421 - EARS
C1515187 - Take
C0038225 - Steam
C0028778 - Blocked
C0028429 - NASAL
C0520960 - Non-tender
C0034869 - Record
C0205171 - Only
C0678226 - due
C1707981 - XML
C0051696 - AMLODIPINE
C0443221 - Forced
C1547699 - Encoding
C0038257 - Stent',
C1546466 - Problems
C0683368 - symptoms
C3838679 - 4+
C1442461 - 3 Months
C2744539 - TM',
C3841798 - Not well
C0429001 - Couplets
C1279889 - Worse
C0748223 - QUIT
C0557061 - Discussion
C1444637 - Past
C0065374 - LISINOPRIL
C0332181 - Annual
C1744699 - Physical Exam
C1457868 - Worsens
C1719822 - Follow
C1705223 - Tab
C0183089 - SAW
C1428412 - FHX
C1522601 - Cardiac
C0233426 - Looks
C0004147 - ATENOLOL
C0574895 - Ectopic
C0006142 - -- Breast Cancer
C0027552 - Need
C0150404 - Vital signs
C0856873 - Borderline Diabetes Mellitus
C1135957 - Narrative
C0020473 - HYPERLIPIDEMIA
C0020538 - HTN
C0162712 - Norvasc
C1283174 - Check
C2926063 - Myocardial infarction
C1963278 - Bigeminy
C0011008 - DATE
C0205160 - Negative
C0699718 - PT
C0205543 - Refer
C0453996 - Smoking
C1512346 - visit
C1440961 - Mi-2
C0461725 - Nasal Spray
C0749472 - hot nodule thyroid
C0039225 - TABLET
C0010222 - couple
C0332290 - Consistent with
C1707664 - DR
C0545082 - Visit
C0332285 - In
C0600108 - Walks
C0015388 - Exudates
C0150312 - Present
C0042153 - use
C1547282 - Show
C0020517 - Allergies
C0151636 - VPB
C0015967 - Fevers
C0032781 - DRIP, POSTNASAL
C1548556 - etc.
C3714751 - DS
C1546956 - Died
C0333052 - Version
C0007537 - CEFACLOR
C0018681 - HEAD ACHE
C0201950 - CHOL
C3146287 - Well
C1705606 - Text
C0205250 - Higher
C0593507 - Advil
C0026591 - Mother
C1318154 - Root
C0004057 - ASA
C0007457 - WHITE
C1947967 - Call
C0640049 - CDATA
C0441633 - Scan
C0041703 - U S
C0022116 - ISCHEMIA
C1522326 - Treating
C0154143 - Toxic multinodular goiter
C1527391 - Chest
C0205217 - Increased
C0040137 - THYROID NODULE
C0042133 - Uterine Fibroids
C0332173 - QD
C0332174 - /week
C0439234 - YEARS
C2981700 - 2+',
C1414814 - FREQ
C0701133 - Ceclor
C0086960 - Schedule
C1956346 - CORONARY ARTERY DISEASE
C0442027 - PO
C0010200 - COUGHING
C0070166 - CLOPIDOGREL
C0556581 - {RE}
C1709157 - Clear
C1948052 - Now
C0332254 - Supple
C0040363 - TO
C0030471 - Sinus
C0633084 - Plavix
C0016169 - Sinus
C1269765 - Help
C3853545 - NEG
C2981698 - 1+',
C3829443 - June
C0037199 - Sinus Infection
C0439086 - <3
C0746922 - nodes
C0015230 - RASH
C1301732 - Plan
C1522577 - Follow Up
C2598133 - Medications
C3275096 - KNOWN CAD
C0848633 - sinus pressure
C0750482 - Slightly
C0043144 - WHEEZING
C2827734 - 1+
C2945599 - Slight
C0024109 - LUNGS
C1139855 - tags
C1947971 - Given
C0023901 - LFT
C0332125 - No evidence of
C3813548 - CAD
C0593906 - Lipitor
C1555005 - UTF-8
C1417055 - EXP
C0332282 - Next
C3842675 - Day 3
C0020261 - HCTZ
C0286651 - ATORVASTATIN
C0205117 - next
C1516048 - Assessment
C1271104 - Blood Pressure
C0030705 - *^patient
C0262926 - Hx
C0003455 - Ant
C0017887 - NITROGLYCERIN
C1518413 - Nontoxic
C0004618 - BACT
C0020167 - Humidity
C0027530 - NECK
C2346927 - Mg++
C0678140 - Zestril
--------------- Mappings ---------------------
|*XML*Version|
|*1+',*0%|
|*Encoding|
|*UTF-8|
|*Root|
|*Text|
|*CDATA|
|*Record*DATE|
|*Narrative*History|
|**^patient|
|*Present|
|*Walks|
|*In*Follow Up|
|*3 Months|
|*Started*/week|
|*sinus pressure|
|*DRIP, POSTNASAL|
|*HEAD ACHE|
|*EARS|
|*Blocked|
|*Fevers|
|*Slight*WHITE*NASAL|
|*Take*Advil*Sinus|
|*Only|
|*Help|
|*Not well|
|*Worse|
|*Chest*symptoms|
|*COUGHING|
|*etc.|
|*FlU|
|*Shot NOS|
|*Problems|
|*-- Breast Cancer|
|*Yo|
|*Myocardial infarction|
|*Mother|
|*Died|
|*Yo|
|*Hypertension|
|*Uterine Fibroids|
|*U S|
|*Smoking|
|*QUIT*Mi-2|
|*HYPERLIPIDEMIA|
|*MILD*CHOL|
|*HTN|
|*FHX|
|*KNOWN CAD*Hx*PT|
|*Borderline Diabetes Mellitus|
|*4+|
|*Follow|
|*VPB|
|*Show|
|*FREQ*PVC\'S|
|*Bigeminy|
|*Couplets|
|*ISCHEMIA|
|*CORONARY ARTERY DISEASE|
|*Ant*Stent',|
|*DR|
|*NEG*Scan*ISCHEMIA|
|*THYROID NODULE|
|*Scan*Consistent with*hot nodule thyroid|
|*Toxic multinodular goiter|
|*SAW*DR|
|*Follow|
|*Medications|
|*ASA|
|*Acetylsalicylic Acid|
|*1+',*TABLET|
|*PO*QD|
|*NITROGLYCERIN|
|*0%*Mg++|
|*1+',*Tab|
|*Norvasc|
|*AMLODIPINE|
|*1+',*TABLET|
|*PO*QD|
|*Plavix|
|*CLOPIDOGREL|
|*Mg++*PO*QD|
|*ATENOLOL|
|*1+',*TABLET|
|*PO*QD|
|*Lipitor|
|*ATORVASTATIN|
|*1+',*TABLET|
|*PO*QD|
|*HCTZ|
|*HYDROCHLOROTHIAZIDE|
|*1+',*TABLET|
|*PO*QD|
|*Zestril|
|*LISINOPRIL|
|*1+',*TABLET|
|*PO*QD|
|*Allergies|
|*Ceclor|
|*CEFACLOR|
|*RASH|
|*Physical Exam|
|*Vital signs|
|*Looks|
|*Well|
|*Nontoxic|
|*Sinus*Non-tender|
|*TM',|
|*Clear|
|*Negative*Exudates|
|*NECK*Supple*Increased*nodes|
|*LUNGS*Clear*WHEEZING|
|*Forced*EXP|
|*Assessment|
|*Plan|
|*1+|
|*No evidence of*BACT*Sinus Infection|
|*Need|
|*TO|
|*History*CAD|
|*Ectopic*Past|
|*use|
|*Steam|
|*Humidity|
|*Nasal Spray*Day 3|
|*Call|
|*Fevers|
|*Worsens|
|*2+',|
|*hot thyroid nodule|
|*Slightly*Higher|
|*visit|
|*Refer*DR|
|*Discussion|
|*{RE}*Treating|
|*Now|
|*Given|
|*History*Cardiac*DS|
|*In*couple*YEARS|
|*<3|
|*Blood Pressure|
|*Slightly|
|*Elevated|
|*Follow Up|
|*4+|
|*CHOL|
|*Check|
|*next*Visit|
|*LFT|
|*June|
|*due*Annual|
|*Schedule|
|*Next|
|*Text|
|*tags|
|*tags|
|*Root|

-------------Other-----------------------
Citation has title? - 1
Citation has abstract? - 0
Citation Title: <*?*xml*version*=*"*1 . 0*"*encoding*=*"*UTF*-*8*"*?*>*<*root*>*<*TEXT*>*<*!*punc*CDATA*punc*Record*date*:*2068*-*12*-*05*Narrative*History*Patient*presents*for*uri*.*Walks*-*in*.*Overdue*for*follow - up*by*3*months*.*Started*last*week*.*Sinus*pressure*' '*post nasal drip*' '*headache*' '*ears*blocked*.*No*fevers*.*Slight*white*nasal*cdischarge*.*Taking*advil*sinus*only*helps*transiently*.*Not*getting*better*or*worse*.*No*chest*symptoms*-*coughing*etc*.*.*Got*flu*shot*already*.*Problems*FH*breast cancer*:*37*yo*s*FH*myocardial infarction*:*mother*died*66*yo*Hypertension*Uterine fibroids*:*u / s*2062*Smoking*:*quit*2 / 67*s / p*MI*Hyperlipidemia*:*CRF*mild*chol*' '*cigs*' '*HTN*' '*Fhx*and*known*hx*CAD*in*pt*.*borderline*diabetes mellitus*:*4 / 63*125*' '*follow*hgbaic*VPB*:*2065*-*ETT*showed*freq*PVC\'s*' '*bigeminy*and*couplets*' '*nondx*for*ischemia*Coronary artery disease*:*s / p*ant*SEMI*+*stent*LAD*2 / 67*' '*Dr*Oakley*' '*ETT*Clarkfield*3 / 67*-*neg*scan*for*ischemia*.*Thyroid nodule*:*2065*' '*thyroid scan*2066*consistent*with*hot*nodule*and*toxic multinodular goiter*' '*saw*Dr*Dolan*' '*follow*TSH*.*Medications*Asa*(*ACETYLSALICYLIC Acid*)*325MG*' '*1*Tablet*(*s )*PO*QD*Nitroglycerin*1 / 150*(*0 . 4*Mg*)*1*TAB*SL*x1*PRN*prn*CP*Norvasc*(*AMLODIPINE*)*5MG*' '*1*Tablet*(*s )*PO*QD*Plavix*(*CLOPIDOGREL*)*75*MG*PO*QD*ATENOLOL*50MG*' '*1*Tablet*(*s )*PO*QD*Lipitor*(*ATORVASTATIN*)*10MG*' '*1*Tablet*(*s )*PO*QD*Hctz*(*HYDROCHLOROTHIAZIDE*)*25MG*' '*1*Tablet*(*s )*PO*QD*Zestril*(*LISINOPRIL*)*40MG*' '*1*Tablet*(*s )*PO*QD*Allergies*Ceclor*(*CEFACLOR*)*-*Rash*Physical*Exam*Vital signs*140 / 82*98 . 2*Looks*well*' '*nontoxic*Sinuses*-*nontender*TM\'s*clear*OP*-*negative*without*exudates*neck*-*supple*without*increased*nodes*lungs*-*clear*without*wheezing*on*forced*exp*CVS*-*rrrs2s2*Assessment*and*Plan*1*.*URI*-*no*evidence*of*bact*sinus*infection*.*Needs*decongestion*but*would*like*to*avoid*decong*systemically*given*history*CAD*and*ectopy*in*past*.*Will*use*steam*' '*humidity*' '*nasal*decong*spray*for*3*days*.*Call*if*fevers*' '*worsens*or*persists*.*2*.*Hot*thyroid nodule*-*was*slightly*higher*last*visit*-*will*refer*to*Dr*Dolan*for*discussion*re treating*this*now*especially*given*her*history*of*cardiac*ds*in*the*last*couple*of*years*.*3*.*blood pressure*-*slightly*elevated*above*what*would*want*it*.*Will*recheck*on*follow - up*which*will*be*soon*4*.*Chol*-*will*check*fastings*next*visit*.*Lfts*okay*in*June*Due*for*annual*-*will*schedule*next*avail*.*Beverly*Thiel*MD*'*'*>*<*/*TEXT*>*<*TAGS*>*<*/*TAGS*>*<*/*root*>*
Citation Abstract: 
--------------  Final Other --------------------
Citation equals itself?: 1
Citation equals its title?: 1
Citation equals its abstract?: 0
Citation contains one of its own concepts?: 1
Citation contains a concept that it doesn't contain?: 0

Utterance toStrings
utterance:
   00000000.ti.1',"<?xml version=""1.0"" encoding=""UTF-8""?> <root>   <TEXT><![CDATA[",0/63,[]).phrase('<?xml version',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([?]),tokens([])]),mod([lexmatch([xml]),inputmatch([xml]),tag(noun),tokens([xml])]),head([lexmatch([version]),inputmatch([version]),tag(noun),tokens([version])])],0/13,[]).candidates(3,0,0,3,[]).mappings([map(-888,[ev(-694,'C1707981','XML','Extensible Markup Language',[xml],[inpr],[[[1,1],[1,1],0]],no,no,['HL7V3.0','NCI'],[2/3],0,0),ev(-861,'C0333052','Version','Version',[version],[ftcn],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','MTHICD9','NCI','NCI_CDISC'],[6/7],0,0)])]).phrase('="1.0"',[punc([inputmatch([=]),tokens([])]),punc([inputmatch(['"']),tokens([])]),shapes([inputmatch(['1','.','0']),features([real_number]),tokens(['1','0'])]),punc([inputmatch(['"']),tokens([])])],13/6,[]).candidates(4,0,0,4,[]).mappings([map(-888,[ev(-861,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[15/1],0,0),ev(-861,'C3842591','0%','0%',['0'],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC'],[17/1],0,0)])]).phrase(encoding,[verb([lexmatch([encoding]),inputmatch([encoding]),tag(verb),tokens([encoding])])],20/8,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1547699','Encoding','MIME encoding',[encoding],[idcn],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH'],[20/8],0,0)])]).phrase('="UTF-8"?',[punc([inputmatch([=]),tokens([])]),punc([inputmatch(['"']),tokens([])]),mod([lexmatch([utf]),inputmatch(['UTF']),tag(noun),tokens([utf])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['8']),features([integer]),tokens(['8'])]),punc([inputmatch(['"']),tokens([])]),punc([inputmatch([?]),tokens([])])],28/9,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C1555005','UTF-8','UTF-8',[utf,'8'],[inpr],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['HL7V3.0'],[30/5],0,0)])]).phrase(>,[punc([inputmatch([>]),tokens([])])],37/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('<root',[punc([inputmatch([<]),tokens([])]),head([lexmatch([root]),inputmatch([root]),tag(noun),tokens([root])])],39/5,[]).candidates(4,0,0,4,[]).mappings([map(-1000,[ev(-1000,'C1318154','Root','Root body part',[root],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH'],[40/4],0,0)])]).phrase(>,[punc([inputmatch([>]),tokens([])])],44/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('<TEXT',[punc([inputmatch([<]),tokens([])]),head([lexmatch([text]),inputmatch(['TEXT']),tag(noun),tokens([text])])],48/5,[]).candidates(4,0,0,4,[]).mappings([map(-1000,[ev(-1000,'C1705606','Text','Text Line',[text],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[49/4],0,0)])]).phrase(>,[punc([inputmatch([>]),tokens([])])],53/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('<!',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([!]),tokens([])])],54/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('[CDATA',[punc([inputmatch(['[']),tokens([])]),head([inputmatch(['CDATA']),tag(noun),tokens([cdata])])],56/6,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0640049','CDATA','3-chloro-4-dimethylaminothioangelicin',[cdata],[orch],[[[1,1],[1,1],0]],yes,no,['MSH'],[57/5],0,0)])]).phrase('[',[punc([inputmatch(['[']),tokens([])])],62/1,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Record date: 2068-12-05",0/23,[]).phrase('Record date',[mod([lexmatch([record]),inputmatch(['Record']),tag(noun),tokens([record])]),head([lexmatch([date]),inputmatch([date]),tag(noun),tokens([date])])],0/11,[]).candidates(4,0,0,4,[]).mappings([map(-888,[ev(-694,'C0034869','Record','Records',[record],[inpr],[[[1,1],[1,1],0]],no,no,['CHV','HL7V3.0','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA'],[0/6],0,0),ev(-861,'C0011008','DATE','Date in time',[date],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MSH','MTH','NCI','NCI_CareLex','NCI_NICHD','SNOMEDCT_US'],[7/4],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],11/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('2068-12-05',[shapes([inputmatch(['2068']),features([integer]),tokens(['2068'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['12']),features([integer]),tokens(['12'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['05']),features([integer]),tokens(['05'])])],13/10,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Narrative History",0/17,[]).phrase('Narrative History',[mod([lexmatch([narrative]),inputmatch(['Narrative']),tag(adj),tokens([narrative])]),head([lexmatch([history]),inputmatch(['History']),tag(noun),tokens([history])])],0/17,[]).candidates(9,2,0,7,[]).mappings([map(-888,[ev(-694,'C1135957','Narrative','Narration',[narrative],[socb],[[[1,1],[1,1],0]],no,no,['CHV','MSH','MTH','NCI'],[0/9],0,0),ev(-861,'C2004062','History','History of previous events',[history],[fndg],[[[2,2],[1,1],0]],yes,no,['CHV','LCH','MTH','NCI'],[10/7],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Patient presents for uri.  ",1/27,[]).phrase('Patient',[head([lexmatch([patient]),inputmatch(['Patient']),tag(noun),tokens([patient])])],1/7,[]).candidates(4,0,0,4,[]).mappings([map(-1000,[ev(-1000,'C0030705','*^patient','Patients',[patient],[podg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_DICOM','NCI_FDA','SNOMEDCT_US'],[1/7],0,0)])]).phrase('presents for uri.',[verb([lexmatch([presents]),inputmatch([presents]),tag(verb),tokens([presents])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([uri]),inputmatch([uri]),tag(noun),tokens([uri])]),punc([inputmatch(['.']),tokens([])])],9/17,[]).candidates(2,0,0,2,[]).mappings([map(-790,[ev(-790,'C0150312','Present','Present',[present],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[9/8],0,0)])]).'EOU'.utterance('00000000.ti.2',"Walks -in .  Overdue for follow-up by 3 months.",28/47,[]).phrase('Walks -',[head([lexmatch([walks]),inputmatch(['Walks']),tag(noun),tokens([walks])]),punc([inputmatch([-]),tokens([])])],28/7,[]).candidates(2,1,0,1,[]).mappings([map(-1000,[ev(-1000,'C0600108','Walks','Does walk',[walks],[fndg],[[[1,1],[1,1],0]],yes,no,['SNOMEDCT_US'],[28/5],0,0)])]).phrase('in .  Overdue for follow-up',[prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),punc([inputmatch(['.']),tokens([])]),head([lexmatch([overdue]),inputmatch(['Overdue']),tag(adj),tokens([overdue])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch(['follow-up']),inputmatch([follow,-,up]),tag(adj),tokens([follow,up])])],35/27,[]).candidates(8,0,0,8,[]).mappings([map(-579,[ev(-593,'C0150312','In','Present',[in],[qnco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[35/2],0,0),ev(-640,'C1522577','Follow Up','follow-up',[follow,up],[hlca],[[[4,4],[1,1],0],[[5,5],[2,2],0]],no,no,['MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS'],[53/9],0,0)])]).phrase('by 3 months.',[prep([lexmatch([by]),inputmatch([by]),tag(prep),tokens([by])]),shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),head([lexmatch([months]),inputmatch([months]),tag(noun),tokens([months])]),punc([inputmatch(['.']),tokens([])])],63/12,[]).candidates(8,2,0,6,[]).mappings([map(-1000,[ev(-1000,'C1442461','3 Months','3 Months',['3',months],[tmco],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['HL7V2.5','LNC','MTH'],[66/8],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Started last week.   ",0/21,[]).phrase('Started last week.',[mod([lexmatch([started]),inputmatch(['Started']),tag(adj),tokens([started])]),mod([lexmatch([last]),inputmatch([last]),tag(adj),tokens([last])]),head([lexmatch([week]),inputmatch([week]),tag(noun),tokens([week])]),punc([inputmatch(['.']),tokens([])])],0/18,[]).candidates(4,1,0,3,[]).mappings([map(-802,[ev(-660,'C1272689','Started','Started',[started],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','MTH','SNOMEDCT_US'],[0/7],0,0),ev(-827,'C0332174','/week','Weekly',[week],[tmco],[[[3,3],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[13/4],0,0)])]).'EOU'.utterance('00000000.ti.2',"Sinus pressure, post nasal drip , headache , ears blocked.",21/58,[]).phrase('Sinus pressure,',[mod([lexmatch([sinus]),inputmatch(['Sinus']),tag(noun),tokens([sinus])]),head([lexmatch([pressure]),inputmatch([pressure]),tag(noun),tokens([pressure])]),punc([inputmatch([',']),tokens([])])],21/15,[]).candidates(7,0,0,7,[]).mappings([map(-1000,[ev(-1000,'C0848633','sinus pressure','sinus pressure',[sinus,pressure],[sosy],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','NLMSubSyn'],[21/14],0,0)])]).phrase('post nasal drip ,',[head([lexmatch(['post nasal drip']),inputmatch([post,nasal,drip]),tag(noun),tokens([post,nasal,drip])]),punc([inputmatch([',']),tokens([])])],37/17,[]).candidates(6,1,0,5,[]).mappings([map(-1000,[ev(-1000,'C0032781','DRIP, POSTNASAL','Posterior rhinorrhea',[postnasal,drip],[sosy],[[[1,2],[1,1],0],[[3,3],[2,2],0]],yes,no,['CHV','COSTAR','CST','ICD10CM','ICD9CM','MTH','NCI','NCI_CTCAE','NCI_NICHD','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[37/15],0,0)])]).phrase('headache ,',[head([lexmatch([headache]),inputmatch([headache]),tag(noun),tokens([headache])]),punc([inputmatch([',']),tokens([])])],55/10,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0018681','HEAD ACHE','Headache',[head,ache],[sosy],[[[1,1],[1,2],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NCI_FDA','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[55/8],0,0)])]).phrase(ears,[head([lexmatch([ears]),inputmatch([ears]),tag(noun),tokens([ears])])],66/4,[]).candidates(6,4,0,2,[]).mappings([map(-1000,[ev(-1000,'C0521421','EARS','Entire ear',[ears],[bpoc],[[[1,1],[1,1],0]],yes,no,['MTH','NLMSubSyn','SNMI','SNOMEDCT_US'],[66/4],0,0)])]).phrase('blocked.',[verb([lexmatch([blocked]),inputmatch([blocked]),tag(verb),tokens([blocked])]),punc([inputmatch(['.']),tokens([])])],71/8,[]).candidates(13,11,0,2,[]).mappings([map(-1000,[ev(-1000,'C0028778','Blocked','Obstruction',[blocked],[patf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LCH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US'],[71/7],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([negation(nega,no,[0/2],['C0015967':'Fevers'],[3/6])]).utterance('00000000.ti.1',"No fevers.",0/10,[]).phrase('No fevers.',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([fevers]),inputmatch([fevers]),tag(noun),tokens([fevers])]),punc([inputmatch(['.']),tokens([])])],0/10,[]).candidates(2,1,0,1,[]).mappings([map(-1000,[ev(-1000,'C0015967','Fevers','Fever',[fevers],[fndg],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CHV','COSTAR','CSP','CST','DXP','GO','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','QMR','SNM','SNMI','SNOMEDCT_US'],[3/6],0,1)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Slight white nasal cdischarge.",0/30,[]).phrase('Slight white nasal cdischarge.',[mod([lexmatch([slight]),inputmatch(['Slight']),tag(adj),tokens([slight])]),mod([lexmatch([white]),inputmatch([white]),tag(adj),tokens([white])]),mod([lexmatch([nasal]),inputmatch([nasal]),tag(adj),tokens([nasal])]),head([inputmatch([cdischarge]),tag(noun),tokens([cdischarge])]),punc([inputmatch(['.']),tokens([])])],0/30,[]).candidates(6,0,0,6,[]).mappings([map(-608,[ev(-645,'C2945599','Slight','Mild (qualifier value)',[slight],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[0/6],0,0),ev(-645,'C0007457','WHITE','Caucasoid Race',[white],[popg],[[[2,2],[1,1],0]],no,no,['AOD','CHV','CSP','DXP','HL7V3.0','LCH_NW','MSH','MTH','NCI','NCI_CDC','NCI_CDISC','NCI_FDA','NLMSubSyn','SNMI','SNOMEDCT_US'],[7/5],0,0),ev(-645,'C0028429','NASAL','Nose',[nasal],[bpoc],[[[3,3],[1,1],0]],no,no,['AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[13/5],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Taking advil sinus only helps transiently.",0/42,[]).phrase('Taking advil sinus',[mod([lexmatch([taking]),inputmatch(['Taking']),tag(adj),tokens([taking])]),mod([lexmatch([advil]),inputmatch([advil]),tag(noun),tokens([advil])]),head([lexmatch([sinus]),inputmatch([sinus]),tag(noun),tokens([sinus])])],0/18,[]).candidates(6,0,0,6,[]).mappings([map(-840,[ev(-627,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],1]],no,no,['NCI','SNOMEDCT_US'],[0/6],0,0),ev(-660,'C0593507','Advil','Advil',[advil],[orch,phsu],[[[2,2],[1,1],0]],no,no,['CHV','MTH','NCI_NCI-GLOSS','RXNORM'],[7/5],0,0),ev(-827,'C0030471','Sinus','Nasal sinus',[sinus],[bsoj],[[[3,3],[1,1],0]],yes,no,['CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US','UWDA'],[13/5],0,0)])]).phrase(only,[adv([lexmatch([only]),inputmatch([only]),tag(adv),tokens([only])])],19/4,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C0205171','Only','Singular',[only],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[19/4],0,0)])]).phrase(helps,[verb([lexmatch([helps]),inputmatch([helps]),tag(verb),tokens([helps])])],24/5,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1269765','Help','Assisted (qualifier value)',[help],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[24/5],0,0)])]).phrase('transiently.',[adv([lexmatch([transiently]),inputmatch([transiently]),tag(adv),tokens([transiently])]),punc([inputmatch(['.']),tokens([])])],30/12,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([negation(nega,not,[0/3],['C1279889':'Worse'],[22/5])]).utterance('00000000.ti.1',"Not getting better or worse.",0/28,[]).phrase('Not getting better',[adv([lexmatch([not]),inputmatch(['Not']),tag(adv),tokens([not])]),head([lexmatch([getting]),inputmatch([getting]),tag(noun),tokens([getting])]),adv([lexmatch([better]),inputmatch([better]),tag(adv),tokens([better])])],0/18,[]).candidates(5,2,0,3,[]).mappings([map(-730,[ev(-730,'C3841798','Not well','Not well',[not,well],[fndg],[[[1,1],[1,1],0],[[3,3],[2,2],1]],no,no,['LNC'],[0/3,12/6],0,0)])]).phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],19/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('worse.',[head([lexmatch([worse]),inputmatch([worse]),tag(adj),tokens([worse])]),punc([inputmatch(['.']),tokens([])])],22/6,[]).candidates(7,4,0,3,[]).mappings([map(-1000,[ev(-1000,'C1279889','Worse','Deterioration of status',[worse],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','SNOMEDCT_US'],[22/5],0,1)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([negation(nega,no,[0/2],['C0010200':'COUGHING'],[20/8])]).utterance('00000000.ti.1',"No chest symptoms - coughing etc..",0/34,[]).phrase('No chest symptoms -',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),mod([lexmatch([chest]),inputmatch([chest]),tag(noun),tokens([chest])]),head([lexmatch([symptoms]),inputmatch([symptoms]),tag(noun),tokens([symptoms])]),punc([inputmatch([-]),tokens([])])],0/19,[]).candidates(11,7,0,4,[]).mappings([map(-888,[ev(-694,'C1527391','Chest','Anterior thoracic region',[chest],[blor],[[[1,1],[1,1],0]],no,no,['MTH','NLMSubSyn','UWDA'],[3/5],0,0),ev(-861,'C0683368',symptoms,'Symptoms aspect',[symptoms],[ftcn],[[[2,2],[1,1],0]],yes,no,['MSH','MTH'],[9/8],0,0)])]).phrase(coughing,[verb([lexmatch([coughing]),inputmatch([coughing]),tag(verb),tokens([coughing])])],20/8,[]).candidates(2,1,0,1,[]).mappings([map(-1000,[ev(-1000,'C0010200','COUGHING','Coughing',[coughing],[sosy],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','NCI','NCI_CTCAE','NCI_NICHD','NDFRT','OMIM','QMR','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[20/8],0,1)])]).phrase('etc..',[head([lexmatch([etc]),inputmatch([etc]),tag(noun),tokens([etc])]),punc([inputmatch(['.']),tokens([])]),punc([inputmatch(['.']),tokens([])])],29/5,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C1548556','etc.','etc.',[etc],[idcn],[[[1,1],[1,1],0]],yes,no,['HL7V2.5'],[29/3],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Got flu shot already.",0/21,[]).phrase('Got flu',[mod([lexmatch([got]),inputmatch(['Got']),tag(noun),tokens([got])]),head([lexmatch([flu]),inputmatch([flu]),tag(noun),tokens([flu])])],0/7,[]).candidates(3,0,0,3,[]).mappings([map(-861,[ev(-861,'C2348686','FlU','Fluorescence Units',[flu],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI'],[4/3],0,0)])]).phrase(shot,[verb([lexmatch([shot]),inputmatch([shot]),tag(verb),tokens([shot])])],8/4,[]).candidates(6,2,0,4,[]).mappings([map(-1000,[ev(-1000,'C2919062','Shot NOS','Shot (injury)',[shot],[inpo],[[[1,1],[1,1],0]],yes,no,['ICD10CM','MTH'],[8/4],0,0)])]).phrase('already.',[adv([lexmatch([already]),inputmatch([already]),tag(adv),tokens([already])]),punc([inputmatch(['.']),tokens([])])],13/8,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Problems",0/8,[]).phrase('Problems',[head([lexmatch([problems]),inputmatch(['Problems']),tag(noun),tokens([problems])])],0/8,[]).candidates(3,2,0,1,[]).mappings([map(-1000,[ev(-1000,'C1546466','Problems','Problems - What subject filter',[problems],[idcn],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH'],[0/8],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"FH breast cancer : 37 yo s",0/26,[]).phrase('FH breast cancer',[mod([lexmatch([fh]),inputmatch(['FH']),tag(noun),tokens([fh])]),head([lexmatch(['breast cancer']),inputmatch([breast,cancer]),tag(noun),tokens([breast,cancer])])],0/16,[]).candidates(14,7,0,7,[]).mappings([map(-901,[ev(-901,'C0006142','-- Breast Cancer','Malignant neoplasm of breast',[breast,cancer],[neop],[[[2,3],[1,2],0]],yes,no,['AOD','CCS','CHV','CSP','ICD10CM','ICPC','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NLMSubSyn','OMIM','PDQ','SNOMEDCT_US'],[3/13],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],17/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('37 yo s',[shapes([inputmatch(['37']),features([integer]),tokens(['37'])]),mod([lexmatch([yo]),inputmatch([yo]),tag(noun),tokens([yo])]),head([lexmatch([s]),inputmatch([s]),tag(noun),tokens([s])])],19/7,[]).candidates(1,0,0,1,[]).mappings([map(-660,[ev(-660,'C1413296','Yo','CDR2 gene',[yo],[gngm],[[[2,2],[1,1],0]],no,no,['HGNC','MTH','OMIM'],[22/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"FH myocardial infarction : mother died 66 yo",0/44,[]).phrase('FH myocardial infarction',[mod([lexmatch([fh]),inputmatch(['FH']),tag(noun),tokens([fh])]),head([lexmatch(['myocardial infarction']),inputmatch([myocardial,infarction]),tag(noun),tokens([myocardial,infarction])])],0/24,[]).candidates(8,1,0,7,[]).mappings([map(-901,[ev(-901,'C2926063','Myocardial infarction','Myocardial infarction:Finding:Point in time:^Patient:Ordinal',[myocardial,infarction],[clna],[[[2,3],[1,2],0]],yes,no,['LNC','MTH','NLMSubSyn'],[3/21],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],25/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase(mother,[head([lexmatch([mother]),inputmatch([mother]),tag(noun),tokens([mother])])],27/6,[]).candidates(3,2,0,1,[]).mappings([map(-1000,[ev(-1000,'C0026591','Mother','Mother (person)',[mother],[famg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[27/6],0,0)])]).phrase(died,[verb([lexmatch([died]),inputmatch([died]),tag(verb),tokens([died])])],34/4,[]).candidates(8,5,0,3,[]).mappings([map(-1000,[ev(-1000,'C1546956','Died','Patient Outcome - Died',[died],[fndg],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH','NLMSubSyn','SNOMEDCT_US'],[34/4],0,0)])]).phrase('66 yo',[shapes([inputmatch(['66']),features([integer]),tokens(['66'])]),head([lexmatch([yo]),inputmatch([yo]),tag(noun),tokens([yo])])],39/5,[]).candidates(1,0,0,1,[]).mappings([map(-861,[ev(-861,'C1413296','Yo','CDR2 gene',[yo],[gngm],[[[2,2],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[42/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Hypertension",0/12,[]).phrase('Hypertension',[head([lexmatch([hypertension]),inputmatch(['Hypertension']),tag(noun),tokens([hypertension])])],0/12,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1963138','Hypertension','Hypertension Adverse Event',[hypertension],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CTCAE'],[0/12],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Uterine fibroids : u/s 2062",0/27,[]).phrase('Uterine fibroids',[head([lexmatch(['uterine fibroids']),inputmatch(['Uterine',fibroids]),tag(noun),tokens([uterine,fibroids])])],0/16,[]).candidates(5,1,0,4,[]).mappings([map(-1000,[ev(-1000,'C0042133','Uterine Fibroids','Uterine Fibroids',[uterine,fibroids],[neop],[[[1,2],[1,2],0]],yes,no,['CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','LCH_NW','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','OMIM','PDQ','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[0/16],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],17/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('u/s 2062',[mod([lexmatch(['u/s']),inputmatch([u,/,s]),tag(noun),tokens([u,s])]),shapes([inputmatch(['2062']),features([integer]),tokens(['2062'])])],19/8,[]).candidates(1,0,0,1,[]).mappings([map(-901,[ev(-901,'C0041703','U S','United States',[u,s],[geoa],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['AOD','CHV','CSP','HL7V3.0','LCH','LNC','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[19/1,20/1],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Smoking : quit 2/67 s/p MI",0/26,[]).phrase('Smoking',[head([lexmatch([smoking]),inputmatch(['Smoking']),tag(noun),tokens([smoking])])],0/7,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C0453996','Smoking','Tobacco smoking behavior',[smoking],[inbe],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','DXP','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[0/7],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],8/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('quit 2/67 s/p MI',[mod([lexmatch([quit]),inputmatch([quit]),tag(noun),tokens([quit])]),shapes([inputmatch(['2',/,'67']),features([fraction]),tokens(['2','67'])]),prep([lexmatch(['s/p']),inputmatch([s,/,p]),tag(prep),tokens([s,p])]),mod([lexmatch([mi]),inputmatch(['MI']),tag(noun),tokens([mi])])],10/16,[]).candidates(4,0,0,4,[]).mappings([map(-722,[ev(-753,'C0748223','QUIT','QUIT',[quit],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[10/4],0,0),ev(-783,'C1440961','Mi-2','Mi-2',[mi,'2'],[imft],[[[6,6],[1,1],0],[[2,2],[2,2],0]],yes,no,['LNC'],[15/1,24/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Hyperlipidemia : CRF mild chol, cigs, HTN, Fhx and known hx CAD in pt.",0/70,[]).phrase('Hyperlipidemia',[head([lexmatch([hyperlipidemia]),inputmatch(['Hyperlipidemia']),tag(noun),tokens([hyperlipidemia])])],0/14,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C0020473','HYPERLIPIDEMIA','Hyperlipidemia',[hyperlipidemia],[dsyn],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','ICD10CM','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NDFRT','OMIM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[0/14],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],15/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('CRF mild chol,',[mod([lexmatch([crf]),inputmatch(['CRF']),tag(noun),tokens([crf])]),mod([lexmatch([mild]),inputmatch([mild]),tag(adj),tokens([mild])]),head([lexmatch([chol]),inputmatch([chol]),tag(noun),tokens([chol])]),punc([inputmatch([',']),tokens([])])],17/14,[]).candidates(2,0,0,2,[]).mappings([map(-790,[ev(-660,'C2945599','MILD','Mild (qualifier value)',[mild],[qlco],[[[2,2],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[21/4],0,0),ev(-827,'C0201950','CHOL','Cholesterol measurement test',[chol],[lbpr],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[26/4],0,0)])]).phrase('cigs,',[head([lexmatch([cigs]),inputmatch([cigs]),tag(noun),tokens([cigs])]),punc([inputmatch([',']),tokens([])])],32/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase('HTN,',[head([lexmatch([htn]),inputmatch(['HTN']),tag(noun),tokens([htn])]),punc([inputmatch([',']),tokens([])])],38/4,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0020538','HTN','Hypertensive disease',[htn],[dsyn],[[[1,1],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[38/3],0,0)])]).phrase('Fhx',[head([lexmatch([fhx]),inputmatch(['Fhx']),tag(noun),tokens([fhx])])],43/3,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C1428412','FHX','FOXJ2 gene',[fhx],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH'],[43/3],0,0)])]).phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],47/3,[]).candidates(0,0,0,0,[]).mappings([]).phrase('known hx CAD in pt.',[mod([lexmatch([known]),inputmatch([known]),tag(adj),tokens([known])]),mod([lexmatch([hx]),inputmatch([hx]),tag(noun),tokens([hx])]),head([lexmatch([cad]),inputmatch(['CAD']),tag(noun),tokens([cad])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([pt]),inputmatch([pt]),tag(noun),tokens([pt])]),punc([inputmatch(['.']),tokens([])])],51/19,[]).candidates(7,0,0,7,[]).mappings([map(-761,[ev(-797,'C3275096','KNOWN CAD','Known Coronary Artery Disease',[known,cad],[qnco],[[[1,1],[1,1],0],[[3,3],[2,2],0]],yes,no,['NCI','NCI_CDISC','NLMSubSyn'],[51/5,60/3],0,0),ev(-593,'C0262926','Hx','Medical History',[hx],[fndg],[[[2,2],[1,1],0]],no,no,['AIR','AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','NCI_NICHD','NLMSubSyn','SNOMEDCT_US'],[57/2],0,0),ev(-593,'C0699718','PT','Physical therapy (field)',[pt],[bmod],[[[5,5],[1,1],0]],no,no,['CHV','LNC','MTH','NLMSubSyn'],[67/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"borderline diabetes mellitus : 4/63 125 , follow hgbaic",0/55,[]).phrase('borderline diabetes mellitus',[mod([lexmatch([borderline]),inputmatch([borderline]),tag(adj),tokens([borderline])]),head([lexmatch(['diabetes mellitus']),inputmatch([diabetes,mellitus]),tag(noun),tokens([diabetes,mellitus])])],0/28,[]).candidates(7,1,0,6,[]).mappings([map(-1000,[ev(-1000,'C0856873','Borderline Diabetes Mellitus','borderline diabetes',[borderline,diabetes,mellitus],[dsyn],[[[1,1],[1,1],0],[[2,3],[2,3],0]],yes,no,['CHV','NLMSubSyn'],[0/28],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],29/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('4/63 125 ,',[shapes([inputmatch(['4',/,'63']),features([fraction]),tokens(['4','63'])]),shapes([inputmatch(['125']),features([integer]),tokens(['125'])]),punc([inputmatch([',']),tokens([])])],31/10,[]).candidates(1,0,0,1,[]).mappings([map(-827,[ev(-827,'C3838679','4+','4+ Answer to question',['4'],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[31/1],0,0)])]).phrase(follow,[verb([lexmatch([follow]),inputmatch([follow]),tag(verb),tokens([follow])])],42/6,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1719822','Follow','Follow',[follow],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','SNOMEDCT_US'],[42/6],0,0)])]).phrase(hgbaic,[head([inputmatch([hgbaic]),tag(noun),tokens([hgbaic])])],49/6,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"VPB : 2065 - ETT showed freq PVC's, bigeminy and couplets, nondx for ischemia",0/77,[]).phrase('VPB',[head([lexmatch([vpb]),inputmatch(['VPB']),tag(noun),tokens([vpb])])],0/3,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C0151636','VPB','Premature ventricular contractions',[vpb],[patf],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LNC','MSH','MTH','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[0/3],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],4/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('2065 - ETT',[shapes([inputmatch(['2065']),features([integer]),tokens(['2065'])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([ett]),inputmatch(['ETT']),tag(noun),tokens([ett])])],6/10,[]).candidates(0,0,0,0,[]).mappings([]).phrase(showed,[verb([lexmatch([showed]),inputmatch([showed]),tag(verb),tokens([showed])])],17/6,[]).candidates(1,0,0,1,[]).mappings([map(-966,[ev(-966,'C1547282','Show','Show',[show],[anim],[[[1,1],[1,1],1]],yes,no,['HL7V2.5','HL7V3.0'],[17/6],0,0)])]).phrase('freq PVC\'s,',[mod([inputmatch([freq]),tag(noun),tokens([freq])]),head([lexmatch([pvc]),inputmatch(['PVC\'s']),tag(noun),tokens([pvc])]),punc([inputmatch([',']),tokens([])])],24/11,[]).candidates(4,0,0,4,[]).mappings([map(-888,[ev(-694,'C1414814','FREQ','NCS1 gene',[freq],[gngm],[[[1,1],[1,1],0]],no,no,['HGNC','MTH','OMIM'],[24/4],0,0),ev(-861,'C0151636','PVC\'S','Premature ventricular contractions',[pvc],[patf],[[[2,2],[1,1],0]],yes,no,['CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LNC','MSH','MTH','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[29/5],0,0)])]).phrase(bigeminy,[head([lexmatch([bigeminy]),inputmatch([bigeminy]),tag(noun),tokens([bigeminy])])],36/8,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C1963278','Bigeminy','Bigeminy Adverse Event',[bigeminy],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CTCAE'],[36/8],0,0)])]).phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],45/3,[]).candidates(0,0,0,0,[]).mappings([]).phrase('couplets,',[head([lexmatch([couplets]),inputmatch([couplets]),tag(noun),tokens([couplets])]),punc([inputmatch([',']),tokens([])])],49/9,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0429001','Couplets','Paired ventricular premature complexes',[couplets],[patf],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_CDISC','NLMSubSyn','OMIM','SNOMEDCT_US'],[49/8],0,0)])]).phrase('nondx for ischemia',[head([inputmatch([nondx]),tag(noun),tokens([nondx])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([ischemia]),inputmatch([ischemia]),tag(noun),tokens([ischemia])])],59/18,[]).candidates(2,1,0,1,[]).mappings([map(-623,[ev(-623,'C0022116','ISCHEMIA','Ischemia',[ischemia],[patf],[[[3,3],[1,1],0]],no,no,['AOD','CHV','COSTAR','CSP','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US'],[69/8],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Coronary artery disease : s/p ant SEMI + stent LAD 2/67, Dr Oakley, ETT Clarkfield 3/67 - neg scan for ischemia.",0/112,[]).phrase('Coronary artery disease',[head([lexmatch(['coronary artery disease']),inputmatch(['Coronary',artery,disease]),tag(noun),tokens([coronary,artery,disease])])],0/23,[]).candidates(16,4,0,12,[]).mappings([map(-1000,[ev(-1000,'C1956346','CORONARY ARTERY DISEASE','Coronary Artery Disease',[coronary,artery,disease],[dsyn],[[[1,3],[1,3],0]],yes,no,['AOD','COSTAR','CSP','CST','DXP','HPO','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','OMIM','SNMI','SNOMEDCT_US'],[0/23],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],24/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('s/p ant SEMI + stent LAD 2/67,',[prep([lexmatch(['s/p']),inputmatch([s,/,p]),tag(prep),tokens([s,p])]),mod([lexmatch([ant]),inputmatch([ant]),tag(noun),tokens([ant])]),mod([lexmatch([semi]),inputmatch(['SEMI']),tag(noun),tokens([semi])]),punc([inputmatch([+]),tokens([])]),mod([lexmatch([stent]),inputmatch([stent]),tag(noun),tokens([stent])]),mod([lexmatch([lad]),inputmatch(['LAD']),tag(noun),tokens([lad])]),shapes([inputmatch(['2',/,'67']),features([fraction]),tokens(['2','67'])]),punc([inputmatch([',']),tokens([])])],26/30,[]).candidates(3,0,0,3,[]).mappings([map(-728,[ev(-799,'C0003455','Ant','Ants',[ant],[euka],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','MSH','MTH','NCBI','SNM','SNMI','SNOMEDCT_US'],[30/3],0,0),ev(-799,'C0038257','Stent','Stent, device',[stent],[medd],[[[3,3],[1,1],0]],yes,no,['CHV','CSP','MSH','MTH','SNMI','SNOMEDCT_US'],[41/5],0,0)])]).phrase('Dr Oakley,',[mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),head([lexmatch([oakley]),inputmatch(['Oakley']),tag(noun),tokens([oakley])]),punc([inputmatch([',']),tokens([])])],57/10,[]).candidates(5,0,0,5,[]).mappings([map(-694,[ev(-694,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[1,1],[1,1],0]],no,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[57/2],0,0)])]).phrase('ETT Clarkfield 3/67 - neg scan for ischemia.',[mod([lexmatch([ett]),inputmatch(['ETT']),tag(noun),tokens([ett])]),mod([inputmatch(['Clarkfield']),tag(noun),tokens([clarkfield])]),shapes([inputmatch(['3',/,'67']),features([fraction]),tokens(['3','67'])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([neg]),inputmatch([neg]),tag(noun),tokens([neg])]),head([lexmatch([scan]),inputmatch([scan]),tag(noun),tokens([scan])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([ischemia]),inputmatch([ischemia]),tag(noun),tokens([ischemia])]),punc([inputmatch(['.']),tokens([])])],68/44,[]).candidates(6,1,0,5,[]).mappings([map(-645,[ev(-578,'C3853545','NEG','Negative - answer',[neg],[qlco],[[[5,5],[1,1],0]],no,no,['MTH','NCI'],[90/3],0,0),ev(-744,'C0441633','Scan','Scanning',[scan],[diap],[[[6,6],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNOMEDCT_US'],[94/4],0,0),ev(-578,'C0022116','ISCHEMIA','Ischemia',[ischemia],[patf],[[[8,8],[1,1],0]],no,no,['AOD','CHV','COSTAR','CSP','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US'],[103/8],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Thyroid nodule : 2065, thyroid scan 2066 consistent with hot nodule and toxic multinodular goiter, saw Dr Dolan, follow TSH.",0/124,[]).phrase('Thyroid nodule',[head([lexmatch(['thyroid nodule']),inputmatch(['Thyroid',nodule]),tag(noun),tokens([thyroid,nodule])])],0/14,[]).candidates(16,11,0,5,[]).mappings([map(-1000,[ev(-1000,'C0040137','THYROID NODULE','Thyroid Nodule',[thyroid,nodule],[neop],[[[1,2],[1,2],0]],yes,no,['CHV','COSTAR','DXP','MSH','MTH','MTHICD9','NCI','NDFRT','SNM','SNMI','SNOMEDCT_US'],[0/14],0,0)])]).phrase(:,[punc([inputmatch([:]),tokens([])])],15/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('2065,',[shapes([inputmatch(['2065']),features([integer]),tokens(['2065'])]),punc([inputmatch([',']),tokens([])])],17/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase('thyroid scan 2066 consistent with hot nodule',[mod([lexmatch(['thyroid scan']),inputmatch([thyroid,scan]),tag(noun),tokens([thyroid,scan])]),shapes([inputmatch(['2066']),features([integer]),tokens(['2066'])]),head([lexmatch([consistent]),inputmatch([consistent]),tag(adj),tokens([consistent])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([hot]),inputmatch([hot]),tag(adj),tokens([hot])]),mod([lexmatch([nodule]),inputmatch([nodule]),tag(noun),tokens([nodule])])],23/44,[]).candidates(29,13,0,16,[]).mappings([map(-774,[ev(-581,'C0441633','Scan','Scanning',[scan],[diap],[[[2,2],[1,1],0]],no,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNOMEDCT_US'],[31/4],0,0),ev(-778,'C0332290','Consistent with','Consistent with',[consistent,with],[idcn],[[[4,4],[1,1],0],[[5,5],[2,2],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[41/15],0,0),ev(-638,'C0749472','hot nodule thyroid','thyroid nodule hot',[hot,nodule,thyroid],[fndg],[[[6,6],[1,1],0],[[7,7],[2,2],0],[[1,1],[3,3],0]],no,no,['CHV'],[23/7,57/10],0,0)])]).phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],68/3,[]).candidates(0,0,0,0,[]).mappings([]).phrase('toxic multinodular goiter,',[head([lexmatch(['toxic multinodular goiter']),inputmatch([toxic,multinodular,goiter]),tag(noun),tokens([toxic,multinodular,goiter])]),punc([inputmatch([',']),tokens([])])],72/26,[]).candidates(7,0,0,7,[]).mappings([map(-1000,[ev(-1000,'C0154143','Toxic multinodular goiter','Toxic multinodular goiter',[toxic,multinodular,goiter],[dsyn],[[[1,3],[1,3],0]],yes,no,['CHV','COSTAR','DXP','HPO','ICD10CM','ICD9CM','MTHICD9','SNMI','SNOMEDCT_US'],[72/25],0,0)])]).phrase('saw Dr Dolan,',[mod([lexmatch([saw]),inputmatch([saw]),tag(noun),tokens([saw])]),mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),head([inputmatch(['Dolan']),tag(noun),tokens([dolan])]),punc([inputmatch([',']),tokens([])])],99/13,[]).candidates(6,0,0,6,[]).mappings([map(-623,[ev(-660,'C0183089','SAW','saw (device)',[saw],[medd],[[[1,1],[1,1],0]],no,no,['CHV','MTH','SNOMEDCT_US','SPN'],[99/3],0,0),ev(-660,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[2,2],[1,1],0]],no,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[103/2],0,0)])]).phrase(follow,[verb([lexmatch([follow]),inputmatch([follow]),tag(verb),tokens([follow])])],113/6,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1719822','Follow','Follow',[follow],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','SNOMEDCT_US'],[113/6],0,0)])]).phrase('TSH.',[head([lexmatch([tsh]),inputmatch(['TSH']),tag(noun),tokens([tsh])]),punc([inputmatch(['.']),tokens([])])],120/4,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Medications",0/11,[]).phrase('Medications',[head([lexmatch([medications]),inputmatch(['Medications']),tag(noun),tokens([medications])])],0/11,[]).candidates(4,1,0,3,[]).mappings([map(-1000,[ev(-1000,'C2598133','Medications','Medications:-:Point in time:^Patient:-',[medications],[clna],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[0/11],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Asa (ACETYLSALICYLIC Acid) 325MG, 1 Tablet(s) PO QD",0/51,[]).phrase('Asa',[head([lexmatch([asa]),inputmatch(['Asa']),tag(noun),tokens([asa])])],0/3,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C0004057','ASA','Aspirin',[asa],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','MSH','MTH','MTHSPL','NCI','NCI_DCP','NCI_DTP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[0/3],0,0)])]).phrase('(ACETYLSALICYLIC Acid',[punc([inputmatch(['(']),tokens([])]),head([lexmatch(['acetylsalicylic acid']),inputmatch(['ACETYLSALICYLIC','Acid']),tag(noun),tokens([acetylsalicylic,acid])])],4/21,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C0004057','Acetylsalicylic Acid','Aspirin',[acetylsalicylic,acid],[orch,phsu],[[[1,2],[1,2],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','MSH','MTH','MTHSPL','NCI','NCI_DCP','NCI_DTP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[5/20],0,0)])]).phrase(')',[punc([inputmatch([')']),tokens([])])],25/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('325MG,',[head([inputmatch(['325MG']),tag(noun),tokens(['325mg'])]),punc([inputmatch([',']),tokens([])])],27/6,[]).candidates(0,0,0,0,[]).mappings([]).phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],34/8,[]).candidates(5,0,0,5,[]).mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[34/1],0,0),ev(-861,'C0039225','TABLET','Tablet Dosage Form',[tablet],[bodm],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NDFRT','RXNORM','SNMI','SNOMEDCT_US','VANDF'],[36/6],0,0)])]).phrase('(',[punc([inputmatch(['(']),tokens([])])],42/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],43/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],46/5,[]).candidates(3,0,0,3,[]).mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[46/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[49/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Nitroglycerin 1/150 (0.4 Mg) 1 TAB SL x1 PRN prn CP",0/51,[]).phrase('Nitroglycerin 1/150',[mod([lexmatch([nitroglycerin]),inputmatch(['Nitroglycerin']),tag(noun),tokens([nitroglycerin])]),shapes([inputmatch(['1',/,'150']),features([fraction]),tokens(['1','150'])])],0/19,[]).candidates(6,4,0,2,[]).mappings([map(-827,[ev(-827,'C0017887','NITROGLYCERIN','Nitroglycerin',[nitroglycerin],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[0/13],0,0)])]).phrase('(0.4 Mg',[punc([inputmatch(['(']),tokens([])]),shapes([inputmatch(['0','.','4']),features([real_number]),tokens(['0','4'])]),head([lexmatch([mg]),inputmatch(['Mg']),tag(noun),tokens([mg])])],20/7,[]).candidates(5,0,0,5,[]).mappings([map(-802,[ev(-660,'C3842591','0%','0%',['0'],[fndg],[[[1,1],[1,1],0]],no,no,['LNC'],[21/1],0,0),ev(-827,'C2346927','Mg++','Magnesium Cation',[mg],[elii,phsu],[[[3,3],[1,1],0]],yes,no,['MTH','MTHSPL','NCI','NCI_CRCH','NCI_FDA','RXNORM'],[25/2],0,0)])]).phrase(')',[punc([inputmatch([')']),tokens([])])],27/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('1 TAB SL x1 PRN prn CP',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),mod([lexmatch([tab]),inputmatch(['TAB']),tag(noun),tokens([tab])]),mod([lexmatch([sl]),inputmatch(['SL']),tag(noun),tokens([sl])]),mod([inputmatch([x1]),tag(noun),tokens([x1])]),mod([lexmatch([prn]),inputmatch(['PRN']),tag(noun),tokens([prn])]),mod([lexmatch([prn]),inputmatch([prn]),tag(noun),tokens([prn])]),head([lexmatch([cp]),inputmatch(['CP']),tag(noun),tokens([cp])])],29/22,[]).candidates(5,0,0,5,[]).mappings([map(-540,[ev(-629,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[29/1],0,0),ev(-629,'C1705223','Tab','Tablet Dosing Unit',[tab],[qnco],[[[2,2],[1,1],0]],no,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[31/3],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Norvasc (AMLODIPINE) 5MG, 1 Tablet(s) PO QD",0/43,[]).phrase('Norvasc',[head([lexmatch([norvasc]),inputmatch(['Norvasc']),tag(noun),tokens([norvasc])])],0/7,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0162712','Norvasc','Norvasc',[norvasc],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','MSH','MTH','RXNORM'],[0/7],0,0)])]).phrase('(AMLODIPINE',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([amlodipine]),inputmatch(['AMLODIPINE']),tag(noun),tokens([amlodipine])])],8/11,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0051696','AMLODIPINE','Amlodipine',[amlodipine],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[9/10],0,0)])]).phrase(')',[punc([inputmatch([')']),tokens([])])],19/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('5MG,',[head([inputmatch(['5MG']),tag(noun),tokens(['5mg'])]),punc([inputmatch([',']),tokens([])])],21/4,[]).candidates(0,0,0,0,[]).mappings([]).phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],26/8,[]).candidates(5,0,0,5,[]).mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[26/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[28/6],0,0)])]).phrase('(',[punc([inputmatch(['(']),tokens([])])],34/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],35/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],38/5,[]).candidates(3,0,0,3,[]).mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[38/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[41/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Plavix (CLOPIDOGREL) 75 MG PO QD",0/32,[]).phrase('Plavix',[head([lexmatch([plavix]),inputmatch(['Plavix']),tag(noun),tokens([plavix])])],0/6,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0633084','Plavix','Plavix',[plavix],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','NCI','PDQ','RXNORM'],[0/6],0,0)])]).phrase('(CLOPIDOGREL',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([clopidogrel]),inputmatch(['CLOPIDOGREL']),tag(noun),tokens([clopidogrel])])],7/12,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0070166','CLOPIDOGREL',clopidogrel,[clopidogrel],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LNC','MSH','MTHSPL','NCI','NCI_FDA','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[8/11],0,0)])]).phrase(')',[punc([inputmatch([')']),tokens([])])],19/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('75 MG PO QD',[shapes([inputmatch(['75']),features([integer]),tokens(['75'])]),mod([lexmatch([mg]),inputmatch(['MG']),tag(noun),tokens([mg])]),mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],21/11,[]).candidates(7,0,0,7,[]).mappings([map(-775,[ev(-645,'C2346927','Mg++','Magnesium Cation',[mg],[elii,phsu],[[[2,2],[1,1],0]],no,no,['MTH','MTHSPL','NCI','NCI_CRCH','NCI_FDA','RXNORM'],[24/2],0,0),ev(-645,'C0442027','PO','Oral',[po],[spco],[[[3,3],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[27/2],0,0),ev(-812,'C0332173','QD','Daily',[qd],[tmco],[[[4,4],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[30/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"ATENOLOL 50MG, 1 Tablet(s) PO QD",0/32,[]).phrase('ATENOLOL 50MG,',[mod([lexmatch([atenolol]),inputmatch(['ATENOLOL']),tag(noun),tokens([atenolol])]),head([inputmatch(['50MG']),tag(noun),tokens(['50mg'])]),punc([inputmatch([',']),tokens([])])],0/14,[]).candidates(1,0,0,1,[]).mappings([map(-694,[ev(-694,'C0004147','ATENOLOL','Atenolol',[atenolol],[orch,phsu],[[[1,1],[1,1],0]],no,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[0/8],0,0)])]).phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],15/8,[]).candidates(5,0,0,5,[]).mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[15/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[17/6],0,0)])]).phrase('(',[punc([inputmatch(['(']),tokens([])])],23/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],24/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],27/5,[]).candidates(3,0,0,3,[]).mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[27/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[30/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Lipitor (ATORVASTATIN) 10MG, 1 Tablet(s) PO QD",0/46,[]).phrase('Lipitor',[head([lexmatch([lipitor]),inputmatch(['Lipitor']),tag(noun),tokens([lipitor])])],0/7,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0593906','Lipitor','Lipitor',[lipitor],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','MSH','NCI','NCI_NCI-GLOSS','PDQ','RXNORM'],[0/7],0,0)])]).phrase('(ATORVASTATIN',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([atorvastatin]),inputmatch(['ATORVASTATIN']),tag(noun),tokens([atorvastatin])])],8/13,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0286651','ATORVASTATIN',atorvastatin,[atorvastatin],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[9/12],0,0)])]).phrase(')',[punc([inputmatch([')']),tokens([])])],21/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('10MG,',[head([inputmatch(['10MG']),tag(noun),tokens(['10mg'])]),punc([inputmatch([',']),tokens([])])],23/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],29/8,[]).candidates(5,0,0,5,[]).mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[29/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[31/6],0,0)])]).phrase('(',[punc([inputmatch(['(']),tokens([])])],37/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],38/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],41/5,[]).candidates(3,0,0,3,[]).mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[41/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[44/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Hctz (HYDROCHLOROTHIAZIDE) 25MG, 1 Tablet(s) PO QD",0/50,[]).phrase('Hctz',[head([lexmatch([hctz]),inputmatch(['Hctz']),tag(noun),tokens([hctz])])],0/4,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0020261','HCTZ','Hydrochlorothiazide',[hctz],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[0/4],0,0)])]).phrase('(HYDROCHLOROTHIAZIDE',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([hydrochlorothiazide]),inputmatch(['HYDROCHLOROTHIAZIDE']),tag(noun),tokens([hydrochlorothiazide])])],5/20,[]).candidates(4,3,0,1,[]).mappings([map(-1000,[ev(-1000,'C0020261','HYDROCHLOROTHIAZIDE','Hydrochlorothiazide',[hydrochlorothiazide],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[6/19],0,0)])]).phrase(')',[punc([inputmatch([')']),tokens([])])],25/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('25MG,',[head([inputmatch(['25MG']),tag(noun),tokens(['25mg'])]),punc([inputmatch([',']),tokens([])])],27/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],33/8,[]).candidates(5,0,0,5,[]).mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[33/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[35/6],0,0)])]).phrase('(',[punc([inputmatch(['(']),tokens([])])],41/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],42/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],45/5,[]).candidates(3,0,0,3,[]).mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[45/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[48/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Zestril (LISINOPRIL) 40MG, 1 Tablet(s) PO QD",0/44,[]).phrase('Zestril',[head([lexmatch([zestril]),inputmatch(['Zestril']),tag(noun),tokens([zestril])])],0/7,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0678140','Zestril','Zestril',[zestril],[aapp,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','NCI','NCI_NCI-GLOSS','RXNORM'],[0/7],0,0)])]).phrase('(LISINOPRIL',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([lisinopril]),inputmatch(['LISINOPRIL']),tag(noun),tokens([lisinopril])])],8/11,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0065374','LISINOPRIL','Lisinopril',[lisinopril],[aapp,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LNC','MSH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[9/10],0,0)])]).phrase(')',[punc([inputmatch([')']),tokens([])])],19/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('40MG,',[head([inputmatch(['40MG']),tag(noun),tokens(['40mg'])]),punc([inputmatch([',']),tokens([])])],21/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],27/8,[]).candidates(5,0,0,5,[]).mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[27/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[29/6],0,0)])]).phrase('(',[punc([inputmatch(['(']),tokens([])])],35/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],36/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('PO QD',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),head([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])])],39/5,[]).candidates(3,0,0,3,[]).mappings([map(-888,[ev(-694,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[39/2],0,0),ev(-861,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[42/2],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Allergies",0/9,[]).phrase('Allergies',[head([lexmatch([allergies]),inputmatch(['Allergies']),tag(noun),tokens([allergies])])],0/9,[]).candidates(7,6,0,1,[]).mappings([map(-1000,[ev(-1000,'C0020517','Allergies','Hypersensitivity',[allergies],[patf],[[[1,1],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','GO','HL7V2.5','HL7V3.0','ICD10CM','ICF','ICF-CY','ICPC','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[0/9],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Ceclor (CEFACLOR) - Rash",0/24,[]).phrase('Ceclor',[head([lexmatch([ceclor]),inputmatch(['Ceclor']),tag(noun),tokens([ceclor])])],0/6,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0701133','Ceclor','Ceclor',[ceclor],[antb,orch],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','RXNORM','SNMI'],[0/6],0,0)])]).phrase('(CEFACLOR',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([cefaclor]),inputmatch(['CEFACLOR']),tag(noun),tokens([cefaclor])])],7/9,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0007537','CEFACLOR','Cefaclor',[cefaclor],[antb,orch],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[8/8],0,0)])]).phrase(') -',[punc([inputmatch([')']),tokens([])]),punc([inputmatch([-]),tokens([])])],16/3,[]).candidates(0,0,0,0,[]).mappings([]).phrase('Rash',[head([lexmatch([rash]),inputmatch(['Rash']),tag(noun),tokens([rash])])],20/4,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0015230','RASH','Exanthema',[rash],[sosy],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CST','HPO','ICD10CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[20/4],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Physical Exam",0/13,[]).phrase('Physical Exam',[mod([lexmatch([physical]),inputmatch(['Physical']),tag(adj),tokens([physical])]),head([lexmatch([exam]),inputmatch(['Exam']),tag(noun),tokens([exam])])],0/13,[]).candidates(6,0,0,6,[]).mappings([map(-1000,[ev(-1000,'C1744699','Physical Exam','Physical Exam Domain',[physical,exam],[inpr],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['MTH','NCI','NCI_CDISC','NLMSubSyn'],[0/13],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Vital signs  140/82  98.2",0/25,[]).phrase('Vital signs  140/82  98.2',[mod([lexmatch(['vital signs']),inputmatch(['Vital',signs]),tag(noun),tokens([vital,signs])]),shapes([inputmatch(['140',/,'82']),features([fraction]),tokens(['140','82'])]),shapes([inputmatch(['98','.','2']),features([real_number]),tokens(['98','2'])])],0/25,[]).candidates(9,1,0,8,[]).mappings([map(-827,[ev(-827,'C0150404','Vital signs','Taking vital signs',[vital,signs],[hlca],[[[1,2],[1,2],0]],yes,no,['CHV','MTH','SNM','SNMI','SNOMEDCT_US'],[0/11],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Looks well,  nontoxic",0/21,[]).phrase('Looks',[verb([lexmatch([looks]),inputmatch(['Looks']),tag(verb),tokens([looks])])],0/5,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0233426','Looks','Personal appearance',[looks],[orga],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','SNM','SNMI','SNOMEDCT_US'],[0/5],0,0)])]).phrase('well,',[adv([lexmatch([well]),inputmatch([well]),tag(adv),tokens([well])]),punc([inputmatch([',']),tokens([])])],6/5,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C3146287','Well','Well',[well],[mnob],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[6/4],0,0)])]).phrase(nontoxic,[head([lexmatch([nontoxic]),inputmatch([nontoxic]),tag(adj),tokens([nontoxic])])],13/8,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C1518413','Nontoxic','Nontoxic',[nontoxic],[qlco],[[[1,1],[1,1],0]],yes,no,['NCI','NCI_NCI-GLOSS'],[13/8],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Sinuses - nontender",0/19,[]).phrase('Sinuses - nontender',[mod([lexmatch([sinuses]),inputmatch(['Sinuses']),tag(noun),tokens([sinuses])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([nontender]),inputmatch([nontender]),tag(adj),tokens([nontender])])],0/19,[]).candidates(4,0,0,4,[]).mappings([map(-901,[ev(-694,'C0016169','Sinus','pathologic fistula',[sinus],[anab],[[[1,1],[1,1],0]],no,no,['AOD','CHV','COSTAR','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[0/7],0,0),ev(-861,'C0520960','Non-tender','Non-tender',[non,tender],[qlco],[[[2,2],[1,2],0]],yes,no,['CHV','OMIM','SNMI','SNOMEDCT_US'],[10/9],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"TM's clear",0/10,[]).phrase('TM\'s',[head([lexmatch([tm]),inputmatch(['TM\'s']),tag(noun),tokens([tm])])],0/4,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C2744539','TM','THBD protein, human',[tm],[aapp,bacs],[[[1,1],[1,1],0]],yes,no,['MSH','MTH','NCI'],[0/4],0,0)])]).phrase(clear,[verb([lexmatch([clear]),inputmatch([clear]),tag(verb),tokens([clear])])],5/5,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1709157','Clear','Negative Surgical Margin',[clear],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[5/5],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"OP - negative without exudates",0/30,[]).phrase('OP - negative without exudates',[mod([lexmatch([op]),inputmatch(['OP']),tag(noun),tokens([op])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([negative]),inputmatch([negative]),tag(noun),tokens([negative])]),prep([lexmatch([without]),inputmatch([without]),tag(prep),tokens([without])]),mod([lexmatch([exudates]),inputmatch([exudates]),tag(noun),tokens([exudates])])],0/30,[]).candidates(7,1,0,6,[]).mappings([map(-708,[ev(-770,'C0205160','Negative','Negative',[negative],[qlco],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','SNMI','SNOMEDCT_US'],[5/8],0,0),ev(-604,'C0015388','Exudates','Exudate',[exudates],[bdsu],[[[4,4],[1,1],0]],no,no,['CHV','CSP','LNC','MSH','MTH','NCI','NCI_CDISC','SNM','SNMI','SNOMEDCT_US'],[22/8],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"neck- supple without increased nodes",0/36,[]).phrase('neck- supple without increased nodes',[mod([lexmatch([neck]),inputmatch([neck]),tag(noun),tokens([neck])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([supple]),inputmatch([supple]),tag(adj),tokens([supple])]),prep([lexmatch([without]),inputmatch([without]),tag(prep),tokens([without])]),mod([lexmatch([increased]),inputmatch([increased]),tag(adj),tokens([increased])]),mod([lexmatch([nodes]),inputmatch([nodes]),tag(noun),tokens([nodes])])],0/36,[]).candidates(21,13,0,8,[]).mappings([map(-724,[ev(-593,'C0027530','NECK','Neck',[neck],[blor],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[0/4],0,0),ev(-760,'C0332254','Supple','Supple',[supple],[ftcn],[[[2,2],[1,1],0]],yes,no,['CHV','SNMI','SNOMEDCT_US'],[6/6],0,0),ev(-593,'C0205217','Increased','Increased',[increased],[qnco],[[[4,4],[1,1],0]],no,no,['CHV','LNC','MTH','SNMI','SNOMEDCT_US'],[21/9],0,0),ev(-593,'C0746922',nodes,'Anatomic Node',[nodes],[bpoc],[[[5,5],[1,1],0]],no,no,['CHV','MTH','NCI'],[31/5],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([negation(nega,without,[14/7],['C1709157':'Clear'],[8/5]),negation(nega,without,[14/7],['C0043144':'WHEEZING'],[22/8])]).utterance('00000000.ti.1',"lungs - clear without wheezing on forced exp",0/44,[]).phrase('lungs - clear without wheezing',[mod([lexmatch([lungs]),inputmatch([lungs]),tag(noun),tokens([lungs])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([clear]),inputmatch([clear]),tag(adj),tokens([clear])]),prep([lexmatch([without]),inputmatch([without]),tag(prep),tokens([without])]),mod([lexmatch([wheezing]),inputmatch([wheezing]),tag(noun),tokens([wheezing])])],0/30,[]).candidates(10,6,0,4,[]).mappings([map(-733,[ev(-604,'C0024109','LUNGS','Lung',[lungs],[bpoc],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[0/5],0,0),ev(-770,'C1709157','Clear','Negative Surgical Margin',[clear],[fndg],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[8/5],0,1),ev(-604,'C0043144','WHEEZING','Wheezing',[wheezing],[sosy],[[[4,4],[1,1],0]],no,no,['CHV','COSTAR','CST','DXP','ICD10CM','ICD9CM','ICPC','LNC','MSH','MTH','NCI','NCI_CTCAE','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US'],[22/8],0,1)])]).phrase('on forced exp',[prep([lexmatch([on]),inputmatch([on]),tag(prep),tokens([on])]),mod([lexmatch([forced]),inputmatch([forced]),tag(adj),tokens([forced])]),head([lexmatch([exp]),inputmatch([exp]),tag(noun),tokens([exp])])],31/13,[]).candidates(4,1,0,3,[]).mappings([map(-888,[ev(-694,'C0443221','Forced','Forced',[forced],[ftcn],[[[1,1],[1,1],0]],no,no,['CHV','MTH','NCI','SNOMEDCT_US'],[34/6],0,0),ev(-861,'C1417055','EXP','MBNL1 gene',[exp],[gngm],[[[2,2],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[41/3],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"CVS - rrrs2s2",0/13,[]).phrase('CVS - rrrs2s2',[mod([lexmatch([cvs]),inputmatch(['CVS']),tag(noun),tokens([cvs])]),punc([inputmatch([-]),tokens([])]),head([inputmatch([rrrs2s2]),tag(noun),tokens([rrrs2s2])])],0/13,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Assessment and Plan",0/19,[]).phrase('Assessment',[head([lexmatch([assessment]),inputmatch(['Assessment']),tag(noun),tokens([assessment])])],0/10,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1516048','Assessment','Assessed',[assessment],[acty],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_NCI-GLOSS'],[0/10],0,0)])]).phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],11/3,[]).candidates(0,0,0,0,[]).mappings([]).phrase('Plan',[head([lexmatch([plan]),inputmatch(['Plan']),tag(noun),tokens([plan])])],15/4,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C1301732','Plan','Planned',[plan],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNOMEDCT_US'],[15/4],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([negation(nega,'no evidence',[9/11],['C0037199':'Sinus Infection'],[29/15])]).utterance('00000000.ti.1',"1. ",0/3,[]).phrase('1.',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),punc([inputmatch(['.']),tokens([])])],0/2,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C2827734','1+','1+ Score',['1'],[qnco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[0/1],0,0)])]).'EOU'.utterance('00000000.ti.2',"URI - no evidence of bact sinus infection.  ",3/44,[]).phrase('URI -',[head([lexmatch([uri]),inputmatch(['URI']),tag(noun),tokens([uri])]),punc([inputmatch([-]),tokens([])])],3/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase('no evidence of bact sinus infection.',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([evidence]),inputmatch([evidence]),tag(noun),tokens([evidence])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([bact]),inputmatch([bact]),tag(noun),tokens([bact])]),mod([lexmatch([sinus]),inputmatch([sinus]),tag(noun),tokens([sinus])]),mod([lexmatch([infection]),inputmatch([infection]),tag(noun),tokens([infection])]),punc([inputmatch(['.']),tokens([])])],9/36,[]).candidates(18,3,0,15,[]).mappings([map(-864,[ev(-833,'C0332125','No evidence of','No evidence of',[no,evidence,of],[qlco],[[[1,1],[1,1],0],[[2,2],[2,2],0],[[3,3],[3,3],0]],yes,no,['MTH','NLMSubSyn','SNMI','SNOMEDCT_US'],[9/14],0,0),ev(-586,'C0004618','BACT','Bacterial Count Measurement',[bact],[lbpr],[[[4,4],[1,1],0]],no,no,['CHV','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[24/4],0,0),ev(-623,'C0037199','Sinus Infection','Sinusitis',[sinus,infection],[dsyn],[[[5,5],[1,1],0],[[6,6],[2,2],0]],no,no,['AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[29/15],0,1)])]).'EOU'.utterance('00000000.ti.3',"Needs decongestion but would like to avoid decong systemically given history CAD and ectopy in past. ",47/101,[]).phrase('Needs',[verb([lexmatch([needs]),inputmatch(['Needs']),tag(verb),tokens([needs])])],47/5,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C0027552','Need','Needs',[need],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','MTH','NCI','SNOMEDCT_US'],[47/5],0,0)])]).phrase(decongestion,[head([lexmatch([decongestion]),inputmatch([decongestion]),tag(noun),tokens([decongestion])])],53/12,[]).candidates(0,0,0,0,[]).mappings([]).phrase(but,[conj([lexmatch([but]),inputmatch([but]),tag(conj),tokens([but])])],66/3,[]).candidates(0,0,0,0,[]).mappings([]).phrase('would like',[modal([lexmatch([would]),inputmatch([would]),tag(modal),tokens([would])]),prep([lexmatch([like]),inputmatch([like]),tag(prep),tokens([like])])],70/10,[]).candidates(0,0,0,0,[]).mappings([]).phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],81/2,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C0040363','TO','Togo',[to],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LCH','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[81/2],0,0)])]).phrase(avoid,[verb([lexmatch([avoid]),inputmatch([avoid]),tag(verb),tokens([avoid])])],84/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase('decong systemically given history CAD',[mod([inputmatch([decong]),tag(noun),tokens([decong])]),adv([lexmatch([systemically]),inputmatch([systemically]),tag(adv),tokens([systemically])]),mod([lexmatch([given]),inputmatch([given]),tag(adj),tokens([given])]),mod([lexmatch([history]),inputmatch([history]),tag(noun),tokens([history])]),head([lexmatch([cad]),inputmatch(['CAD']),tag(noun),tokens([cad])])],90/37,[]).candidates(9,2,0,7,[]).mappings([map(-728,[ev(-637,'C2004062','History','History of previous events',[history],[fndg],[[[4,4],[1,1],0]],no,no,['CHV','LCH','MTH','NCI'],[116/7],0,0),ev(-804,'C3813548','CAD','CALD1 wt Allele',[cad],[gngm],[[[5,5],[1,1],0]],yes,no,['MTH','NCI'],[124/3],0,0)])]).phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],128/3,[]).candidates(0,0,0,0,[]).mappings([]).phrase('ectopy in past.',[head([lexmatch([ectopy]),inputmatch([ectopy]),tag(noun),tokens([ectopy])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([past]),inputmatch([past]),tag(noun),tokens([past])]),punc([inputmatch(['.']),tokens([])])],132/15,[]).candidates(4,2,0,2,[]).mappings([map(-711,[ev(-718,'C0574895','Ectopic','Ectopic (qualifier value)',[ectopic],[spco],[[[1,1],[1,1],3]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[132/6],0,0),ev(-623,'C1444637','Past','Past',[past],[tmco],[[[3,3],[1,1],0]],no,no,['NCI','SNOMEDCT_US'],[142/4],0,0)])]).'EOU'.utterance('00000000.ti.4',"Will use steam, humidity, nasal decong spray for 3 days.  ",148/58,[]).phrase('Will',[modal([lexmatch([will]),inputmatch(['Will']),tag(modal),tokens([will])])],148/4,[]).candidates(0,0,0,0,[]).mappings([]).phrase(use,[verb([lexmatch([use]),inputmatch([use]),tag(verb),tokens([use])])],153/3,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C0042153',use,'utilization qualifier',[use],[ftcn],[[[1,1],[1,1],0]],yes,no,['MSH','MTH'],[153/3],0,0)])]).phrase('steam,',[head([lexmatch([steam]),inputmatch([steam]),tag(noun),tokens([steam])]),punc([inputmatch([',']),tokens([])])],157/6,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0038225','Steam','Steam',[steam],[inch],[[[1,1],[1,1],0]],yes,no,['CHV','LCH','LCH_NW','MSH','NDFRT','SNM','SNMI','SNOMEDCT_US'],[157/5],0,0)])]).phrase('humidity,',[head([lexmatch([humidity]),inputmatch([humidity]),tag(noun),tokens([humidity])]),punc([inputmatch([',']),tokens([])])],164/9,[]).candidates(3,1,0,2,[]).mappings([map(-1000,[ev(-1000,'C0020167','Humidity','Humidity',[humidity],[npop],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[164/8],0,0)])]).phrase('nasal decong spray for 3 days.',[mod([lexmatch([nasal]),inputmatch([nasal]),tag(adj),tokens([nasal])]),mod([inputmatch([decong]),tag(noun),tokens([decong])]),head([lexmatch([spray]),inputmatch([spray]),tag(noun),tokens([spray])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),mod([lexmatch([days]),inputmatch([days]),tag(noun),tokens([days])]),punc([inputmatch(['.']),tokens([])])],174/30,[]).candidates(8,2,0,6,[]).mappings([map(-732,[ev(-783,'C0461725','Nasal Spray','Nasal Spray',[nasal,spray],[bodm],[[[1,1],[1,1],0],[[3,3],[2,2],0]],yes,no,['CHV','HL7V3.0','MTH','NCI','NCI_NCPDP','NDFRT','RXNORM','SNOMEDCT_US'],[174/5,187/5],0,0),ev(-600,'C3842675','Day 3','Day 3',[day,'3'],[fndg],[[[6,6],[1,1],1],[[5,5],[2,2],0]],no,no,['LNC'],[197/6],0,0)])]).'EOU'.utterance('00000000.ti.5',"Call if fevers, worsens or persists.",206/36,[]).phrase('Call',[verb([lexmatch([call]),inputmatch(['Call']),tag(verb),tokens([call])])],206/4,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1947967','Call','Call (Instruction)',[call],[ftcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[206/4],0,0)])]).phrase(if,[conj([lexmatch([if]),inputmatch([if]),tag(conj),tokens([if])])],211/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('fevers,',[head([lexmatch([fevers]),inputmatch([fevers]),tag(noun),tokens([fevers])]),punc([inputmatch([',']),tokens([])])],214/7,[]).candidates(2,1,0,1,[]).mappings([map(-1000,[ev(-1000,'C0015967','Fevers','Fever',[fevers],[fndg],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CHV','COSTAR','CSP','CST','DXP','GO','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','QMR','SNM','SNMI','SNOMEDCT_US'],[214/6],0,0)])]).phrase(worsens,[verb([lexmatch([worsens]),inputmatch([worsens]),tag(verb),tokens([worsens])])],222/7,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C1457868','Worsens','Worse',[worsens],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_FDA','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[222/7],0,0)])]).phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],230/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase('persists.',[verb([lexmatch([persists]),inputmatch([persists]),tag(verb),tokens([persists])]),punc([inputmatch(['.']),tokens([])])],233/9,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"2. ",0/3,[]).phrase('2.',[shapes([inputmatch(['2']),features([integer]),tokens(['2'])]),punc([inputmatch(['.']),tokens([])])],0/2,[]).candidates(4,0,0,4,[]).mappings([map(-1000,[ev(-1000,'C2981700','2+','2+ Score, WHO',['2'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[0/1],0,0)])]).'EOU'.utterance('00000000.ti.2',"Hot thyroid nodule - was slightly higher last visit - will refer to Dr Dolan for discussion re treating this now especially given her history of cardiac ds in the last couple of years.",3/184,[]).phrase('Hot thyroid nodule -',[mod([lexmatch([hot]),inputmatch(['Hot']),tag(adj),tokens([hot])]),head([lexmatch(['thyroid nodule']),inputmatch([thyroid,nodule]),tag(noun),tokens([thyroid,nodule])]),punc([inputmatch([-]),tokens([])])],3/20,[]).candidates(20,11,0,9,[]).mappings([map(-1000,[ev(-1000,'C0749472','hot thyroid nodule','thyroid nodule hot',[hot,thyroid,nodule],[fndg],[[[1,1],[1,1],0],[[2,3],[2,3],0]],yes,no,['CHV'],[3/18],0,0)])]).phrase(was,[aux([lexmatch([was]),inputmatch([was]),tag(aux),tokens([was])])],24/3,[]).candidates(0,0,0,0,[]).mappings([]).phrase('slightly higher last',[adv([lexmatch([slightly]),inputmatch([slightly]),tag(adv),tokens([slightly])]),mod([lexmatch([higher]),inputmatch([higher]),tag(adj),tokens([higher])]),head([lexmatch([last]),inputmatch([last]),tag(adj),tokens([last])])],28/20,[]).candidates(8,5,0,3,[]).mappings([map(-623,[ev(-660,'C0750482','Slightly','Slightly (qualifier value)',[slightly],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','SNOMEDCT_US'],[28/8],0,0),ev(-660,'C0205250','Higher','High',[higher],[qlco],[[[2,2],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[37/6],0,0)])]).phrase(visit,[verb([lexmatch([visit]),inputmatch([visit]),tag(verb),tokens([visit])])],49/5,[]).candidates(3,0,0,3,[]).mappings([map(-1000,[ev(-1000,'C1512346',visit,'Patient Visit',[visit],[hlca],[[[1,1],[1,1],0]],yes,no,['HL7V3.0','LNC','MTH','NCI','NCI_CDISC','NLMSubSyn'],[49/5],0,0)])]).phrase(-,[punc([inputmatch([-]),tokens([])])],55/1,[]).candidates(0,0,0,0,[]).mappings([]).phrase(will,[modal([lexmatch([will]),inputmatch([will]),tag(modal),tokens([will])])],57/4,[]).candidates(0,0,0,0,[]).mappings([]).phrase('refer to Dr Dolan',[verb([lexmatch([refer]),inputmatch([refer]),tag(verb),tokens([refer])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),mod([inputmatch(['Dolan']),tag(noun),tokens([dolan])])],62/17,[]).candidates(6,0,0,6,[]).mappings([map(-708,[ev(-770,'C0205543','Refer','Referring',[refer],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI'],[62/5],0,0),ev(-770,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[3,3],[1,1],0]],yes,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[71/2],0,0)])]).phrase('for discussion',[prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),head([lexmatch([discussion]),inputmatch([discussion]),tag(noun),tokens([discussion])])],80/14,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C0557061','Discussion','Discussion (procedure)',[discussion],[topp],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','SNOMEDCT_US'],[84/10],0,0)])]).phrase('re treating',[verb([lexmatch(['re treating']),inputmatch([re,treating]),tag(verb),tokens([re,treating])])],95/11,[]).candidates(5,2,0,3,[]).mappings([map(-888,[ev(-861,'C0556581','{RE}','Retinol equivalents',[re],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_UCUM','SNOMEDCT_US'],[95/2],0,0),ev(-861,'C1522326','Treating','Treating',[treating],[ftcn],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI'],[98/8],0,0)])]).phrase('this now',[det([lexmatch([this]),inputmatch([this]),tag(det),tokens([this])]),adv([lexmatch([now]),inputmatch([now]),tag(adv),tokens([now])])],107/8,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C1948052','Now','Now (temporal qualifier)',[now],[tmco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[112/3],0,0)])]).phrase(especially,[adv([lexmatch([especially]),inputmatch([especially]),tag(adv),tokens([especially])])],116/10,[]).candidates(0,0,0,0,[]).mappings([]).phrase(given,[verb([lexmatch([given]),inputmatch([given]),tag(verb),tokens([given])])],127/5,[]).candidates(4,0,0,4,[]).mappings([map(-1000,[ev(-1000,'C1947971','Given','Give - dosing instruction imperative',[given],[ftcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','SNOMEDCT_US'],[127/5],0,0)])]).phrase('her history of cardiac ds',[pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),head([lexmatch([history]),inputmatch([history]),tag(noun),tokens([history])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([cardiac]),inputmatch([cardiac]),tag(adj),tokens([cardiac])]),mod([lexmatch([ds]),inputmatch([ds]),tag(noun),tokens([ds])])],133/25,[]).candidates(11,2,0,9,[]).mappings([map(-696,[ev(-760,'C2004062','History','History of previous events',[history],[fndg],[[[2,2],[1,1],0]],yes,no,['CHV','LCH','MTH','NCI'],[137/7],0,0),ev(-593,'C1522601','Cardiac','Cardiac - anatomy qualifier',[cardiac],[spco],[[[4,4],[1,1],0]],no,no,['MTH','NCI','NCI_NCI-GLOSS'],[148/7],0,0),ev(-593,'C3714751','DS','Disease Steps Questionnaire',[ds],[inpr],[[[5,5],[1,1],0]],no,no,['MTH','NCI','NCI_CDISC'],[156/2],0,0)])]).phrase('in the last couple of years.',[prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch([last]),inputmatch([last]),tag(adj),tokens([last])]),head([lexmatch([couple]),inputmatch([couple]),tag(noun),tokens([couple])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([years]),inputmatch([years]),tag(noun),tokens([years])]),punc([inputmatch(['.']),tokens([])])],159/28,[]).candidates(6,1,0,5,[]).mappings([map(-666,[ev(-586,'C0332285','In','Within',[in],[spco],[[[1,1],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[159/2],0,0),ev(-753,'C0010222',couple,'Couples (persons)',[couple],[famg],[[[4,4],[1,1],0]],yes,no,['CHV','MSH','MTH'],[171/6],0,0),ev(-586,'C0439234','YEARS',year,[years],[tmco],[[[6,6],[1,1],0]],no,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[181/5],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"3. ",0/3,[]).phrase('3.',[shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),punc([inputmatch(['.']),tokens([])])],0/2,[]).candidates(4,0,0,4,[]).mappings([map(-1000,[ev(-1000,'C0439086','<3','<3 (qualifier value)',['3'],[qnco],[[[1,1],[1,1],0]],yes,no,['MTH','SNOMEDCT_US'],[0/1],0,0)])]).'EOU'.utterance('00000000.ti.2',"blood pressure - slightly elevated above what would want it. ",3/61,[]).phrase('blood pressure -',[head([lexmatch(['blood pressure']),inputmatch([blood,pressure]),tag(noun),tokens([blood,pressure])]),punc([inputmatch([-]),tokens([])])],3/16,[]).candidates(17,8,0,9,[]).mappings([map(-1000,[ev(-1000,'C1271104','Blood Pressure','Blood pressure finding',[blood,pressure],[fndg],[[[1,2],[1,2],0]],yes,no,['MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[3/14],0,0)])]).phrase(slightly,[adv([lexmatch([slightly]),inputmatch([slightly]),tag(adv),tokens([slightly])])],20/8,[]).candidates(2,0,0,2,[]).mappings([map(-1000,[ev(-1000,'C0750482','Slightly','Slightly (qualifier value)',[slightly],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','SNOMEDCT_US'],[20/8],0,0)])]).phrase('elevated above what',[verb([lexmatch([elevated]),inputmatch([elevated]),tag(verb),tokens([elevated])]),prep([lexmatch([above]),inputmatch([above]),tag(prep),tokens([above])]),pron([lexmatch([what]),inputmatch([what]),tag(pron),tokens([what])])],29/19,[]).candidates(2,0,0,2,[]).mappings([map(-790,[ev(-790,'C0205250','Elevated','High',[elevated],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[29/8],0,0)])]).phrase(would,[modal([lexmatch([would]),inputmatch([would]),tag(modal),tokens([would])])],49/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase(want,[verb([lexmatch([want]),inputmatch([want]),tag(verb),tokens([want])])],55/4,[]).candidates(0,0,0,0,[]).mappings([]).phrase('it.',[pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])]),punc([inputmatch(['.']),tokens([])])],60/3,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.utterance('00000000.ti.3',"Will recheck on follow-up which will be soon",64/44,[]).phrase('Will',[modal([lexmatch([will]),inputmatch(['Will']),tag(modal),tokens([will])])],64/4,[]).candidates(0,0,0,0,[]).mappings([]).phrase('recheck on follow-up',[verb([lexmatch([recheck]),inputmatch([recheck]),tag(verb),tokens([recheck])]),prep([lexmatch([on]),inputmatch([on]),tag(prep),tokens([on])]),mod([lexmatch(['follow-up']),inputmatch([follow,-,up]),tag(adj),tokens([follow,up])])],69/20,[]).candidates(6,0,0,6,[]).mappings([map(-833,[ev(-833,'C1522577','Follow Up','follow-up',[follow,up],[hlca],[[[3,3],[1,1],0],[[4,4],[2,2],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS'],[80/9],0,0)])]).phrase(which,[pron([lexmatch([which]),inputmatch([which]),tag(pron),tokens([which])])],90/5,[]).candidates(0,0,0,0,[]).mappings([]).phrase(will,[modal([lexmatch([will]),inputmatch([will]),tag(modal),tokens([will])])],96/4,[]).candidates(0,0,0,0,[]).mappings([]).phrase(be,[aux([lexmatch([be]),inputmatch([be]),tag(aux),tokens([be])])],101/2,[]).candidates(0,0,0,0,[]).mappings([]).phrase(soon,[adv([lexmatch([soon]),inputmatch([soon]),tag(adv),tokens([soon])])],104/4,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"4. ",0/3,[]).phrase('4.',[shapes([inputmatch(['4']),features([integer]),tokens(['4'])]),punc([inputmatch(['.']),tokens([])])],0/2,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C3838679','4+','4+ Answer to question',['4'],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[0/1],0,0)])]).'EOU'.utterance('00000000.ti.2',"Chol- will check fastings next visit. ",3/38,[]).phrase('Chol-',[head([lexmatch([chol]),inputmatch(['Chol']),tag(noun),tokens([chol])]),punc([inputmatch([-]),tokens([])])],3/5,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0201950','CHOL','Cholesterol measurement test',[chol],[lbpr],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[3/4],0,0)])]).phrase(will,[modal([lexmatch([will]),inputmatch([will]),tag(modal),tokens([will])])],9/4,[]).candidates(0,0,0,0,[]).mappings([]).phrase(check,[verb([lexmatch([check]),inputmatch([check]),tag(verb),tokens([check])])],14/5,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C1283174','Check','Checking (action)',[check],[acty],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI','SNOMEDCT_US'],[14/5],0,0)])]).phrase('fastings next visit.',[mod([inputmatch([fastings]),tag(noun),tokens([fastings])]),mod([lexmatch([next]),inputmatch([next]),tag(adj),tokens([next])]),head([lexmatch([visit]),inputmatch([visit]),tag(noun),tokens([visit])]),punc([inputmatch(['.']),tokens([])])],20/20,[]).candidates(6,0,0,6,[]).mappings([map(-790,[ev(-660,'C0205117',next,'Adjacent',[next],[spco],[[[2,2],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[29/4],0,0),ev(-827,'C0545082','Visit','Visit',[visit],[bhvr],[[[3,3],[1,1],0]],yes,no,['MTH','NCI','SNM'],[34/5],0,0)])]).'EOU'.utterance('00000000.ti.3',"Lfts okay in June",41/17,[]).phrase('Lfts',[head([lexmatch([lfts]),inputmatch(['Lfts']),tag(noun),tokens([lfts])])],41/4,[]).candidates(1,0,0,1,[]).mappings([map(-966,[ev(-966,'C0023901','LFT','Liver Function Tests',[lft],[lbpr],[[[1,1],[1,1],1]],yes,no,['AOD','CHV','LCH','LCH_NW','MSH','MTH','MTHMST','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[41/4],0,0)])]).phrase('okay in June',[verb([lexmatch([okay]),inputmatch([okay]),tag(verb),tokens([okay])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([june]),inputmatch(['June']),tag(noun),tokens([june])])],46/12,[]).candidates(1,0,0,1,[]).mappings([map(-790,[ev(-790,'C3829443','June','June',[june],[tmco],[[[3,3],[1,1],0]],yes,no,['LNC','NCI'],[54/4],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Due for annual - will schedule next avail.",0/42,[]).phrase('Due for annual -',[head([lexmatch([due]),inputmatch(['Due']),tag(adj),tokens([due])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([annual]),inputmatch([annual]),tag(adj),tokens([annual])]),punc([inputmatch([-]),tokens([])])],0/16,[]).candidates(3,0,0,3,[]).mappings([map(-746,[ev(-790,'C0678226',due,'Due to',[due],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[0/3],0,0),ev(-623,'C0332181','Annual','Annual',[annual],[tmco],[[[3,3],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[8/6],0,0)])]).phrase(will,[modal([lexmatch([will]),inputmatch([will]),tag(modal),tokens([will])])],17/4,[]).candidates(0,0,0,0,[]).mappings([]).phrase(schedule,[verb([lexmatch([schedule]),inputmatch([schedule]),tag(verb),tokens([schedule])])],22/8,[]).candidates(1,0,0,1,[]).mappings([map(-1000,[ev(-1000,'C0086960','Schedule','Schedule (document type)',[schedule],[inpr],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','MTH','NCI','NCI_NCI-GLOSS'],[22/8],0,0)])]).phrase('next avail.',[mod([lexmatch([next]),inputmatch([next]),tag(adj),tokens([next])]),head([lexmatch([avail]),inputmatch([avail]),tag(noun),tokens([avail])]),punc([inputmatch(['.']),tokens([])])],31/11,[]).candidates(3,0,0,3,[]).mappings([map(-694,[ev(-694,'C0332282','Next','Following',[next],[tmco],[[[1,1],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[31/4],0,0)])]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1',"Beverly Thiel MD",0/16,[]).phrase('Beverly Thiel MD',[mod([lexmatch([beverly]),inputmatch(['Beverly']),tag(noun),tokens([beverly])]),mod([inputmatch(['Thiel']),tag(noun),tokens([thiel])]),head([lexmatch([md]),inputmatch(['MD']),tag(noun),tokens([md])])],0/16,[]).candidates(0,0,0,0,[]).mappings([]).'EOU'.args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-02.xml outputs/220-02-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-02.xml',outfile-'outputs/220-02-output.xml']).aas([]).neg_list([]).utterance('00000000.ti.1
   ]]></TEXT>   <TAGS></TAGS> </root>
   Phrase:
   <?xml version
   tokens:*<*?*xml*version*
   concepts:*XML*Version*
   mappings:
   mapping:
   -888
   concept:
   C1707981, XML, Extensible Markup Language, -694
   0, 0, 0
   inpr
   'HL7V3.0','NCI'
   [[[1,1],[1,1],0]]
   token: 
   <, 
   punc, , 1
   concept:
   C0333052, Version, Version, -861
   1, 0, 0
   ftcn
   'CHV','HL7V3.0','LNC','MTH','MTHICD9','NCI','NCI_CDISC'
   [[[2,2],[1,1],0]]
   token: 
   ?, 
   punc, , 1


   Phrase:
   ="1.0"
   tokens:*=*"*1 . 0*"*
   concepts:*1+',*0%*
   mappings:
   mapping:
   -888
   concept:
   C2981698, 1+',,  WHO', -861
   1, 0, 0
   clas
   'MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   =, 
   punc, , 1
   concept:
   C3842591, 0%, 0%, -861
   1, 0, 0
   fndg
   'LNC'
   [[[2,2],[1,1],0]]
   token: 
   ", 
   punc, , 1


   Phrase:
   encoding
   tokens:*encoding*
   concepts:*Encoding*
   mappings:
   mapping:
   -1000
   concept:
   C1547699, Encoding, MIME encoding, -1000
   1, 0, 0
   idcn
   'HL7V2.5','MTH'
   [[[1,1],[1,1],0]]
   token: 
   encoding, encoding
   verb, verb, 1


   Phrase:
   ="UTF-8"?
   tokens:*=*"*UTF*-*8*"*?*
   concepts:*UTF-8*
   mappings:
   mapping:
   -1000
   concept:
   C1555005, UTF-8, UTF-8, -1000
   1, 0, 0
   inpr
   'HL7V3.0'
   [[[1,1],[1,1],0],[[2,2],[2,2],0]]
   token: 
   =, 
   punc, , 1
   token: 
   ", 
   punc, , 1


   Phrase:
   >
   tokens:*>*
   concepts:*
   mappings:

   Phrase:
   <root
   tokens:*<*root*
   concepts:*Root*
   mappings:
   mapping:
   -1000
   concept:
   C1318154, Root, Root body part, -1000
   1, 0, 0
   bpoc
   'CHV','LNC','MTH'
   [[[1,1],[1,1],0]]
   token: 
   <, 
   punc, , 1


   Phrase:
   >
   tokens:*>*
   concepts:*
   mappings:

   Phrase:
   <TEXT
   tokens:*<*TEXT*
   concepts:*Text*
   mappings:
   mapping:
   -1000
   concept:
   C1705606, Text, Text Line, -1000
   1, 0, 0
   inpr
   'MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   <, 
   punc, , 1


   Phrase:
   >
   tokens:*>*
   concepts:*
   mappings:

   Phrase:
   <!
   tokens:*<*!*
   concepts:*
   mappings:

   Phrase:
   [CDATA
   tokens:*punc*CDATA*
   concepts:*CDATA*
   mappings:
   mapping:
   -1000
   concept:
   C0640049, CDATA, 3-chloro-4-dimethylaminothioangelicin, -1000
   1, 0, 0
   orch
   'MSH'
   [[[1,1],[1,1],0]]
   token: 
   punc, 
   punc, , 1


   Phrase:
   [
   tokens:*punc*
   concepts:*
   mappings:

   Phrase:
   Record date
   tokens:*Record*date*
   concepts:*Record*DATE*
   mappings:
   mapping:
   -888
   concept:
   C0034869, Record, Records, -694
   0, 0, 0
   inpr
   'CHV','HL7V3.0','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA'
   [[[1,1],[1,1],0]]
   token: 
   Record, record
   mod, noun, 1
   concept:
   C0011008, DATE, Date in time, -861
   1, 0, 0
   tmco
   'CHV','LNC','MSH','MTH','NCI','NCI_CareLex','NCI_NICHD','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   date, date
   head, noun, 1


   Phrase:
   :
   tokens:*:*
   concepts:*
   mappings:

   Phrase:
   2068-12-05
   tokens:*2068*-*12*-*05*
   concepts:*
   mappings:

   Phrase:
   Narrative History
   tokens:*Narrative*History*
   concepts:*Narrative*History*
   mappings:
   mapping:
   -888
   concept:
   C1135957, Narrative, Narration, -694
   0, 0, 0
   socb
   'CHV','MSH','MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   Narrative, narrative
   mod, adj, 1
   concept:
   C2004062, History, History of previous events, -861
   1, 0, 0
   fndg
   'CHV','LCH','MTH','NCI'
   [[[2,2],[1,1],0]]
   token: 
   History, history
   head, noun, 1


   Phrase:
   Patient
   tokens:*Patient*
   concepts:**^patient*
   mappings:
   mapping:
   -1000
   concept:
   C0030705, *^patient, Patients, -1000
   1, 0, 0
   podg
   'AOD','CHV','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_DICOM','NCI_FDA','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   Patient, patient
   head, noun, 1


   Phrase:
   presents for uri.
   tokens:*presents*for*uri*.*
   concepts:*Present*
   mappings:
   mapping:
   -790
   concept:
   C0150312, Present, Present, -790
   1, 0, 0
   qnco
   'CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   presents, presents
   verb, verb, 1


   Phrase:
   Walks -
   tokens:*Walks*-*
   concepts:*Walks*
   mappings:
   mapping:
   -1000
   concept:
   C0600108, Walks, Does walk, -1000
   1, 0, 0
   fndg
   'SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   Walks, walks
   head, noun, 1


   Phrase:
   in .  Overdue for follow-up
   tokens:*in*.*Overdue*for*follow - up*
   concepts:*In*Follow Up*
   mappings:
   mapping:
   -579
   concept:
   C0150312, In, Present, -593
   0, 0, 0
   qnco
   'CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   in, in
   prep, prep, 1
   concept:
   C1522577, Follow Up, follow-up, -640
   0, 0, 0
   hlca
   'MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS'
   [[[4,4],[1,1],0],[[5,5],[2,2],0]]
   token: 
   for, for
   prep, prep, 1
   token: 
   follow - up, follow-up
   mod, adj, 2


   Phrase:
   by 3 months.
   tokens:*by*3*months*.*
   concepts:*3 Months*
   mappings:
   mapping:
   -1000
   concept:
   C1442461, 3 Months, 3 Months, -1000
   1, 0, 0
   tmco
   'HL7V2.5','LNC','MTH'
   [[[1,1],[1,1],0],[[2,2],[2,2],0]]
   token: 
   by, by
   prep, prep, 1
   token: 
   3, 
   shapes, , 1


   Phrase:
   Started last week.
   tokens:*Started*last*week*.*
   concepts:*Started*/week*
   mappings:
   mapping:
   -802
   concept:
   C1272689, Started, Started, -660
   0, 0, 0
   qlco
   'CHV','MTH','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   Started, started
   mod, adj, 1
   concept:
   C0332174, /week, Weekly, -827
   1, 0, 0
   tmco
   'CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'
   [[[3,3],[1,1],0]]
   token: 
   week, week
   head, noun, 1


   Phrase:
   Sinus pressure,
   tokens:*Sinus*pressure*' '*
   concepts:*sinus pressure*
   mappings:
   mapping:
   -1000
   concept:
   C0848633, sinus pressure, sinus pressure, -1000
   1, 0, 0
   sosy
   'CHV','NLMSubSyn'
   [[[1,1],[1,1],0],[[2,2],[2,2],0]]
   token: 
   Sinus, sinus
   mod, noun, 1
   token: 
   pressure, pressure
   head, noun, 1


   Phrase:
   post nasal drip ,
   tokens:*post nasal drip*' '*
   concepts:*DRIP, POSTNASAL*
   mappings:
   mapping:
   -1000
   concept:
   C0032781, DRIP, POSTNASAL, Posterior rhinorrhea, -1000
   1, 0, 0
   sosy
   'CHV','COSTAR','CST','ICD10CM','ICD9CM','MTH','NCI','NCI_CTCAE','NCI_NICHD','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'
   [[[1,2],[1,1],0],[[3,3],[2,2],0]]
   token: 
   post nasal drip, post nasal drip
   head, noun, 3
   token: 
   post nasal drip, post nasal drip
   head, noun, 3


   Phrase:
   headache ,
   tokens:*headache*' '*
   concepts:*HEAD ACHE*
   mappings:
   mapping:
   -1000
   concept:
   C0018681, HEAD ACHE, Headache, -1000
   1, 0, 0
   sosy
   'AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NCI_FDA','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'
   [[[1,1],[1,2],0]]
   token: 
   headache, headache
   head, noun, 1


   Phrase:
   ears
   tokens:*ears*
   concepts:*EARS*
   mappings:
   mapping:
   -1000
   concept:
   C0521421, EARS, Entire ear, -1000
   1, 0, 0
   bpoc
   'MTH','NLMSubSyn','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   ears, ears
   head, noun, 1


   Phrase:
   blocked.
   tokens:*blocked*.*
   concepts:*Blocked*
   mappings:
   mapping:
   -1000
   concept:
   C0028778, Blocked, Obstruction, -1000
   1, 0, 0
   patf
   'AOD','CHV','LCH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   blocked, blocked
   verb, verb, 1


   Phrase:
   No fevers.
   tokens:*No*fevers*.*
   concepts:*Fevers*
   mappings:
   mapping:
   -1000
   concept:
   C0015967, Fevers, Fever, -1000
   1, 0, 1
   fndg
   'AIR','AOD','CHV','COSTAR','CSP','CST','DXP','GO','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','QMR','SNM','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   No, no
   det, det, 1


   Phrase:
   Slight white nasal cdischarge.
   tokens:*Slight*white*nasal*cdischarge*.*
   concepts:*Slight*WHITE*NASAL*
   mappings:
   mapping:
   -608
   concept:
   C2945599, Slight, Mild (qualifier value), -645
   0, 0, 0
   qlco
   'CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   Slight, slight
   mod, adj, 1
   concept:
   C0007457, WHITE, Caucasoid Race, -645
   0, 0, 0
   popg
   'AOD','CHV','CSP','DXP','HL7V3.0','LCH_NW','MSH','MTH','NCI','NCI_CDC','NCI_CDISC','NCI_FDA','NLMSubSyn','SNMI','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   white, white
   mod, adj, 1
   concept:
   C0028429, NASAL, Nose, -645
   0, 0, 0
   bpoc
   'AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'
   [[[3,3],[1,1],0]]
   token: 
   nasal, nasal
   mod, adj, 1


   Phrase:
   Taking advil sinus
   tokens:*Taking*advil*sinus*
   concepts:*Take*Advil*Sinus*
   mappings:
   mapping:
   -840
   concept:
   C1515187, Take, Take, -627
   0, 0, 0
   hlca
   'NCI','SNOMEDCT_US'
   [[[1,1],[1,1],1]]
   token: 
   Taking, taking
   mod, adj, 1
   concept:
   C0593507, Advil, Advil, -660
   0, 0, 0
   orch,phsu
   'CHV','MTH','NCI_NCI-GLOSS','RXNORM'
   [[[2,2],[1,1],0]]
   token: 
   advil, advil
   mod, noun, 1
   concept:
   C0030471, Sinus, Nasal sinus, -827
   1, 0, 0
   bsoj
   'CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US','UWDA'
   [[[3,3],[1,1],0]]
   token: 
   sinus, sinus
   head, noun, 1


   Phrase:
   only
   tokens:*only*
   concepts:*Only*
   mappings:
   mapping:
   -1000
   concept:
   C0205171, Only, Singular, -1000
   1, 0, 0
   qnco
   'CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   only, only
   adv, adv, 1


   Phrase:
   helps
   tokens:*helps*
   concepts:*Help*
   mappings:
   mapping:
   -1000
   concept:
   C1269765, Help, Assisted (qualifier value), -1000
   1, 0, 0
   qlco
   'CHV','MTH','NCI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   helps, helps
   verb, verb, 1


   Phrase:
   transiently.
   tokens:*transiently*.*
   concepts:*
   mappings:

   Phrase:
   Not getting better
   tokens:*Not*getting*better*
   concepts:*Not well*
   mappings:
   mapping:
   -730
   concept:
   C3841798, Not well, Not well, -730
   0, 0, 0
   fndg
   'LNC'
   [[[1,1],[1,1],0],[[3,3],[2,2],1]]
   token: 
   Not, not
   adv, adv, 1
   token: 
   better, better
   adv, adv, 1


   Phrase:
   or
   tokens:*or*
   concepts:*
   mappings:

   Phrase:
   worse.
   tokens:*worse*.*
   concepts:*Worse*
   mappings:
   mapping:
   -1000
   concept:
   C1279889, Worse, Deterioration of status, -1000
   1, 0, 1
   fndg
   'MTH','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   worse, worse
   head, adj, 1


   Phrase:
   No chest symptoms -
   tokens:*No*chest*symptoms*-*
   concepts:*Chest*symptoms*
   mappings:
   mapping:
   -888
   concept:
   C1527391, Chest, Anterior thoracic region, -694
   0, 0, 0
   blor
   'MTH','NLMSubSyn','UWDA'
   [[[1,1],[1,1],0]]
   token: 
   No, no
   det, det, 1
   concept:
   C0683368, symptoms, Symptoms aspect, -861
   1, 0, 0
   ftcn
   'MSH','MTH'
   [[[2,2],[1,1],0]]
   token: 
   chest, chest
   mod, noun, 1


   Phrase:
   coughing
   tokens:*coughing*
   concepts:*COUGHING*
   mappings:
   mapping:
   -1000
   concept:
   C0010200, COUGHING, Coughing, -1000
   1, 0, 1
   sosy
   'AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','NCI','NCI_CTCAE','NCI_NICHD','NDFRT','OMIM','QMR','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'
   [[[1,1],[1,1],0]]
   token: 
   coughing, coughing
   verb, verb, 1


   Phrase:
   etc..
   tokens:*etc*.*.*
   concepts:*etc.*
   mappings:
   mapping:
   -1000
   concept:
   C1548556, etc., etc., -1000
   1, 0, 0
   idcn
   'HL7V2.5'
   [[[1,1],[1,1],0]]
   token: 
   etc, etc
   head, noun, 1


   Phrase:
   Got flu
   tokens:*Got*flu*
   concepts:*FlU*
   mappings:
   mapping:
   -861
   concept:
   C2348686, FlU, Fluorescence Units, -861
   1, 0, 0
   qnco
   'MTH','NCI'
   [[[2,2],[1,1],0]]
   token: 
   flu, flu
   head, noun, 1


   Phrase:
   shot
   tokens:*shot*
   concepts:*Shot NOS*
   mappings:
   mapping:
   -1000
   concept:
   C2919062, Shot NOS, Shot (injury), -1000
   1, 0, 0
   inpo
   'ICD10CM','MTH'
   [[[1,1],[1,1],0]]
   token: 
   shot, shot
   verb, verb, 1


   Phrase:
   already.
   tokens:*already*.*
   concepts:*
   mappings:

   Phrase:
   Problems
   tokens:*Problems*
   concepts:*Problems*
   mappings:
   mapping:
   -1000
   concept:
   C1546466, Problems, Problems - What subject filter, -1000
   1, 0, 0
   idcn
   'HL7V2.5','MTH'
   [[[1,1],[1,1],0]]
   token: 
   Problems, problems
   head, noun, 1


   Phrase:
   FH breast cancer
   tokens:*FH*breast cancer*
   concepts:*-- Breast Cancer*
   mappings:
   mapping:
   -901
   concept:
   C0006142, -- Breast Cancer, Malignant neoplasm of breast, -901
   1, 0, 0
   neop
   'AOD','CCS','CHV','CSP','ICD10CM','ICPC','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NLMSubSyn','OMIM','PDQ','SNOMEDCT_US'
   [[[2,3],[1,2],0]]
   token: 
   breast cancer, breast cancer
   head, noun, 2


   Phrase:
   :
   tokens:*:*
   concepts:*
   mappings:

   Phrase:
   37 yo s
   tokens:*37*yo*s*
   concepts:*Yo*
   mappings:
   mapping:
   -660
   concept:
   C1413296, Yo, CDR2 gene, -660
   0, 0, 0
   gngm
   'HGNC','MTH','OMIM'
   [[[2,2],[1,1],0]]
   token: 
   yo, yo
   mod, noun, 1


   Phrase:
   FH myocardial infarction
   tokens:*FH*myocardial infarction*
   concepts:*Myocardial infarction*
   mappings:
   mapping:
   -901
   concept:
   C2926063, Myocardial infarction, Myocardial infarction:Finding:Point in time:^Patient:Ordinal, -901
   1, 0, 0
   clna
   'LNC','MTH','NLMSubSyn'
   [[[2,3],[1,2],0]]
   token: 
   myocardial infarction, myocardial infarction
   head, noun, 2


   Phrase:
   :
   tokens:*:*
   concepts:*
   mappings:

   Phrase:
   mother
   tokens:*mother*
   concepts:*Mother*
   mappings:
   mapping:
   -1000
   concept:
   C0026591, Mother, Mother (person), -1000
   1, 0, 0
   famg
   'AOD','CHV','CSP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   mother, mother
   head, noun, 1


   Phrase:
   died
   tokens:*died*
   concepts:*Died*
   mappings:
   mapping:
   -1000
   concept:
   C1546956, Died, Patient Outcome - Died, -1000
   1, 0, 0
   fndg
   'HL7V2.5','MTH','NLMSubSyn','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   died, died
   verb, verb, 1


   Phrase:
   66 yo
   tokens:*66*yo*
   concepts:*Yo*
   mappings:
   mapping:
   -861
   concept:
   C1413296, Yo, CDR2 gene, -861
   1, 0, 0
   gngm
   'HGNC','MTH','OMIM'
   [[[2,2],[1,1],0]]
   token: 
   yo, yo
   head, noun, 1


   Phrase:
   Hypertension
   tokens:*Hypertension*
   concepts:*Hypertension*
   mappings:
   mapping:
   -1000
   concept:
   C1963138, Hypertension, Hypertension Adverse Event, -1000
   1, 0, 0
   fndg
   'MTH','NCI','NCI_CTCAE'
   [[[1,1],[1,1],0]]
   token: 
   Hypertension, hypertension
   head, noun, 1


   Phrase:
   Uterine fibroids
   tokens:*Uterine fibroids*
   concepts:*Uterine Fibroids*
   mappings:
   mapping:
   -1000
   concept:
   C0042133, Uterine Fibroids, Uterine Fibroids, -1000
   1, 0, 0
   neop
   'CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','LCH_NW','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','OMIM','PDQ','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'
   [[[1,2],[1,2],0]]
   token: 
   Uterine fibroids, uterine fibroids
   head, noun, 2


   Phrase:
   :
   tokens:*:*
   concepts:*
   mappings:

   Phrase:
   u/s 2062
   tokens:*u / s*2062*
   concepts:*U S*
   mappings:
   mapping:
   -901
   concept:
   C0041703, U S, United States, -901
   1, 0, 0
   geoa
   'AOD','CHV','CSP','HL7V3.0','LCH','LNC','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'
   [[[1,1],[1,1],0],[[2,2],[2,2],0]]
   token: 
   u / s, u/s
   mod, noun, 2
   token: 
   u / s, u/s
   mod, noun, 2


   Phrase:
   Smoking
   tokens:*Smoking*
   concepts:*Smoking*
   mappings:
   mapping:
   -1000
   concept:
   C0453996, Smoking, Tobacco smoking behavior, -1000
   1, 0, 0
   inbe
   'CHV','CSP','DXP','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   Smoking, smoking
   head, noun, 1


   Phrase:
   :
   tokens:*:*
   concepts:*
   mappings:

   Phrase:
   quit 2/67 s/p MI
   tokens:*quit*2 / 67*s / p*MI*
   concepts:*QUIT*Mi-2*
   mappings:
   mapping:
   -722
   concept:
   C0748223, QUIT, QUIT, -753
   1, 0, 0
   idcn
   'CHV','MTH'
   [[[1,1],[1,1],0]]
   token: 
   quit, quit
   mod, noun, 1
   concept:
   C1440961, Mi-2, Mi-2, -783
   1, 0, 0
   imft
   'LNC'
   [[[6,6],[1,1],0],[[2,2],[2,2],0]]
   token: 
   MI, mi
   mod, noun, 1
   token: 
   2 / 67, 
   shapes, , 2


   Phrase:
   Hyperlipidemia
   tokens:*Hyperlipidemia*
   concepts:*HYPERLIPIDEMIA*
   mappings:
   mapping:
   -1000
   concept:
   C0020473, HYPERLIPIDEMIA, Hyperlipidemia, -1000
   1, 0, 0
   dsyn
   'AOD','CHV','COSTAR','CSP','CST','DXP','ICD10CM','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NDFRT','OMIM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'
   [[[1,1],[1,1],0]]
   token: 
   Hyperlipidemia, hyperlipidemia
   head, noun, 1


   Phrase:
   :
   tokens:*:*
   concepts:*
   mappings:

   Phrase:
   CRF mild chol,
   tokens:*CRF*mild*chol*' '*
   concepts:*MILD*CHOL*
   mappings:
   mapping:
   -790
   concept:
   C2945599, MILD, Mild (qualifier value), -660
   0, 0, 0
   qlco
   'CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   mild, mild
   mod, adj, 1
   concept:
   C0201950, CHOL, Cholesterol measurement test, -827
   1, 0, 0
   lbpr
   'AOD','CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'
   [[[3,3],[1,1],0]]
   token: 
   chol, chol
   head, noun, 1


   Phrase:
   cigs,
   tokens:*cigs*' '*
   concepts:*
   mappings:

   Phrase:
   HTN,
   tokens:*HTN*' '*
   concepts:*HTN*
   mappings:
   mapping:
   -1000
   concept:
   C0020538, HTN, Hypertensive disease, -1000
   1, 0, 0
   dsyn
   'AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'
   [[[1,1],[1,1],0]]
   token: 
   HTN, htn
   head, noun, 1


   Phrase:
   Fhx
   tokens:*Fhx*
   concepts:*FHX*
   mappings:
   mapping:
   -1000
   concept:
   C1428412, FHX, FOXJ2 gene, -1000
   1, 0, 0
   gngm
   'HGNC','MTH'
   [[[1,1],[1,1],0]]
   token: 
   Fhx, fhx
   head, noun, 1


   Phrase:
   and
   tokens:*and*
   concepts:*
   mappings:

   Phrase:
   known hx CAD in pt.
   tokens:*known*hx*CAD*in*pt*.*
   concepts:*KNOWN CAD*Hx*PT*
   mappings:
   mapping:
   -761
   concept:
   C3275096, KNOWN CAD, Known Coronary Artery Disease, -797
   1, 0, 0
   qnco
   'NCI','NCI_CDISC','NLMSubSyn'
   [[[1,1],[1,1],0],[[3,3],[2,2],0]]
   token: 
   known, known
   mod, adj, 1
   token: 
   CAD, cad
   head, noun, 1
   concept:
   C0262926, Hx, Medical History, -593
   0, 0, 0
   fndg
   'AIR','AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','NCI_NICHD','NLMSubSyn','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   hx, hx
   mod, noun, 1
   concept:
   C0699718, PT, Physical therapy (field), -593
   0, 0, 0
   bmod
   'CHV','LNC','MTH','NLMSubSyn'
   [[[5,5],[1,1],0]]
   token: 
   pt, pt
   mod, noun, 1


   Phrase:
   borderline diabetes mellitus
   tokens:*borderline*diabetes mellitus*
   concepts:*Borderline Diabetes Mellitus*
   mappings:
   mapping:
   -1000
   concept:
   C0856873, Borderline Diabetes Mellitus, borderline diabetes, -1000
   1, 0, 0
   dsyn
   'CHV','NLMSubSyn'
   [[[1,1],[1,1],0],[[2,3],[2,3],0]]
   token: 
   borderline, borderline
   mod, adj, 1
   token: 
   diabetes mellitus, diabetes mellitus
   head, noun, 2


   Phrase:
   :
   tokens:*:*
   concepts:*
   mappings:

   Phrase:
   4/63 125 ,
   tokens:*4 / 63*125*' '*
   concepts:*4+*
   mappings:
   mapping:
   -827
   concept:
   C3838679, 4+, 4+ Answer to question, -827
   1, 0, 0
   fndg
   'LNC','MTH'
   [[[1,1],[1,1],0]]
   token: 
   4 / 63, 
   shapes, , 2


   Phrase:
   follow
   tokens:*follow*
   concepts:*Follow*
   mappings:
   mapping:
   -1000
   concept:
   C1719822, Follow, Follow, -1000
   1, 0, 0
   inpr
   'MTH','NCI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   follow, follow
   verb, verb, 1


   Phrase:
   hgbaic
   tokens:*hgbaic*
   concepts:*
   mappings:

   Phrase:
   VPB
   tokens:*VPB*
   concepts:*VPB*
   mappings:
   mapping:
   -1000
   concept:
   C0151636, VPB, Premature ventricular contractions, -1000
   1, 0, 0
   patf
   'CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LNC','MSH','MTH','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'
   [[[1,1],[1,1],0]]
   token: 
   VPB, vpb
   head, noun, 1


   Phrase:
   :
   tokens:*:*
   concepts:*
   mappings:

   Phrase:
   2065 - ETT
   tokens:*2065*-*ETT*
   concepts:*
   mappings:

   Phrase:
   showed
   tokens:*showed*
   concepts:*Show*
   mappings:
   mapping:
   -966
   concept:
   C1547282, Show, Show, -966
   1, 0, 0
   anim
   'HL7V2.5','HL7V3.0'
   [[[1,1],[1,1],1]]
   token: 
   showed, showed
   verb, verb, 1


   Phrase:
   freq PVC\'s,
   tokens:*freq*PVC\'s*' '*
   concepts:*FREQ*PVC\'S*
   mappings:
   mapping:
   -888
   concept:
   C1414814, FREQ, NCS1 gene, -694
   0, 0, 0
   gngm
   'HGNC','MTH','OMIM'
   [[[1,1],[1,1],0]]
   token: 
   freq, 
   mod, noun, 1
   concept:
   C0151636, PVC\'S, Premature ventricular contractions, -861
   1, 0, 0
   patf
   'CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LNC','MSH','MTH','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'
   [[[2,2],[1,1],0]]
   token: 
   PVC\'s, pvc
   head, noun, 1


   Phrase:
   bigeminy
   tokens:*bigeminy*
   concepts:*Bigeminy*
   mappings:
   mapping:
   -1000
   concept:
   C1963278, Bigeminy, Bigeminy Adverse Event, -1000
   1, 0, 0
   fndg
   'MTH','NCI','NCI_CTCAE'
   [[[1,1],[1,1],0]]
   token: 
   bigeminy, bigeminy
   head, noun, 1


   Phrase:
   and
   tokens:*and*
   concepts:*
   mappings:

   Phrase:
   couplets,
   tokens:*couplets*' '*
   concepts:*Couplets*
   mappings:
   mapping:
   -1000
   concept:
   C0429001, Couplets, Paired ventricular premature complexes, -1000
   1, 0, 0
   patf
   'CHV','MTH','NCI','NCI_CDISC','NLMSubSyn','OMIM','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   couplets, couplets
   head, noun, 1


   Phrase:
   nondx for ischemia
   tokens:*nondx*for*ischemia*
   concepts:*ISCHEMIA*
   mappings:
   mapping:
   -623
   concept:
   C0022116, ISCHEMIA, Ischemia, -623
   0, 0, 0
   patf
   'AOD','CHV','COSTAR','CSP','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US'
   [[[3,3],[1,1],0]]
   token: 
   ischemia, ischemia
   mod, noun, 1


   Phrase:
   Coronary artery disease
   tokens:*Coronary artery disease*
   concepts:*CORONARY ARTERY DISEASE*
   mappings:
   mapping:
   -1000
   concept:
   C1956346, CORONARY ARTERY DISEASE, Coronary Artery Disease, -1000
   1, 0, 0
   dsyn
   'AOD','COSTAR','CSP','CST','DXP','HPO','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','OMIM','SNMI','SNOMEDCT_US'
   [[[1,3],[1,3],0]]
   token: 
   Coronary artery disease, coronary artery disease
   head, noun, 3


   Phrase:
   :
   tokens:*:*
   concepts:*
   mappings:

   Phrase:
   s/p ant SEMI + stent LAD 2/67,
   tokens:*s / p*ant*SEMI*+*stent*LAD*2 / 67*' '*
   concepts:*Ant*Stent',*
   mappings:
   mapping:
   -728
   concept:
   C0003455, Ant, Ants, -799
   1, 0, 0
   euka
   'CHV','CSP','LCH','LCH_NW','MSH','MTH','NCBI','SNM','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   s / p, s/p
   prep, prep, 2
   concept:
   C0038257, Stent',,  device', -799
   1, 0, 0
   medd
   'CHV','CSP','MSH','MTH','SNMI','SNOMEDCT_US'
   [[[3,3],[1,1],0]]
   token: 
   ant, ant
   mod, noun, 1


   Phrase:
   Dr Oakley,
   tokens:*Dr*Oakley*' '*
   concepts:*DR*
   mappings:
   mapping:
   -694
   concept:
   C1707664, DR, Delayed Release Dosage Form, -694
   0, 0, 0
   bodm
   'MTH','NCI','NCI_NCPDP','NLMSubSyn'
   [[[1,1],[1,1],0]]
   token: 
   Dr, dr
   mod, noun, 1


   Phrase:
   ETT Clarkfield 3/67 - neg scan for ischemia.
   tokens:*ETT*Clarkfield*3 / 67*-*neg*scan*for*ischemia*.*
   concepts:*NEG*Scan*ISCHEMIA*
   mappings:
   mapping:
   -645
   concept:
   C3853545, NEG, Negative - answer, -578
   0, 0, 0
   qlco
   'MTH','NCI'
   [[[5,5],[1,1],0]]
   token: 
   -, 
   punc, , 1
   concept:
   C0441633, Scan, Scanning, -744
   1, 0, 0
   diap
   'CHV','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNOMEDCT_US'
   [[[6,6],[1,1],0]]
   token: 
   neg, neg
   mod, noun, 1
   concept:
   C0022116, ISCHEMIA, Ischemia, -578
   0, 0, 0
   patf
   'AOD','CHV','COSTAR','CSP','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US'
   [[[8,8],[1,1],0]]
   token: 
   for, for
   prep, prep, 1


   Phrase:
   Thyroid nodule
   tokens:*Thyroid nodule*
   concepts:*THYROID NODULE*
   mappings:
   mapping:
   -1000
   concept:
   C0040137, THYROID NODULE, Thyroid Nodule, -1000
   1, 0, 0
   neop
   'CHV','COSTAR','DXP','MSH','MTH','MTHICD9','NCI','NDFRT','SNM','SNMI','SNOMEDCT_US'
   [[[1,2],[1,2],0]]
   token: 
   Thyroid nodule, thyroid nodule
   head, noun, 2


   Phrase:
   :
   tokens:*:*
   concepts:*
   mappings:

   Phrase:
   2065,
   tokens:*2065*' '*
   concepts:*
   mappings:

   Phrase:
   thyroid scan 2066 consistent with hot nodule
   tokens:*thyroid scan*2066*consistent*with*hot*nodule*
   concepts:*Scan*Consistent with*hot nodule thyroid*
   mappings:
   mapping:
   -774
   concept:
   C0441633, Scan, Scanning, -581
   0, 0, 0
   diap
   'CHV','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   thyroid scan, thyroid scan
   mod, noun, 2
   concept:
   C0332290, Consistent with, Consistent with, -778
   1, 0, 0
   idcn
   'CHV','MTH','NCI','SNMI','SNOMEDCT_US'
   [[[4,4],[1,1],0],[[5,5],[2,2],0]]
   token: 
   consistent, consistent
   head, adj, 1
   token: 
   with, with
   prep, prep, 1
   concept:
   C0749472, hot nodule thyroid, thyroid nodule hot, -638
   0, 0, 0
   fndg
   'CHV'
   [[[6,6],[1,1],0],[[7,7],[2,2],0],[[1,1],[3,3],0]]
   token: 
   hot, hot
   mod, adj, 1
   token: 
   nodule, nodule
   mod, noun, 1
   token: 
   thyroid scan, thyroid scan
   mod, noun, 2


   Phrase:
   and
   tokens:*and*
   concepts:*
   mappings:

   Phrase:
   toxic multinodular goiter,
   tokens:*toxic multinodular goiter*' '*
   concepts:*Toxic multinodular goiter*
   mappings:
   mapping:
   -1000
   concept:
   C0154143, Toxic multinodular goiter, Toxic multinodular goiter, -1000
   1, 0, 0
   dsyn
   'CHV','COSTAR','DXP','HPO','ICD10CM','ICD9CM','MTHICD9','SNMI','SNOMEDCT_US'
   [[[1,3],[1,3],0]]
   token: 
   toxic multinodular goiter, toxic multinodular goiter
   head, noun, 3


   Phrase:
   saw Dr Dolan,
   tokens:*saw*Dr*Dolan*' '*
   concepts:*SAW*DR*
   mappings:
   mapping:
   -623
   concept:
   C0183089, SAW, saw (device), -660
   0, 0, 0
   medd
   'CHV','MTH','SNOMEDCT_US','SPN'
   [[[1,1],[1,1],0]]
   token: 
   saw, saw
   mod, noun, 1
   concept:
   C1707664, DR, Delayed Release Dosage Form, -660
   0, 0, 0
   bodm
   'MTH','NCI','NCI_NCPDP','NLMSubSyn'
   [[[2,2],[1,1],0]]
   token: 
   Dr, dr
   mod, noun, 1


   Phrase:
   follow
   tokens:*follow*
   concepts:*Follow*
   mappings:
   mapping:
   -1000
   concept:
   C1719822, Follow, Follow, -1000
   1, 0, 0
   inpr
   'MTH','NCI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   follow, follow
   verb, verb, 1


   Phrase:
   TSH.
   tokens:*TSH*.*
   concepts:*
   mappings:

   Phrase:
   Medications
   tokens:*Medications*
   concepts:*Medications*
   mappings:
   mapping:
   -1000
   concept:
   C2598133, Medications, Medications:-:Point in time:^Patient:-, -1000
   1, 0, 0
   clna
   'LNC','MTH'
   [[[1,1],[1,1],0]]
   token: 
   Medications, medications
   head, noun, 1


   Phrase:
   Asa
   tokens:*Asa*
   concepts:*ASA*
   mappings:
   mapping:
   -1000
   concept:
   C0004057, ASA, Aspirin, -1000
   1, 0, 0
   orch,phsu
   'AOD','ATC','CHV','CSP','LCH','LCH_NW','MSH','MTH','MTHSPL','NCI','NCI_DCP','NCI_DTP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'
   [[[1,1],[1,1],0]]
   token: 
   Asa, asa
   head, noun, 1


   Phrase:
   (ACETYLSALICYLIC Acid
   tokens:*(*ACETYLSALICYLIC Acid*
   concepts:*Acetylsalicylic Acid*
   mappings:
   mapping:
   -1000
   concept:
   C0004057, Acetylsalicylic Acid, Aspirin, -1000
   1, 0, 0
   orch,phsu
   'AOD','ATC','CHV','CSP','LCH','LCH_NW','MSH','MTH','MTHSPL','NCI','NCI_DCP','NCI_DTP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'
   [[[1,2],[1,2],0]]
   token: 
   ACETYLSALICYLIC Acid, acetylsalicylic acid
   head, noun, 2


   Phrase:
   )
   tokens:*)*
   concepts:*
   mappings:

   Phrase:
   325MG,
   tokens:*325MG*' '*
   concepts:*
   mappings:

   Phrase:
   1 Tablet
   tokens:*1*Tablet*
   concepts:*1+',*TABLET*
   mappings:
   mapping:
   -888
   concept:
   C2981698, 1+',,  WHO', -694
   0, 0, 0
   clas
   'MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   1, 
   shapes, , 1
   concept:
   C0039225, TABLET, Tablet Dosage Form, -861
   1, 0, 0
   bodm
   'CHV','HL7V3.0','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NDFRT','RXNORM','SNMI','SNOMEDCT_US','VANDF'
   [[[2,2],[1,1],0]]
   token: 
   Tablet, tablet
   head, noun, 1


   Phrase:
   (
   tokens:*(*
   concepts:*
   mappings:

   Phrase:
   s)
   tokens:*s )*
   concepts:*
   mappings:

   Phrase:
   PO QD
   tokens:*PO*QD*
   concepts:*PO*QD*
   mappings:
   mapping:
   -888
   concept:
   C0442027, PO, Oral, -694
   0, 0, 0
   spco
   'AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   PO, po
   mod, noun, 1
   concept:
   C0332173, QD, Daily, -861
   1, 0, 0
   tmco
   'CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   QD, qd
   head, noun, 1


   Phrase:
   Nitroglycerin 1/150
   tokens:*Nitroglycerin*1 / 150*
   concepts:*NITROGLYCERIN*
   mappings:
   mapping:
   -827
   concept:
   C0017887, NITROGLYCERIN, Nitroglycerin, -827
   1, 0, 0
   orch,phsu
   'AOD','ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'
   [[[1,1],[1,1],0]]
   token: 
   Nitroglycerin, nitroglycerin
   mod, noun, 1


   Phrase:
   (0.4 Mg
   tokens:*(*0 . 4*Mg*
   concepts:*0%*Mg++*
   mappings:
   mapping:
   -802
   concept:
   C3842591, 0%, 0%, -660
   0, 0, 0
   fndg
   'LNC'
   [[[1,1],[1,1],0]]
   token: 
   (, 
   punc, , 1
   concept:
   C2346927, Mg++, Magnesium Cation, -827
   1, 0, 0
   elii,phsu
   'MTH','MTHSPL','NCI','NCI_CRCH','NCI_FDA','RXNORM'
   [[[3,3],[1,1],0]]
   token: 
   0 . 4, 
   shapes, , 2


   Phrase:
   )
   tokens:*)*
   concepts:*
   mappings:

   Phrase:
   1 TAB SL x1 PRN prn CP
   tokens:*1*TAB*SL*x1*PRN*prn*CP*
   concepts:*1+',*Tab*
   mappings:
   mapping:
   -540
   concept:
   C2981698, 1+',,  WHO', -629
   0, 0, 0
   clas
   'MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   1, 
   shapes, , 1
   concept:
   C1705223, Tab, Tablet Dosing Unit, -629
   0, 0, 0
   qnco
   'MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   TAB, tab
   mod, noun, 1


   Phrase:
   Norvasc
   tokens:*Norvasc*
   concepts:*Norvasc*
   mappings:
   mapping:
   -1000
   concept:
   C0162712, Norvasc, Norvasc, -1000
   1, 0, 0
   orch,phsu
   'CHV','CSP','MSH','MTH','RXNORM'
   [[[1,1],[1,1],0]]
   token: 
   Norvasc, norvasc
   head, noun, 1


   Phrase:
   (AMLODIPINE
   tokens:*(*AMLODIPINE*
   concepts:*AMLODIPINE*
   mappings:
   mapping:
   -1000
   concept:
   C0051696, AMLODIPINE, Amlodipine, -1000
   1, 0, 0
   orch,phsu
   'ATC','CHV','CSP','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'
   [[[1,1],[1,1],0]]
   token: 
   (, 
   punc, , 1


   Phrase:
   )
   tokens:*)*
   concepts:*
   mappings:

   Phrase:
   5MG,
   tokens:*5MG*' '*
   concepts:*
   mappings:

   Phrase:
   1 Tablet
   tokens:*1*Tablet*
   concepts:*1+',*TABLET*
   mappings:
   mapping:
   -888
   concept:
   C2981698, 1+',,  WHO', -694
   0, 0, 0
   clas
   'MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   1, 
   shapes, , 1
   concept:
   C1705223, TABLET, Tablet Dosing Unit, -861
   1, 0, 0
   qnco
   'MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   Tablet, tablet
   head, noun, 1


   Phrase:
   (
   tokens:*(*
   concepts:*
   mappings:

   Phrase:
   s)
   tokens:*s )*
   concepts:*
   mappings:

   Phrase:
   PO QD
   tokens:*PO*QD*
   concepts:*PO*QD*
   mappings:
   mapping:
   -888
   concept:
   C0442027, PO, Oral, -694
   0, 0, 0
   spco
   'AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   PO, po
   mod, noun, 1
   concept:
   C0332173, QD, Daily, -861
   1, 0, 0
   tmco
   'CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   QD, qd
   head, noun, 1


   Phrase:
   Plavix
   tokens:*Plavix*
   concepts:*Plavix*
   mappings:
   mapping:
   -1000
   concept:
   C0633084, Plavix, Plavix, -1000
   1, 0, 0
   orch,phsu
   'CHV','MSH','NCI','PDQ','RXNORM'
   [[[1,1],[1,1],0]]
   token: 
   Plavix, plavix
   head, noun, 1


   Phrase:
   (CLOPIDOGREL
   tokens:*(*CLOPIDOGREL*
   concepts:*CLOPIDOGREL*
   mappings:
   mapping:
   -1000
   concept:
   C0070166, CLOPIDOGREL, clopidogrel, -1000
   1, 0, 0
   orch,phsu
   'ATC','CHV','CSP','LNC','MSH','MTHSPL','NCI','NCI_FDA','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'
   [[[1,1],[1,1],0]]
   token: 
   (, 
   punc, , 1


   Phrase:
   )
   tokens:*)*
   concepts:*
   mappings:

   Phrase:
   75 MG PO QD
   tokens:*75*MG*PO*QD*
   concepts:*Mg++*PO*QD*
   mappings:
   mapping:
   -775
   concept:
   C2346927, Mg++, Magnesium Cation, -645
   0, 0, 0
   elii,phsu
   'MTH','MTHSPL','NCI','NCI_CRCH','NCI_FDA','RXNORM'
   [[[2,2],[1,1],0]]
   token: 
   MG, mg
   mod, noun, 1
   concept:
   C0442027, PO, Oral, -645
   0, 0, 0
   spco
   'AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'
   [[[3,3],[1,1],0]]
   token: 
   PO, po
   mod, noun, 1
   concept:
   C0332173, QD, Daily, -812
   1, 0, 0
   tmco
   'CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'
   [[[4,4],[1,1],0]]
   token: 
   QD, qd
   head, noun, 1


   Phrase:
   ATENOLOL 50MG,
   tokens:*ATENOLOL*50MG*' '*
   concepts:*ATENOLOL*
   mappings:
   mapping:
   -694
   concept:
   C0004147, ATENOLOL, Atenolol, -694
   0, 0, 0
   orch,phsu
   'AOD','ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNMI','SNOMEDCT_US','USPMG','VANDF'
   [[[1,1],[1,1],0]]
   token: 
   ATENOLOL, atenolol
   mod, noun, 1


   Phrase:
   1 Tablet
   tokens:*1*Tablet*
   concepts:*1+',*TABLET*
   mappings:
   mapping:
   -888
   concept:
   C2981698, 1+',,  WHO', -694
   0, 0, 0
   clas
   'MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   1, 
   shapes, , 1
   concept:
   C1705223, TABLET, Tablet Dosing Unit, -861
   1, 0, 0
   qnco
   'MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   Tablet, tablet
   head, noun, 1


   Phrase:
   (
   tokens:*(*
   concepts:*
   mappings:

   Phrase:
   s)
   tokens:*s )*
   concepts:*
   mappings:

   Phrase:
   PO QD
   tokens:*PO*QD*
   concepts:*PO*QD*
   mappings:
   mapping:
   -888
   concept:
   C0442027, PO, Oral, -694
   0, 0, 0
   spco
   'AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   PO, po
   mod, noun, 1
   concept:
   C0332173, QD, Daily, -861
   1, 0, 0
   tmco
   'CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   QD, qd
   head, noun, 1


   Phrase:
   Lipitor
   tokens:*Lipitor*
   concepts:*Lipitor*
   mappings:
   mapping:
   -1000
   concept:
   C0593906, Lipitor, Lipitor, -1000
   1, 0, 0
   orch,phsu
   'CHV','CSP','MSH','NCI','NCI_NCI-GLOSS','PDQ','RXNORM'
   [[[1,1],[1,1],0]]
   token: 
   Lipitor, lipitor
   head, noun, 1


   Phrase:
   (ATORVASTATIN
   tokens:*(*ATORVASTATIN*
   concepts:*ATORVASTATIN*
   mappings:
   mapping:
   -1000
   concept:
   C0286651, ATORVASTATIN, atorvastatin, -1000
   1, 0, 0
   orch,phsu
   'ATC','CHV','CSP','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNOMEDCT_US','USPMG','VANDF'
   [[[1,1],[1,1],0]]
   token: 
   (, 
   punc, , 1


   Phrase:
   )
   tokens:*)*
   concepts:*
   mappings:

   Phrase:
   10MG,
   tokens:*10MG*' '*
   concepts:*
   mappings:

   Phrase:
   1 Tablet
   tokens:*1*Tablet*
   concepts:*1+',*TABLET*
   mappings:
   mapping:
   -888
   concept:
   C2981698, 1+',,  WHO', -694
   0, 0, 0
   clas
   'MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   1, 
   shapes, , 1
   concept:
   C1705223, TABLET, Tablet Dosing Unit, -861
   1, 0, 0
   qnco
   'MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   Tablet, tablet
   head, noun, 1


   Phrase:
   (
   tokens:*(*
   concepts:*
   mappings:

   Phrase:
   s)
   tokens:*s )*
   concepts:*
   mappings:

   Phrase:
   PO QD
   tokens:*PO*QD*
   concepts:*PO*QD*
   mappings:
   mapping:
   -888
   concept:
   C0442027, PO, Oral, -694
   0, 0, 0
   spco
   'AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   PO, po
   mod, noun, 1
   concept:
   C0332173, QD, Daily, -861
   1, 0, 0
   tmco
   'CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   QD, qd
   head, noun, 1


   Phrase:
   Hctz
   tokens:*Hctz*
   concepts:*HCTZ*
   mappings:
   mapping:
   -1000
   concept:
   C0020261, HCTZ, Hydrochlorothiazide, -1000
   1, 0, 0
   orch,phsu
   'ATC','CHV','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'
   [[[1,1],[1,1],0]]
   token: 
   Hctz, hctz
   head, noun, 1


   Phrase:
   (HYDROCHLOROTHIAZIDE
   tokens:*(*HYDROCHLOROTHIAZIDE*
   concepts:*HYDROCHLOROTHIAZIDE*
   mappings:
   mapping:
   -1000
   concept:
   C0020261, HYDROCHLOROTHIAZIDE, Hydrochlorothiazide, -1000
   1, 0, 0
   orch,phsu
   'ATC','CHV','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'
   [[[1,1],[1,1],0]]
   token: 
   (, 
   punc, , 1


   Phrase:
   )
   tokens:*)*
   concepts:*
   mappings:

   Phrase:
   25MG,
   tokens:*25MG*' '*
   concepts:*
   mappings:

   Phrase:
   1 Tablet
   tokens:*1*Tablet*
   concepts:*1+',*TABLET*
   mappings:
   mapping:
   -888
   concept:
   C2981698, 1+',,  WHO', -694
   0, 0, 0
   clas
   'MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   1, 
   shapes, , 1
   concept:
   C1705223, TABLET, Tablet Dosing Unit, -861
   1, 0, 0
   qnco
   'MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   Tablet, tablet
   head, noun, 1


   Phrase:
   (
   tokens:*(*
   concepts:*
   mappings:

   Phrase:
   s)
   tokens:*s )*
   concepts:*
   mappings:

   Phrase:
   PO QD
   tokens:*PO*QD*
   concepts:*PO*QD*
   mappings:
   mapping:
   -888
   concept:
   C0442027, PO, Oral, -694
   0, 0, 0
   spco
   'AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   PO, po
   mod, noun, 1
   concept:
   C0332173, QD, Daily, -861
   1, 0, 0
   tmco
   'CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   QD, qd
   head, noun, 1


   Phrase:
   Zestril
   tokens:*Zestril*
   concepts:*Zestril*
   mappings:
   mapping:
   -1000
   concept:
   C0678140, Zestril, Zestril, -1000
   1, 0, 0
   aapp,phsu
   'CHV','MSH','NCI','NCI_NCI-GLOSS','RXNORM'
   [[[1,1],[1,1],0]]
   token: 
   Zestril, zestril
   head, noun, 1


   Phrase:
   (LISINOPRIL
   tokens:*(*LISINOPRIL*
   concepts:*LISINOPRIL*
   mappings:
   mapping:
   -1000
   concept:
   C0065374, LISINOPRIL, Lisinopril, -1000
   1, 0, 0
   aapp,phsu
   'ATC','CHV','CSP','LNC','MSH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'
   [[[1,1],[1,1],0]]
   token: 
   (, 
   punc, , 1


   Phrase:
   )
   tokens:*)*
   concepts:*
   mappings:

   Phrase:
   40MG,
   tokens:*40MG*' '*
   concepts:*
   mappings:

   Phrase:
   1 Tablet
   tokens:*1*Tablet*
   concepts:*1+',*TABLET*
   mappings:
   mapping:
   -888
   concept:
   C2981698, 1+',,  WHO', -694
   0, 0, 0
   clas
   'MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   1, 
   shapes, , 1
   concept:
   C1705223, TABLET, Tablet Dosing Unit, -861
   1, 0, 0
   qnco
   'MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   Tablet, tablet
   head, noun, 1


   Phrase:
   (
   tokens:*(*
   concepts:*
   mappings:

   Phrase:
   s)
   tokens:*s )*
   concepts:*
   mappings:

   Phrase:
   PO QD
   tokens:*PO*QD*
   concepts:*PO*QD*
   mappings:
   mapping:
   -888
   concept:
   C0442027, PO, Oral, -694
   0, 0, 0
   spco
   'AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   PO, po
   mod, noun, 1
   concept:
   C0332173, QD, Daily, -861
   1, 0, 0
   tmco
   'CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   QD, qd
   head, noun, 1


   Phrase:
   Allergies
   tokens:*Allergies*
   concepts:*Allergies*
   mappings:
   mapping:
   -1000
   concept:
   C0020517, Allergies, Hypersensitivity, -1000
   1, 0, 0
   patf
   'AOD','CCS','CHV','COSTAR','CSP','CST','GO','HL7V2.5','HL7V3.0','ICD10CM','ICF','ICF-CY','ICPC','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   Allergies, allergies
   head, noun, 1


   Phrase:
   Ceclor
   tokens:*Ceclor*
   concepts:*Ceclor*
   mappings:
   mapping:
   -1000
   concept:
   C0701133, Ceclor, Ceclor, -1000
   1, 0, 0
   antb,orch
   'CHV','MSH','RXNORM','SNMI'
   [[[1,1],[1,1],0]]
   token: 
   Ceclor, ceclor
   head, noun, 1


   Phrase:
   (CEFACLOR
   tokens:*(*CEFACLOR*
   concepts:*CEFACLOR*
   mappings:
   mapping:
   -1000
   concept:
   C0007537, CEFACLOR, Cefaclor, -1000
   1, 0, 0
   antb,orch
   'ATC','CHV','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'
   [[[1,1],[1,1],0]]
   token: 
   (, 
   punc, , 1


   Phrase:
   ) -
   tokens:*)*-*
   concepts:*
   mappings:

   Phrase:
   Rash
   tokens:*Rash*
   concepts:*RASH*
   mappings:
   mapping:
   -1000
   concept:
   C0015230, RASH, Exanthema, -1000
   1, 0, 0
   sosy
   'AOD','CHV','COSTAR','CST','HPO','ICD10CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   Rash, rash
   head, noun, 1


   Phrase:
   Physical Exam
   tokens:*Physical*Exam*
   concepts:*Physical Exam*
   mappings:
   mapping:
   -1000
   concept:
   C1744699, Physical Exam, Physical Exam Domain, -1000
   1, 0, 0
   inpr
   'MTH','NCI','NCI_CDISC','NLMSubSyn'
   [[[1,1],[1,1],0],[[2,2],[2,2],0]]
   token: 
   Physical, physical
   mod, adj, 1
   token: 
   Exam, exam
   head, noun, 1


   Phrase:
   Vital signs  140/82  98.2
   tokens:*Vital signs*140 / 82*98 . 2*
   concepts:*Vital signs*
   mappings:
   mapping:
   -827
   concept:
   C0150404, Vital signs, Taking vital signs, -827
   1, 0, 0
   hlca
   'CHV','MTH','SNM','SNMI','SNOMEDCT_US'
   [[[1,2],[1,2],0]]
   token: 
   Vital signs, vital signs
   mod, noun, 2


   Phrase:
   Looks
   tokens:*Looks*
   concepts:*Looks*
   mappings:
   mapping:
   -1000
   concept:
   C0233426, Looks, Personal appearance, -1000
   1, 0, 0
   orga
   'CHV','MTH','SNM','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   Looks, looks
   verb, verb, 1


   Phrase:
   well,
   tokens:*well*' '*
   concepts:*Well*
   mappings:
   mapping:
   -1000
   concept:
   C3146287, Well, Well, -1000
   1, 0, 0
   mnob
   'MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   well, well
   adv, adv, 1


   Phrase:
   nontoxic
   tokens:*nontoxic*
   concepts:*Nontoxic*
   mappings:
   mapping:
   -1000
   concept:
   C1518413, Nontoxic, Nontoxic, -1000
   1, 0, 0
   qlco
   'NCI','NCI_NCI-GLOSS'
   [[[1,1],[1,1],0]]
   token: 
   nontoxic, nontoxic
   head, adj, 1


   Phrase:
   Sinuses - nontender
   tokens:*Sinuses*-*nontender*
   concepts:*Sinus*Non-tender*
   mappings:
   mapping:
   -901
   concept:
   C0016169, Sinus, pathologic fistula, -694
   0, 0, 0
   anab
   'AOD','CHV','COSTAR','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   Sinuses, sinuses
   mod, noun, 1
   concept:
   C0520960, Non-tender, Non-tender, -861
   1, 0, 0
   qlco
   'CHV','OMIM','SNMI','SNOMEDCT_US'
   [[[2,2],[1,2],0]]
   token: 
   -, 
   punc, , 1


   Phrase:
   TM\'s
   tokens:*TM\'s*
   concepts:*TM',*
   mappings:
   mapping:
   -1000
   concept:
   C2744539, TM',,  human', -1000
   1, 0, 0
   aapp,bacs
   'MSH','MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   TM\'s, tm
   head, noun, 1


   Phrase:
   clear
   tokens:*clear*
   concepts:*Clear*
   mappings:
   mapping:
   -1000
   concept:
   C1709157, Clear, Negative Surgical Margin, -1000
   1, 0, 1
   fndg
   'MTH','NCI','NLMSubSyn'
   [[[1,1],[1,1],0]]
   token: 
   clear, clear
   verb, verb, 1


   Phrase:
   OP - negative without exudates
   tokens:*OP*-*negative*without*exudates*
   concepts:*Negative*Exudates*
   mappings:
   mapping:
   -708
   concept:
   C0205160, Negative, Negative, -770
   1, 0, 0
   qlco
   'CHV','HL7V3.0','LNC','MTH','SNMI','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   -, 
   punc, , 1
   concept:
   C0015388, Exudates, Exudate, -604
   0, 0, 0
   bdsu
   'CHV','CSP','LNC','MSH','MTH','NCI','NCI_CDISC','SNM','SNMI','SNOMEDCT_US'
   [[[4,4],[1,1],0]]
   token: 
   without, without
   prep, prep, 1


   Phrase:
   neck- supple without increased nodes
   tokens:*neck*-*supple*without*increased*nodes*
   concepts:*NECK*Supple*Increased*nodes*
   mappings:
   mapping:
   -724
   concept:
   C0027530, NECK, Neck, -593
   0, 0, 0
   blor
   'AOD','CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'
   [[[1,1],[1,1],0]]
   token: 
   neck, neck
   mod, noun, 1
   concept:
   C0332254, Supple, Supple, -760
   1, 0, 0
   ftcn
   'CHV','SNMI','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   -, 
   punc, , 1
   concept:
   C0205217, Increased, Increased, -593
   0, 0, 0
   qnco
   'CHV','LNC','MTH','SNMI','SNOMEDCT_US'
   [[[4,4],[1,1],0]]
   token: 
   without, without
   prep, prep, 1
   concept:
   C0746922, nodes, Anatomic Node, -593
   0, 0, 0
   bpoc
   'CHV','MTH','NCI'
   [[[5,5],[1,1],0]]
   token: 
   increased, increased
   mod, adj, 1


   Phrase:
   lungs - clear without wheezing
   tokens:*lungs*-*clear*without*wheezing*
   concepts:*LUNGS*Clear*WHEEZING*
   mappings:
   mapping:
   -733
   concept:
   C0024109, LUNGS, Lung, -604
   0, 0, 0
   bpoc
   'AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'
   [[[1,1],[1,1],0]]
   token: 
   lungs, lungs
   mod, noun, 1
   concept:
   C1709157, Clear, Negative Surgical Margin, -770
   1, 0, 1
   fndg
   'MTH','NCI','NLMSubSyn'
   [[[2,2],[1,1],0]]
   token: 
   -, 
   punc, , 1
   concept:
   C0043144, WHEEZING, Wheezing, -604
   0, 0, 1
   sosy
   'CHV','COSTAR','CST','DXP','ICD10CM','ICD9CM','ICPC','LNC','MSH','MTH','NCI','NCI_CTCAE','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US'
   [[[4,4],[1,1],0]]
   token: 
   without, without
   prep, prep, 1


   Phrase:
   on forced exp
   tokens:*on*forced*exp*
   concepts:*Forced*EXP*
   mappings:
   mapping:
   -888
   concept:
   C0443221, Forced, Forced, -694
   0, 0, 0
   ftcn
   'CHV','MTH','NCI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   on, on
   prep, prep, 1
   concept:
   C1417055, EXP, MBNL1 gene, -861
   1, 0, 0
   gngm
   'HGNC','MTH','OMIM'
   [[[2,2],[1,1],0]]
   token: 
   forced, forced
   mod, adj, 1


   Phrase:
   CVS - rrrs2s2
   tokens:*CVS*-*rrrs2s2*
   concepts:*
   mappings:

   Phrase:
   Assessment
   tokens:*Assessment*
   concepts:*Assessment*
   mappings:
   mapping:
   -1000
   concept:
   C1516048, Assessment, Assessed, -1000
   1, 0, 0
   acty
   'MTH','NCI','NCI_NCI-GLOSS'
   [[[1,1],[1,1],0]]
   token: 
   Assessment, assessment
   head, noun, 1


   Phrase:
   and
   tokens:*and*
   concepts:*
   mappings:

   Phrase:
   Plan
   tokens:*Plan*
   concepts:*Plan*
   mappings:
   mapping:
   -1000
   concept:
   C1301732, Plan, Planned, -1000
   1, 0, 0
   ftcn
   'CHV','LNC','MTH','NCI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   Plan, plan
   head, noun, 1


   Phrase:
   1.
   tokens:*1*.*
   concepts:*1+*
   mappings:
   mapping:
   -1000
   concept:
   C2827734, 1+, 1+ Score, -1000
   1, 0, 0
   qnco
   'MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   1, 
   shapes, , 1


   Phrase:
   URI -
   tokens:*URI*-*
   concepts:*
   mappings:

   Phrase:
   no evidence of bact sinus infection.
   tokens:*no*evidence*of*bact*sinus*infection*.*
   concepts:*No evidence of*BACT*Sinus Infection*
   mappings:
   mapping:
   -864
   concept:
   C0332125, No evidence of, No evidence of, -833
   1, 0, 0
   qlco
   'MTH','NLMSubSyn','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0],[[2,2],[2,2],0],[[3,3],[3,3],0]]
   token: 
   no, no
   det, det, 1
   token: 
   evidence, evidence
   head, noun, 1
   token: 
   of, of
   prep, prep, 1
   concept:
   C0004618, BACT, Bacterial Count Measurement, -586
   0, 0, 0
   lbpr
   'CHV','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'
   [[[4,4],[1,1],0]]
   token: 
   bact, bact
   mod, noun, 1
   concept:
   C0037199, Sinus Infection, Sinusitis, -623
   0, 0, 1
   dsyn
   'AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'
   [[[5,5],[1,1],0],[[6,6],[2,2],0]]
   token: 
   sinus, sinus
   mod, noun, 1
   token: 
   infection, infection
   mod, noun, 1


   Phrase:
   Needs
   tokens:*Needs*
   concepts:*Need*
   mappings:
   mapping:
   -1000
   concept:
   C0027552, Need, Needs, -1000
   1, 0, 0
   qlco
   'CHV','MSH','MTH','NCI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   Needs, needs
   verb, verb, 1


   Phrase:
   decongestion
   tokens:*decongestion*
   concepts:*
   mappings:

   Phrase:
   but
   tokens:*but*
   concepts:*
   mappings:

   Phrase:
   would like
   tokens:*would*like*
   concepts:*
   mappings:

   Phrase:
   to
   tokens:*to*
   concepts:*TO*
   mappings:
   mapping:
   -1000
   concept:
   C0040363, TO, Togo, -1000
   1, 0, 0
   geoa
   'AOD','CHV','LCH','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   to, to
   adv, adv, 1


   Phrase:
   avoid
   tokens:*avoid*
   concepts:*
   mappings:

   Phrase:
   decong systemically given history CAD
   tokens:*decong*systemically*given*history*CAD*
   concepts:*History*CAD*
   mappings:
   mapping:
   -728
   concept:
   C2004062, History, History of previous events, -637
   0, 0, 0
   fndg
   'CHV','LCH','MTH','NCI'
   [[[4,4],[1,1],0]]
   token: 
   history, history
   mod, noun, 1
   concept:
   C3813548, CAD, CALD1 wt Allele, -804
   1, 0, 0
   gngm
   'MTH','NCI'
   [[[5,5],[1,1],0]]
   token: 
   CAD, cad
   head, noun, 1


   Phrase:
   and
   tokens:*and*
   concepts:*
   mappings:

   Phrase:
   ectopy in past.
   tokens:*ectopy*in*past*.*
   concepts:*Ectopic*Past*
   mappings:
   mapping:
   -711
   concept:
   C0574895, Ectopic, Ectopic (qualifier value), -718
   1, 0, 0
   spco
   'CHV','MTH','NCI','SNOMEDCT_US'
   [[[1,1],[1,1],3]]
   token: 
   ectopy, ectopy
   head, noun, 1
   concept:
   C1444637, Past, Past, -623
   0, 0, 0
   tmco
   'NCI','SNOMEDCT_US'
   [[[3,3],[1,1],0]]
   token: 
   past, past
   mod, noun, 1


   Phrase:
   Will
   tokens:*Will*
   concepts:*
   mappings:

   Phrase:
   use
   tokens:*use*
   concepts:*use*
   mappings:
   mapping:
   -1000
   concept:
   C0042153, use, utilization qualifier, -1000
   1, 0, 0
   ftcn
   'MSH','MTH'
   [[[1,1],[1,1],0]]
   token: 
   use, use
   verb, verb, 1


   Phrase:
   steam,
   tokens:*steam*' '*
   concepts:*Steam*
   mappings:
   mapping:
   -1000
   concept:
   C0038225, Steam, Steam, -1000
   1, 0, 0
   inch
   'CHV','LCH','LCH_NW','MSH','NDFRT','SNM','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   steam, steam
   head, noun, 1


   Phrase:
   humidity,
   tokens:*humidity*' '*
   concepts:*Humidity*
   mappings:
   mapping:
   -1000
   concept:
   C0020167, Humidity, Humidity, -1000
   1, 0, 0
   npop
   'CHV','CSP','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNM','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   humidity, humidity
   head, noun, 1


   Phrase:
   nasal decong spray for 3 days.
   tokens:*nasal*decong*spray*for*3*days*.*
   concepts:*Nasal Spray*Day 3*
   mappings:
   mapping:
   -732
   concept:
   C0461725, Nasal Spray, Nasal Spray, -783
   1, 0, 0
   bodm
   'CHV','HL7V3.0','MTH','NCI','NCI_NCPDP','NDFRT','RXNORM','SNOMEDCT_US'
   [[[1,1],[1,1],0],[[3,3],[2,2],0]]
   token: 
   nasal, nasal
   mod, adj, 1
   token: 
   spray, spray
   head, noun, 1
   concept:
   C3842675, Day 3, Day 3, -600
   0, 0, 0
   fndg
   'LNC'
   [[[6,6],[1,1],1],[[5,5],[2,2],0]]
   token: 
   days, days
   mod, noun, 1
   token: 
   3, 
   shapes, , 1


   Phrase:
   Call
   tokens:*Call*
   concepts:*Call*
   mappings:
   mapping:
   -1000
   concept:
   C1947967, Call, Call (Instruction), -1000
   1, 0, 0
   ftcn
   'MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   Call, call
   verb, verb, 1


   Phrase:
   if
   tokens:*if*
   concepts:*
   mappings:

   Phrase:
   fevers,
   tokens:*fevers*' '*
   concepts:*Fevers*
   mappings:
   mapping:
   -1000
   concept:
   C0015967, Fevers, Fever, -1000
   1, 0, 1
   fndg
   'AIR','AOD','CHV','COSTAR','CSP','CST','DXP','GO','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','QMR','SNM','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   fevers, fevers
   head, noun, 1


   Phrase:
   worsens
   tokens:*worsens*
   concepts:*Worsens*
   mappings:
   mapping:
   -1000
   concept:
   C1457868, Worsens, Worse, -1000
   1, 0, 0
   fndg
   'CHV','LNC','MTH','NCI','NCI_FDA','SNMI','SNOMEDCT_US','SNOMEDCT_VET'
   [[[1,1],[1,1],0]]
   token: 
   worsens, worsens
   verb, verb, 1


   Phrase:
   or
   tokens:*or*
   concepts:*
   mappings:

   Phrase:
   persists.
   tokens:*persists*.*
   concepts:*
   mappings:

   Phrase:
   2.
   tokens:*2*.*
   concepts:*2+',*
   mappings:
   mapping:
   -1000
   concept:
   C2981700, 2+',,  WHO', -1000
   1, 0, 0
   clas
   'MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   2, 
   shapes, , 1


   Phrase:
   Hot thyroid nodule -
   tokens:*Hot*thyroid nodule*-*
   concepts:*hot thyroid nodule*
   mappings:
   mapping:
   -1000
   concept:
   C0749472, hot thyroid nodule, thyroid nodule hot, -1000
   1, 0, 0
   fndg
   'CHV'
   [[[1,1],[1,1],0],[[2,3],[2,3],0]]
   token: 
   Hot, hot
   mod, adj, 1
   token: 
   thyroid nodule, thyroid nodule
   head, noun, 2


   Phrase:
   was
   tokens:*was*
   concepts:*
   mappings:

   Phrase:
   slightly higher last
   tokens:*slightly*higher*last*
   concepts:*Slightly*Higher*
   mappings:
   mapping:
   -623
   concept:
   C0750482, Slightly, Slightly (qualifier value), -660
   0, 0, 0
   qlco
   'CHV','LNC','MTH','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   slightly, slightly
   adv, adv, 1
   concept:
   C0205250, Higher, High, -660
   0, 0, 0
   qlco
   'CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   higher, higher
   mod, adj, 1


   Phrase:
   visit
   tokens:*visit*
   concepts:*visit*
   mappings:
   mapping:
   -1000
   concept:
   C1512346, visit, Patient Visit, -1000
   1, 0, 0
   hlca
   'HL7V3.0','LNC','MTH','NCI','NCI_CDISC','NLMSubSyn'
   [[[1,1],[1,1],0]]
   token: 
   visit, visit
   verb, verb, 1


   Phrase:
   -
   tokens:*-*
   concepts:*
   mappings:

   Phrase:
   will
   tokens:*will*
   concepts:*
   mappings:

   Phrase:
   refer to Dr Dolan
   tokens:*refer*to*Dr*Dolan*
   concepts:*Refer*DR*
   mappings:
   mapping:
   -708
   concept:
   C0205543, Refer, Referring, -770
   1, 0, 0
   ftcn
   'CHV','LNC','MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   refer, refer
   verb, verb, 1
   concept:
   C1707664, DR, Delayed Release Dosage Form, -770
   1, 0, 0
   bodm
   'MTH','NCI','NCI_NCPDP','NLMSubSyn'
   [[[3,3],[1,1],0]]
   token: 
   Dr, dr
   mod, noun, 1


   Phrase:
   for discussion
   tokens:*for*discussion*
   concepts:*Discussion*
   mappings:
   mapping:
   -1000
   concept:
   C0557061, Discussion, Discussion (procedure), -1000
   1, 0, 0
   topp
   'CHV','MTH','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   for, for
   prep, prep, 1


   Phrase:
   re treating
   tokens:*re treating*
   concepts:*{RE}*Treating*
   mappings:
   mapping:
   -888
   concept:
   C0556581, {RE}, Retinol equivalents, -861
   1, 0, 0
   qnco
   'CHV','MTH','NCI','NCI_UCUM','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   re treating, re treating
   verb, verb, 2
   concept:
   C1522326, Treating, Treating, -861
   1, 0, 0
   ftcn
   'CHV','MTH','NCI'
   [[[2,2],[1,1],0]]
   token: 
   re treating, re treating
   verb, verb, 2


   Phrase:
   this now
   tokens:*this*now*
   concepts:*Now*
   mappings:
   mapping:
   -1000
   concept:
   C1948052, Now, Now (temporal qualifier), -1000
   1, 0, 0
   tmco
   'MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   this, this
   det, det, 1


   Phrase:
   especially
   tokens:*especially*
   concepts:*
   mappings:

   Phrase:
   given
   tokens:*given*
   concepts:*Given*
   mappings:
   mapping:
   -1000
   concept:
   C1947971, Given, Give - dosing instruction imperative, -1000
   1, 0, 0
   ftcn
   'MTH','NCI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   given, given
   verb, verb, 1


   Phrase:
   her history of cardiac ds
   tokens:*her*history*of*cardiac*ds*
   concepts:*History*Cardiac*DS*
   mappings:
   mapping:
   -696
   concept:
   C2004062, History, History of previous events, -760
   1, 0, 0
   fndg
   'CHV','LCH','MTH','NCI'
   [[[2,2],[1,1],0]]
   token: 
   history, history
   head, noun, 1
   concept:
   C1522601, Cardiac, Cardiac - anatomy qualifier, -593
   0, 0, 0
   spco
   'MTH','NCI','NCI_NCI-GLOSS'
   [[[4,4],[1,1],0]]
   token: 
   cardiac, cardiac
   mod, adj, 1
   concept:
   C3714751, DS, Disease Steps Questionnaire, -593
   0, 0, 0
   inpr
   'MTH','NCI','NCI_CDISC'
   [[[5,5],[1,1],0]]
   token: 
   ds, ds
   mod, noun, 1


   Phrase:
   in the last couple of years.
   tokens:*in*the*last*couple*of*years*.*
   concepts:*In*couple*YEARS*
   mappings:
   mapping:
   -666
   concept:
   C0332285, In, Within, -586
   0, 0, 0
   spco
   'CHV','MTH','NCI','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   in, in
   prep, prep, 1
   concept:
   C0010222, couple, Couples (persons), -753
   1, 0, 0
   famg
   'CHV','MSH','MTH'
   [[[4,4],[1,1],0]]
   token: 
   couple, couple
   head, noun, 1
   concept:
   C0439234, YEARS, year, -586
   0, 0, 0
   tmco
   'CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'
   [[[6,6],[1,1],0]]
   token: 
   years, years
   mod, noun, 1


   Phrase:
   3.
   tokens:*3*.*
   concepts:*<3*
   mappings:
   mapping:
   -1000
   concept:
   C0439086, <3, <3 (qualifier value), -1000
   1, 0, 0
   qnco
   'MTH','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   3, 
   shapes, , 1


   Phrase:
   blood pressure -
   tokens:*blood pressure*-*
   concepts:*Blood Pressure*
   mappings:
   mapping:
   -1000
   concept:
   C1271104, Blood Pressure, Blood pressure finding, -1000
   1, 0, 0
   fndg
   'MTH','NCI','NLMSubSyn','SNOMEDCT_US'
   [[[1,2],[1,2],0]]
   token: 
   blood pressure, blood pressure
   head, noun, 2


   Phrase:
   slightly
   tokens:*slightly*
   concepts:*Slightly*
   mappings:
   mapping:
   -1000
   concept:
   C0750482, Slightly, Slightly (qualifier value), -1000
   1, 0, 0
   qlco
   'CHV','LNC','MTH','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   slightly, slightly
   adv, adv, 1


   Phrase:
   elevated above what
   tokens:*elevated*above*what*
   concepts:*Elevated*
   mappings:
   mapping:
   -790
   concept:
   C0205250, Elevated, High, -790
   1, 0, 0
   qlco
   'CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   elevated, elevated
   verb, verb, 1


   Phrase:
   would
   tokens:*would*
   concepts:*
   mappings:

   Phrase:
   want
   tokens:*want*
   concepts:*
   mappings:

   Phrase:
   it.
   tokens:*it*.*
   concepts:*
   mappings:

   Phrase:
   Will
   tokens:*Will*
   concepts:*
   mappings:

   Phrase:
   recheck on follow-up
   tokens:*recheck*on*follow - up*
   concepts:*Follow Up*
   mappings:
   mapping:
   -833
   concept:
   C1522577, Follow Up, follow-up, -833
   1, 0, 0
   hlca
   'MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS'
   [[[3,3],[1,1],0],[[4,4],[2,2],0]]
   token: 
   follow - up, follow-up
   mod, adj, 2
   token: 
   follow - up, follow-up
   mod, adj, 2


   Phrase:
   which
   tokens:*which*
   concepts:*
   mappings:

   Phrase:
   will
   tokens:*will*
   concepts:*
   mappings:

   Phrase:
   be
   tokens:*be*
   concepts:*
   mappings:

   Phrase:
   soon
   tokens:*soon*
   concepts:*
   mappings:

   Phrase:
   4.
   tokens:*4*.*
   concepts:*4+*
   mappings:
   mapping:
   -1000
   concept:
   C3838679, 4+, 4+ Answer to question, -1000
   1, 0, 0
   fndg
   'LNC','MTH'
   [[[1,1],[1,1],0]]
   token: 
   4, 
   shapes, , 1


   Phrase:
   Chol-
   tokens:*Chol*-*
   concepts:*CHOL*
   mappings:
   mapping:
   -1000
   concept:
   C0201950, CHOL, Cholesterol measurement test, -1000
   1, 0, 0
   lbpr
   'AOD','CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   Chol, chol
   head, noun, 1


   Phrase:
   will
   tokens:*will*
   concepts:*
   mappings:

   Phrase:
   check
   tokens:*check*
   concepts:*Check*
   mappings:
   mapping:
   -1000
   concept:
   C1283174, Check, Checking (action), -1000
   1, 0, 0
   acty
   'LNC','MTH','NCI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   check, check
   verb, verb, 1


   Phrase:
   fastings next visit.
   tokens:*fastings*next*visit*.*
   concepts:*next*Visit*
   mappings:
   mapping:
   -790
   concept:
   C0205117, next, Adjacent, -660
   0, 0, 0
   spco
   'CHV','MTH','NCI','SNMI','SNOMEDCT_US'
   [[[2,2],[1,1],0]]
   token: 
   next, next
   mod, adj, 1
   concept:
   C0545082, Visit, Visit, -827
   1, 0, 0
   bhvr
   'MTH','NCI','SNM'
   [[[3,3],[1,1],0]]
   token: 
   visit, visit
   head, noun, 1


   Phrase:
   Lfts
   tokens:*Lfts*
   concepts:*LFT*
   mappings:
   mapping:
   -966
   concept:
   C0023901, LFT, Liver Function Tests, -966
   1, 0, 0
   lbpr
   'AOD','CHV','LCH','LCH_NW','MSH','MTH','MTHMST','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],1]]
   token: 
   Lfts, lfts
   head, noun, 1


   Phrase:
   okay in June
   tokens:*okay*in*June*
   concepts:*June*
   mappings:
   mapping:
   -790
   concept:
   C3829443, June, June, -790
   1, 0, 0
   tmco
   'LNC','NCI'
   [[[3,3],[1,1],0]]
   token: 
   June, june
   mod, noun, 1


   Phrase:
   Due for annual -
   tokens:*Due*for*annual*-*
   concepts:*due*Annual*
   mappings:
   mapping:
   -746
   concept:
   C0678226, due, Due to, -790
   1, 0, 0
   ftcn
   'CHV','MTH','NCI','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   Due, due
   head, adj, 1
   concept:
   C0332181, Annual, Annual, -623
   0, 0, 0
   tmco
   'CHV','MTH','NCI','SNMI','SNOMEDCT_US'
   [[[3,3],[1,1],0]]
   token: 
   annual, annual
   mod, adj, 1


   Phrase:
   will
   tokens:*will*
   concepts:*
   mappings:

   Phrase:
   schedule
   tokens:*schedule*
   concepts:*Schedule*
   mappings:
   mapping:
   -1000
   concept:
   C0086960, Schedule, Schedule (document type), -1000
   1, 0, 0
   inpr
   'CHV','MSH','MTH','NCI','NCI_NCI-GLOSS'
   [[[1,1],[1,1],0]]
   token: 
   schedule, schedule
   verb, verb, 1


   Phrase:
   next avail.
   tokens:*next*avail*.*
   concepts:*Next*
   mappings:
   mapping:
   -694
   concept:
   C0332282, Next, Following, -694
   0, 0, 0
   tmco
   'CHV','MTH','NCI','SNMI','SNOMEDCT_US'
   [[[1,1],[1,1],0]]
   token: 
   next, next
   mod, adj, 1


   Phrase:
   Beverly Thiel MD
   tokens:*Beverly*Thiel*MD*
   concepts:*
   mappings:

   Phrase:
   ]
   tokens:*'*
   concepts:*
   mappings:

   Phrase:
   ]
   tokens:*'*
   concepts:*
   mappings:

   Phrase:
   >
   tokens:*>*
   concepts:*
   mappings:

   Phrase:
   </TEXT
   tokens:*<*/*TEXT*
   concepts:*Text*
   mappings:
   mapping:
   -1000
   concept:
   C1705606, Text, Text Line, -1000
   1, 0, 0
   inpr
   'MTH','NCI'
   [[[1,1],[1,1],0]]
   token: 
   <, 
   punc, , 1


   Phrase:
   >
   tokens:*>*
   concepts:*
   mappings:

   Phrase:
   <TAGS
   tokens:*<*TAGS*
   concepts:*tags*
   mappings:
   mapping:
   -1000
   concept:
   C1139855, tags, Tags (device), -1000
   1, 0, 0
   medd
   'CHV','MTH'
   [[[1,1],[1,1],0]]
   token: 
   <, 
   punc, , 1


   Phrase:
   >
   tokens:*>*
   concepts:*
   mappings:

   Phrase:
   </TAGS
   tokens:*<*/*TAGS*
   concepts:*tags*
   mappings:
   mapping:
   -1000
   concept:
   C1139855, tags, Tags (device), -1000
   1, 0, 0
   medd
   'CHV','MTH'
   [[[1,1],[1,1],0]]
   token: 
   <, 
   punc, , 1


   Phrase:
   >
   tokens:*>*
   concepts:*
   mappings:

   Phrase:
   </root
   tokens:*<*/*root*
   concepts:*Root*
   mappings:
   mapping:
   -1000
   concept:
   C1318154, Root, Root body part, -1000
   1, 0, 0
   bpoc
   'CHV','LNC','MTH'
   [[[1,1],[1,1],0]]
   token: 
   <, 
   punc, , 1


   Phrase:
   >
   tokens:*>*
   concepts:*
   mappings:


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

