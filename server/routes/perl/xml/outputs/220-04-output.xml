args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"<?xml version=""1.0"" encoding=""UTF-8""?> <root>   <TEXT><![CDATA[",0/63,[]).
phrase('<?xml version',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([?]),tokens([])]),mod([lexmatch([xml]),inputmatch([xml]),tag(noun),tokens([xml])]),head([lexmatch([version]),inputmatch([version]),tag(noun),tokens([version])])],0/13,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C1707981','XML','Extensible Markup Language',[xml],[inpr],[[[1,1],[1,1],0]],no,no,['HL7V3.0','NCI'],[2/3],0,0),ev(-861,'C0333052','Version','Version',[version],[ftcn],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','MTHICD9','NCI','NCI_CDISC'],[6/7],0,0)])]).
phrase('="1.0"',[punc([inputmatch([=]),tokens([])]),punc([inputmatch(['"']),tokens([])]),shapes([inputmatch(['1','.','0']),features([real_number]),tokens(['1','0'])]),punc([inputmatch(['"']),tokens([])])],13/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-861,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[15/1],0,0),ev(-861,'C3842591','0%','0%',['0'],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC'],[17/1],0,0)])]).
phrase(encoding,[verb([lexmatch([encoding]),inputmatch([encoding]),tag(verb),tokens([encoding])])],20/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1547699','Encoding','MIME encoding',[encoding],[idcn],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH'],[20/8],0,0)])]).
phrase('="UTF-8"?',[punc([inputmatch([=]),tokens([])]),punc([inputmatch(['"']),tokens([])]),mod([lexmatch([utf]),inputmatch(['UTF']),tag(noun),tokens([utf])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['8']),features([integer]),tokens(['8'])]),punc([inputmatch(['"']),tokens([])]),punc([inputmatch([?]),tokens([])])],28/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1555005','UTF-8','UTF-8',[utf,'8'],[inpr],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['HL7V3.0'],[30/5],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],37/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<root',[punc([inputmatch([<]),tokens([])]),head([lexmatch([root]),inputmatch([root]),tag(noun),tokens([root])])],39/5,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1318154','Root','Root body part',[root],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH'],[40/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],44/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<TEXT',[punc([inputmatch([<]),tokens([])]),head([lexmatch([text]),inputmatch(['TEXT']),tag(noun),tokens([text])])],48/5,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1705606','Text','Text Line',[text],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[49/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],53/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<!',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([!]),tokens([])])],54/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('[CDATA',[punc([inputmatch(['[']),tokens([])]),head([inputmatch(['CDATA']),tag(noun),tokens([cdata])])],56/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0640049','CDATA','3-chloro-4-dimethylaminothioangelicin',[cdata],[orch],[[[1,1],[1,1],0]],yes,no,['MSH'],[57/5],0,0)])]).
phrase('[',[punc([inputmatch(['[']),tokens([])])],62/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Record date: 2072-07-27",0/23,[]).
phrase('Record date',[mod([lexmatch([record]),inputmatch(['Record']),tag(noun),tokens([record])]),head([lexmatch([date]),inputmatch([date]),tag(noun),tokens([date])])],0/11,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-694,'C0034869','Record','Records',[record],[inpr],[[[1,1],[1,1],0]],no,no,['CHV','HL7V3.0','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA'],[0/6],0,0),ev(-861,'C0011008','DATE','Date in time',[date],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MSH','MTH','NCI','NCI_CareLex','NCI_NICHD','SNOMEDCT_US'],[7/4],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],11/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('2072-07-27',[shapes([inputmatch(['2072']),features([integer]),tokens(['2072'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['07']),features([integer]),tokens(['07'])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['27']),features([integer]),tokens(['27'])])],13/10,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Narrative History^I  Patient  presents for an annual exam.   ",1/60,[]).
phrase('Narrative History\t  Patient',[mod([lexmatch([narrative]),inputmatch(['Narrative']),tag(adj),tokens([narrative])]),mod([lexmatch([history]),inputmatch(['History']),tag(noun),tokens([history])]),head([lexmatch([patient]),inputmatch(['Patient']),tag(noun),tokens([patient])])],1/27,[]).
candidates(14,2,0,12,[]).
mappings([map(-901,[ev(-660,'C1135957','Narrative','Narration',[narrative],[socb],[[[1,1],[1,1],0]],no,no,['CHV','MSH','MTH','NCI'],[1/9],0,0),ev(-901,'C0679831','history patient','Patient History',[history,patient],[hlca],[[[2,2],[1,1],0],[[3,3],[2,2],0]],yes,no,['AOD','CHV','LNC','MTH','NLMSubSyn'],[11/7,21/7],0,0)])]).
phrase('presents for an annual exam.',[verb([lexmatch([presents]),inputmatch([presents]),tag(verb),tokens([presents])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),det([lexmatch([an]),inputmatch([an]),tag(det),tokens([an])]),mod([lexmatch([annual]),inputmatch([annual]),tag(adj),tokens([annual])]),mod([lexmatch([exam]),inputmatch([exam]),tag(noun),tokens([exam])]),punc([inputmatch(['.']),tokens([])])],30/28,[]).
candidates(4,0,0,4,[]).
mappings([map(-696,[ev(-760,'C0150312','Present','Present',[present],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[30/8],0,0),ev(-760,'C0332181','Annual','Annual',[annual],[tmco],[[[4,4],[1,1],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[46/6],0,0),ev(-760,'C0582103','Exam','Medical Examination',[exam],[hlca],[[[5,5],[1,1],0]],yes,no,['CHV','CSP','LCH','MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[53/4],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Not seen for almost 2 years.",61/28,[]).
phrase('Not',[adv([lexmatch([not]),inputmatch(['Not']),tag(adv),tokens([not])])],61/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[61/3],0,0)])]).
phrase('seen for almost 2 years.',[verb([lexmatch([seen]),inputmatch([seen]),tag(verb),tokens([seen])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),adv([lexmatch([almost]),inputmatch([almost]),tag(adv),tokens([almost])]),shapes([inputmatch(['2']),features([integer]),tokens(['2'])]),mod([lexmatch([years]),inputmatch([years]),tag(noun),tokens([years])]),punc([inputmatch(['.']),tokens([])])],65/24,[]).
candidates(6,3,0,3,[]).
mappings([map(-687,[ev(-760,'C0205397','Seen',seen,[seen],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','SNMI','SNOMEDCT_US'],[65/4],0,0),ev(-760,'C3828842','Almost','Nearly',[almost],[qlco],[[[3,3],[1,1],0]],yes,no,['NCI'],[74/6],0,0),ev(-760,'C0439234','YEARS',year,[years],[tmco],[[[5,5],[1,1],0]],yes,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[83/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"State she's had a very difficult time with her husband's death 2070.  ",0/70,[]).
phrase('State',[verb([lexmatch([state]),inputmatch(['State']),tag(verb),tokens([state])])],0/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1442792','State','State',[state],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[0/5],0,0)])]).
phrase('she\'s',[head([lexmatch(['she\'s']),inputmatch([she,'\'',s]),tag(noun),tokens([she,s])])],6/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C1822717','SHE','SHE gene',[she],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[6/3],0,0)])]).
phrase(had,[aux([lexmatch([had]),inputmatch([had]),tag(aux),tokens([had])])],12/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('a very difficult time with her husband\'s death 2070.',[det([lexmatch([a]),inputmatch([a]),tag(det),tokens([a])]),adv([lexmatch([very]),inputmatch([very]),tag(adv),tokens([very])]),mod([lexmatch([difficult]),inputmatch([difficult]),tag(adj),tokens([difficult])]),head([lexmatch([time]),inputmatch([time]),tag(noun),tokens([time])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),mod([lexmatch([husband]),inputmatch(['husband\'s']),tag(noun),tokens([husband])]),mod([lexmatch([death]),inputmatch([death]),tag(noun),tokens([death])]),shapes([inputmatch(['2070']),features([integer]),tokens(['2070'])]),punc([inputmatch(['.']),tokens([])])],16/52,[]).
candidates(14,3,0,11,[]).
mappings([map(-690,[ev(-598,'C3843353','Very difficult','Very difficult',[very,difficult],[fndg],[[[2,2],[1,1],0],[[3,3],[2,2],0]],no,no,['LNC'],[18/14],0,0),ev(-575,'C0242664','Husband',husband,[husband],[famg],[[[7,7],[1,1],0]],no,no,['AOD','CHV','CSP','HL7V3.0','MSH','MTH','NCI','SNOMEDCT_US'],[47/9],0,0),ev(-762,'C1301931','death time','Time of death',[death,time],[tmco],[[[8,8],[1,1],0],[[4,4],[2,2],0]],yes,no,['CHV','LNC','MTH','NCI','SNOMEDCT_US'],[33/4,57/5],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Angry and sad and guilty feelings.  ",70/36,[]).
phrase('Angry',[head([lexmatch([angry]),inputmatch(['Angry']),tag(adj),tokens([angry])])],70/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0002957','Angry','Anger',[angry],[menp],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NICHD','SNM','SNMI','SNOMEDCT_US'],[70/5],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],76/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(sad,[head([lexmatch([sad]),inputmatch([sad]),tag(noun),tokens([sad])])],80/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3536794','Sad','Sad mood',[sad],[menp],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','DXP','LNC','MTH','NCI','NCI_NICHD','SNM','SNMI','SNOMEDCT_US'],[80/3],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],84/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('guilty feelings.',[mod([lexmatch([guilty]),inputmatch([guilty]),tag(adj),tokens([guilty])]),head([lexmatch([feelings]),inputmatch([feelings]),tag(noun),tokens([feelings])]),punc([inputmatch(['.']),tokens([])])],88/16,[]).
candidates(4,0,0,4,[]).
mappings([map(-964,[ev(-964,'C0018379','Guilt feelings','Guilt',[guilt,feelings],[menp],[[[1,1],[1,1],3],[[2,2],[2,2],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MSH','NCI','SNM','SNMI','SNOMEDCT_US'],[88/15],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Had been staying at home a lot, missing a fair amount of work.  ",106/64,[]).
phrase('Had',[aux([lexmatch([had]),inputmatch(['Had']),tag(aux),tokens([had])])],106/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(been,[aux([lexmatch([been]),inputmatch([been]),tag(aux),tokens([been])])],110/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(staying,[verb([lexmatch([staying]),inputmatch([staying]),tag(verb),tokens([staying])])],115/7,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('at home',[head([lexmatch(['at home']),inputmatch([at,home]),tag(adj),tokens([at,home])])],123/7,[]).
candidates(2,0,0,2,[]).
mappings([map(-888,[ev(-861,'C1516077','At','At',[at],[spco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[123/2],0,0),ev(-861,'C0442519','HOME','Home environment',[home],[cnce],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','LNC','MTH','NCI','NCI_FDA','SNOMEDCT_US'],[126/4],0,0)])]).
phrase('a lot,',[det([lexmatch([a]),inputmatch([a]),tag(det),tokens([a])]),head([lexmatch([lot]),inputmatch([lot]),tag(noun),tokens([lot])]),punc([inputmatch([',']),tokens([])])],131/6,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1115660','LOT','Lot Number',[lot],[inpr],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_BRIDG','NCI_CDISC'],[133/3],0,0)])]).
phrase(missing,[verb([lexmatch([missing]),inputmatch([missing]),tag(verb),tokens([missing])])],138/7,[]).
candidates(4,1,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1705492','Missing','Missing',[missing],[qlco],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[138/7],0,0)])]).
phrase('a fair amount of work.',[det([lexmatch([a]),inputmatch([a]),tag(det),tokens([a])]),mod([lexmatch([fair]),inputmatch([fair]),tag(adj),tokens([fair])]),head([lexmatch([amount]),inputmatch([amount]),tag(noun),tokens([amount])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([work]),inputmatch([work]),tag(noun),tokens([work])]),punc([inputmatch(['.']),tokens([])])],146/22,[]).
candidates(3,0,0,3,[]).
mappings([map(-696,[ev(-593,'C2911689','Fair','Fair (qualifier)',[fair],[qlco],[[[2,2],[1,1],0]],no,no,['LNC','MTH','NCI','NCI_FDA','SNOMEDCT_US'],[148/4],0,0),ev(-760,'C1265611','Amount','Quantity',[amount],[qnco],[[[3,3],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_BRIDG','SNMI','SNOMEDCT_US'],[153/6],0,0),ev(-593,'C0043227','Work','Work',[work],[ocac],[[[5,5],[1,1],0]],no,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[163/4],0,0)])]).
'EOU'.
utterance('00000000.tx.4',"Did have a lot of support from her neighbors and coworkers.  ",170/61,[]).
phrase('Did',[aux([lexmatch([did]),inputmatch(['Did']),tag(aux),tokens([did])])],170/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(have,[aux([lexmatch([have]),inputmatch([have]),tag(aux),tokens([have])])],174/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('a lot of support',[det([lexmatch([a]),inputmatch([a]),tag(det),tokens([a])]),head([lexmatch([lot]),inputmatch([lot]),tag(noun),tokens([lot])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([support]),inputmatch([support]),tag(noun),tokens([support])])],179/16,[]).
candidates(6,0,0,6,[]).
mappings([map(-783,[ev(-833,'C2984081','A Lot','Very Much',[a,lot],[qlco],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['LNC','MTH','NCI'],[179/5],0,0),ev(-604,'C1521721','Support','Supportive assistance',[support],[cnce],[[[4,4],[1,1],0]],no,no,['MTH','NCI'],[188/7],0,0)])]).
phrase('from her neighbors',[prep([lexmatch([from]),inputmatch([from]),tag(prep),tokens([from])]),pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),head([lexmatch([neighbors]),inputmatch([neighbors]),tag(noun),tokens([neighbors])])],196/18,[]).
candidates(1,0,0,1,[]).
mappings([map(-966,[ev(-966,'C1553702','Neighbor','Neighbor',[neighbor],[popg],[[[1,1],[1,1],1]],yes,no,['HL7V3.0','SNOMEDCT_US'],[205/9],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],215/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('coworkers.',[head([lexmatch([coworkers]),inputmatch([coworkers]),tag(noun),tokens([coworkers])]),punc([inputmatch(['.']),tokens([])])],219/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0681088',coworkers,coworker,[coworkers],[popg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV'],[219/9],0,0)])]).
'EOU'.
utterance('00000000.tx.5',"Also does live with her son.  ",231/30,[]).
phrase('Also',[adv([lexmatch([also]),inputmatch(['Also']),tag(adv),tokens([also])])],231/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(does,[aux([lexmatch([does]),inputmatch([does]),tag(aux),tokens([does])])],236/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('live with her son.',[verb([lexmatch([live]),inputmatch([live]),tag(verb),tokens([live])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),mod([lexmatch([son]),inputmatch([son]),tag(noun),tokens([son])]),punc([inputmatch(['.']),tokens([])])],241/18,[]).
candidates(4,0,0,4,[]).
mappings([map(-708,[ev(-770,'C1548795','Live','Live - Specimen Condition',[live],[qlco],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH'],[241/4],0,0),ev(-770,'C0037683','Son','Son (person)',[son],[famg],[[[4,4],[1,1],0]],yes,no,['AOD','CHV','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[255/3],0,0)])]).
'EOU'.
utterance('00000000.tx.6',"Just seems to be coming out of it now.",261/38,[]).
phrase('Just',[adv([lexmatch([just]),inputmatch(['Just']),tag(adv),tokens([just])])],261/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(seems,[verb([lexmatch([seems]),inputmatch([seems]),tag(verb),tokens([seems])])],266/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],272/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[272/2],0,0)])]).
phrase(be,[aux([lexmatch([be]),inputmatch([be]),tag(aux),tokens([be])])],275/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('coming out of it now.',[head([lexmatch([coming]),inputmatch([coming]),tag(noun),tokens([coming])]),prep([lexmatch(['out of']),inputmatch([out,of]),tag(prep),tokens([out,of])]),pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])]),adv([lexmatch([now]),inputmatch([now]),tag(adv),tokens([now])]),punc([inputmatch(['.']),tokens([])])],278/21,[]).
candidates(3,0,0,3,[]).
mappings([map(-520,[ev(-593,'C0849355','Out','Removed',[out],[qlco],[[[2,2],[1,1],0]],no,no,['CHV','LNC','MTH','NCI'],[285/3],0,0),ev(-593,'C1948052','Now','Now (temporal qualifier)',[now],[tmco],[[[5,5],[1,1],0]],no,no,['MTH','NCI'],[295/3],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([negation(nega,no,[7/2],['C2979982':'VAGINAL BLEEDING'],[10/16]),negation(nega,not,[28/3],['C0241028':'SEXUALLY ACTIVE'],[32/15])]).
utterance('00000000.tx.1',"GYN -  no vaginal bleeding, not sexually active.",0/48,[]).
phrase('GYN -',[head([lexmatch([gyn]),inputmatch(['GYN']),tag(noun),tokens([gyn])]),punc([inputmatch([-]),tokens([])])],0/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0205480','GYN','Gynecologic',[gyn],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[0/3],0,0)])]).
phrase('no vaginal bleeding,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([vaginal]),inputmatch([vaginal]),tag(adj),tokens([vaginal])]),head([lexmatch([bleeding]),inputmatch([bleeding]),tag(noun),tokens([bleeding])]),punc([inputmatch([',']),tokens([])])],7/20,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C2979982','VAGINAL BLEEDING','Vaginal Hemorrhage',[vaginal,bleeding],[dsyn],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','COSTAR','CST','DXP','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CTCAE','NLMSubSyn','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[10/16],0,1)])]).
phrase('not sexually active.',[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])]),adv([lexmatch([sexually]),inputmatch([sexually]),tag(adv),tokens([sexually])]),head([lexmatch([active]),inputmatch([active]),tag(adj),tokens([active])]),punc([inputmatch(['.']),tokens([])])],28/20,[]).
candidates(6,0,0,6,[]).
mappings([map(-901,[ev(-660,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],no,no,['LNC','MTH','NCI'],[28/3],0,0),ev(-901,'C0241028','SEXUALLY ACTIVE','Sexually active',[sexually,active],[fndg],[[[2,2],[1,1],0],[[3,3],[2,2],0]],yes,no,['CHV','DXP','SNOMEDCT_US'],[32/15],0,1)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Exercise - none,",0/16,[]).
phrase('Exercise -',[head([lexmatch([exercise]),inputmatch(['Exercise']),tag(noun),tokens([exercise])]),punc([inputmatch([-]),tokens([])])],0/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1522704','Exercise','Exercise Pain Management',[exercise],[topp],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[0/8],0,0)])]).
phrase('none,',[pron([lexmatch([none]),inputmatch([none]),tag(pron),tokens([none])]),punc([inputmatch([',']),tokens([])])],11/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Problems FH breast cancer : 37 yo s -died 41 FH myocardial infarction : mother died 66 yo",0/89,[]).
phrase('Problems FH breast cancer',[mod([lexmatch([problems]),inputmatch(['Problems']),tag(noun),tokens([problems])]),mod([lexmatch([fh]),inputmatch(['FH']),tag(noun),tokens([fh])]),head([lexmatch(['breast cancer']),inputmatch([breast,cancer]),tag(noun),tokens([breast,cancer])])],0/25,[]).
candidates(17,9,0,8,[]).
mappings([map(-824,[ev(-645,'C1546466','Problems','Problems - What subject filter',[problems],[idcn],[[[1,1],[1,1],0]],no,no,['HL7V2.5','MTH'],[0/8],0,0),ev(-861,'C0006142','-- Breast Cancer','Malignant neoplasm of breast',[breast,cancer],[neop],[[[3,4],[1,2],0]],yes,no,['AOD','CCS','CHV','CSP','ICD10CM','ICPC','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NLMSubSyn','OMIM','PDQ','SNOMEDCT_US'],[12/13],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],26/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('37 yo',[shapes([inputmatch(['37']),features([integer]),tokens(['37'])]),head([lexmatch([yo]),inputmatch([yo]),tag(noun),tokens([yo])])],28/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C1413296','Yo','CDR2 gene',[yo],[gngm],[[[2,2],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[31/2],0,0)])]).
phrase('s -',[aux([lexmatch([s]),inputmatch([s,-]),tag(aux),tokens([s])])],34/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(died,[verb([lexmatch([died]),inputmatch([died]),tag(verb),tokens([died])])],37/4,[]).
candidates(8,5,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0011065','Died','Cessation of life',[died],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','GO','ICPC','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','SNOMEDCT_US'],[37/4],0,0)])]).
phrase('41 FH myocardial infarction',[shapes([inputmatch(['41']),features([integer]),tokens(['41'])]),mod([lexmatch([fh]),inputmatch(['FH']),tag(noun),tokens([fh])]),head([lexmatch(['myocardial infarction']),inputmatch([myocardial,infarction]),tag(noun),tokens([myocardial,infarction])])],42/27,[]).
candidates(8,1,0,7,[]).
mappings([map(-861,[ev(-861,'C2926063','Myocardial infarction','Myocardial infarction:Finding:Point in time:^Patient:Ordinal',[myocardial,infarction],[clna],[[[3,4],[1,2],0]],yes,no,['LNC','MTH','NLMSubSyn'],[48/21],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],70/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(mother,[head([lexmatch([mother]),inputmatch([mother]),tag(noun),tokens([mother])])],72/6,[]).
candidates(3,2,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0026591','Mother','Mother (person)',[mother],[famg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[72/6],0,0)])]).
phrase(died,[verb([lexmatch([died]),inputmatch([died]),tag(verb),tokens([died])])],79/4,[]).
candidates(8,5,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0011065','Died','Cessation of life',[died],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','GO','ICPC','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','SNOMEDCT_US'],[79/4],0,0)])]).
phrase('66 yo',[shapes([inputmatch(['66']),features([integer]),tokens(['66'])]),head([lexmatch([yo]),inputmatch([yo]),tag(noun),tokens([yo])])],84/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C1413296','Yo','CDR2 gene',[yo],[gngm],[[[2,2],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[87/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Hypertension -borderline today - check chem 7, refilled all her medications.  ",0/78,[]).
phrase('Hypertension -borderline today - check chem 7,',[mod([lexmatch([hypertension]),inputmatch(['Hypertension']),tag(noun),tokens([hypertension])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([borderline]),inputmatch([borderline]),tag(noun),tokens([borderline])]),mod([lexmatch([today]),inputmatch([today]),tag(noun),tokens([today])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([check]),inputmatch([check]),tag(noun),tokens([check])]),head([lexmatch(['chem 7']),inputmatch([chem,'7']),tag(noun),tokens([chem,'7'])]),punc([inputmatch([',']),tokens([])])],0/46,[]).
candidates(10,0,0,10,[]).
mappings([map(-839,[ev(-660,'C0262395','hypertension borderline','borderline hypertension',[hypertension,borderline],[dsyn],[[[1,1],[1,1],0],[[2,2],[2,2],0]],no,no,['CHV','COSTAR','NCI','NLMSubSyn'],[0/12,14/10],0,0),ev(-632,'C0310367','Today','Today',[today],[antb,orch],[[[3,3],[1,1],0]],no,no,['CHV','MTH','RXNORM'],[25/5],0,0),ev(-632,'C1283174','Check','Checking (action)',[check],[acty],[[[4,4],[1,1],0]],no,no,['LNC','MTH','NCI','SNOMEDCT_US'],[33/5],0,0),ev(-827,'C2237045','Chem 7','Basic Metabolic Panel Blood Test',[chem,'7'],[lbpr],[[[5,6],[1,2],0]],yes,no,['CHV','LNC','MTH'],[39/6],0,0)])]).
phrase(refilled,[verb([lexmatch([refilled]),inputmatch([refilled]),tag(verb),tokens([refilled])])],47/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0807726',refilled,refill,[refilled],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC'],[47/8],0,0)])]).
phrase('all her medications.',[pron([lexmatch([all]),inputmatch([all]),tag(pron),tokens([all])]),pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),head([lexmatch([medications]),inputmatch([medications]),tag(noun),tokens([medications])]),punc([inputmatch(['.']),tokens([])])],56/20,[]).
candidates(4,1,0,3,[]).
mappings([map(-1000,[ev(-1000,'C2598133','Medications','Medications:-:Point in time:^Patient:-',[medications],[clna],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[64/11],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Will start doing some exercise and trying to lose weight.",78/57,[]).
phrase('Will',[modal([lexmatch([will]),inputmatch(['Will']),tag(modal),tokens([will])])],78/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(start,[verb([lexmatch([start]),inputmatch([start]),tag(verb),tokens([start])])],83/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0439659','Start','Beginning',[start],[tmco],[[[1,1],[1,1],0]],yes,no,['CHV','LCH','LNC','MTH','NCI','SNOMEDCT_US'],[83/5],0,0)])]).
phrase(doing,[aux([lexmatch([doing]),inputmatch([doing]),tag(aux),tokens([doing])])],89/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('some exercise',[det([lexmatch([some]),inputmatch([some]),tag(det),tokens([some])]),head([lexmatch([exercise]),inputmatch([exercise]),tag(noun),tokens([exercise])])],95/13,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1522704','Exercise','Exercise Pain Management',[exercise],[topp],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[100/8],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],109/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(trying,[head([lexmatch([trying]),inputmatch([trying]),tag(noun),tokens([trying])])],113/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],120/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[120/2],0,0)])]).
phrase(lose,[verb([lexmatch([lose]),inputmatch([lose]),tag(verb),tokens([lose])])],123/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('weight.',[head([lexmatch([weight]),inputmatch([weight]),tag(noun),tokens([weight])]),punc([inputmatch(['.']),tokens([])])],128/7,[]).
candidates(5,1,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1705104','Weight','Importance Weight',[weight],[idcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC'],[128/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Uterine fibroids : u/s 2062 -not seen Dr Foust since 2066 when difficult to obtain her Pap smear .",0/98,[]).
phrase('Uterine fibroids',[head([lexmatch(['uterine fibroids']),inputmatch(['Uterine',fibroids]),tag(noun),tokens([uterine,fibroids])])],0/16,[]).
candidates(5,1,0,4,[]).
mappings([map(-1000,[ev(-1000,'C0042133','Uterine Fibroids','Uterine Fibroids',[uterine,fibroids],[neop],[[[1,2],[1,2],0]],yes,no,['CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','LCH_NW','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','OMIM','PDQ','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[0/16],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],17/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('u/s 2062 -',[mod([lexmatch(['u/s']),inputmatch([u,/,s]),tag(noun),tokens([u,s])]),shapes([inputmatch(['2062']),features([integer]),tokens(['2062'])]),punc([inputmatch([-]),tokens([])])],19/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-901,[ev(-901,'C0041703','U S','United States',[u,s],[geoa],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['AOD','CHV','CSP','HL7V3.0','LCH','LNC','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[19/1,20/1],0,0)])]).
phrase(not,[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])])],29/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[29/3],0,0)])]).
phrase(seen,[verb([lexmatch([seen]),inputmatch([seen]),tag(verb),tokens([seen])])],33/4,[]).
candidates(3,2,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0205397','Seen',seen,[seen],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','SNMI','SNOMEDCT_US'],[33/4],0,0)])]).
phrase('Dr Foust since 2066',[mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),mod([inputmatch(['Foust']),tag(noun),tokens([foust])]),adv([lexmatch([since]),inputmatch([since]),tag(adv),tokens([since])]),shapes([inputmatch(['2066']),features([integer]),tokens(['2066'])])],38/19,[]).
candidates(5,0,0,5,[]).
mappings([map(-812,[ev(-812,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[38/2],0,0)])]).
phrase(when,[conj([lexmatch([when]),inputmatch([when]),tag(conj),tokens([when])])],58/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(difficult,[head([lexmatch([difficult]),inputmatch([difficult]),tag(adj),tokens([difficult])])],63/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0332218','Difficult','Difficult (qualifier value)',[difficult],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','SNMI','SNOMEDCT_US'],[63/9],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],73/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[73/2],0,0)])]).
phrase(obtain,[verb([lexmatch([obtain]),inputmatch([obtain]),tag(verb),tokens([obtain])])],76/6,[]).
candidates(8,6,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1706701','Obtain','Acquisition (action)',[obtain],[acty],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[76/6],0,0)])]).
phrase('her Pap smear .',[pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),head([lexmatch(['pap smear']),inputmatch(['Pap',smear]),tag(noun),tokens([pap,smear])]),punc([inputmatch(['.']),tokens([])])],83/15,[]).
candidates(7,0,0,7,[]).
mappings([map(-1000,[ev(-1000,'C0079104','PAP Smear','Pap smear',[pap,smear],[diap],[[[1,2],[1,2],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','PDQ','SNOMEDCT_US'],[87/9],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Smoking : quit 2/67 s/p MI - still not smoking!",0/47,[]).
phrase('Smoking',[head([lexmatch([smoking]),inputmatch(['Smoking']),tag(noun),tokens([smoking])])],0/7,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0453996','Smoking','Tobacco smoking behavior',[smoking],[inbe],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','DXP','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[0/7],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],8/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('quit 2/67 s/p MI - still',[mod([lexmatch([quit]),inputmatch([quit]),tag(noun),tokens([quit])]),shapes([inputmatch(['2',/,'67']),features([fraction]),tokens(['2','67'])]),prep([lexmatch(['s/p']),inputmatch([s,/,p]),tag(prep),tokens([s,p])]),mod([lexmatch([mi]),inputmatch(['MI']),tag(noun),tokens([mi])]),punc([inputmatch([-]),tokens([])]),adv([lexmatch([still]),inputmatch([still]),tag(adv),tokens([still])])],10/24,[]).
candidates(4,0,0,4,[]).
mappings([map(-706,[ev(-748,'C0748223','QUIT','QUIT',[quit],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[10/4],0,0),ev(-774,'C1440961','Mi-2','Mi-2',[mi,'2'],[imft],[[[6,6],[1,1],0],[[2,2],[2,2],0]],yes,no,['LNC'],[15/1,24/2],0,0)])]).
phrase('not smoking!',[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])]),head([lexmatch([smoking]),inputmatch([smoking]),tag(noun),tokens([smoking])]),punc([inputmatch([!]),tokens([])])],35/12,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-694,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],no,no,['LNC','MTH','NCI'],[35/3],0,0),ev(-861,'C0453996','Smoking','Tobacco smoking behavior',[smoking],[inbe],[[[2,2],[1,1],0]],yes,no,['CHV','CSP','DXP','MEDLINEPLUS','MSH','MTH','NCI','NLMSubSyn','SNOMEDCT_US'],[39/7],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"borderline diabetes mellitus : 4/63 125 , follow hgbaic - was 6.5/131 in 12/70, gradually rising, recheck glc and a1c today",0/123,[]).
phrase('borderline diabetes mellitus',[mod([lexmatch([borderline]),inputmatch([borderline]),tag(adj),tokens([borderline])]),head([lexmatch(['diabetes mellitus']),inputmatch([diabetes,mellitus]),tag(noun),tokens([diabetes,mellitus])])],0/28,[]).
candidates(7,1,0,6,[]).
mappings([map(-1000,[ev(-1000,'C0856873','Borderline Diabetes Mellitus','borderline diabetes',[borderline,diabetes,mellitus],[dsyn],[[[1,1],[1,1],0],[[2,3],[2,3],0]],yes,no,['CHV','NLMSubSyn'],[0/28],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],29/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('4/63 125 ,',[shapes([inputmatch(['4',/,'63']),features([fraction]),tokens(['4','63'])]),shapes([inputmatch(['125']),features([integer]),tokens(['125'])]),punc([inputmatch([',']),tokens([])])],31/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-827,[ev(-827,'C3838679','4+','4+ Answer to question',['4'],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[31/1],0,0)])]).
phrase(follow,[verb([lexmatch([follow]),inputmatch([follow]),tag(verb),tokens([follow])])],42/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1719822','Follow','Follow',[follow],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','SNOMEDCT_US'],[42/6],0,0)])]).
phrase('hgbaic -',[head([inputmatch([hgbaic]),tag(noun),tokens([hgbaic])]),punc([inputmatch([-]),tokens([])])],49/8,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(was,[aux([lexmatch([was]),inputmatch([was]),tag(aux),tokens([was])])],58/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('6.5/131 in 12/70,',[shapes([inputmatch(['6','.','5']),features([real_number]),tokens(['6','5'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['131']),features([integer]),tokens(['131'])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),shapes([inputmatch(['12',/,'70']),features([fraction]),tokens(['12','70'])]),punc([inputmatch([',']),tokens([])])],62/17,[]).
candidates(3,0,0,3,[]).
mappings([map(-722,[ev(-790,'C0442749','6/5','6/5',['6','5'],[fndg],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','SNOMEDCT_US'],[62/3],0,0),ev(-753,'C3842584','70%','70%',['70'],[fndg],[[[6,6],[1,1],0]],yes,no,['LNC'],[76/2],0,0)]),map(-722,[ev(-783,'C0442752','6/12','Distance vision 6/12',['6','12'],[fndg],[[[1,1],[1,1],0],[[5,5],[2,2],0]],yes,no,['CHV','SNOMEDCT_US'],[62/1,73/2],0,0),ev(-753,'C3842584','70%','70%',['70'],[fndg],[[[6,6],[1,1],0]],yes,no,['LNC'],[76/2],0,0)])]).
phrase('gradually rising,',[adv([lexmatch([gradually]),inputmatch([gradually]),tag(adv),tokens([gradually])]),head([lexmatch([rising]),inputmatch([rising]),tag(noun),tokens([rising])]),punc([inputmatch([',']),tokens([])])],80/17,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('recheck glc',[mod([lexmatch([recheck]),inputmatch([recheck]),tag(noun),tokens([recheck])]),head([lexmatch([glc]),inputmatch([glc]),tag(noun),tokens([glc])])],98/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C0008556','GLC','Chromatography, Gas-Liquid',[glc],[lbpr],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','HL7V3.0','MSH','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[106/3],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],110/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('a1c today',[mod([inputmatch([a1c]),tag(noun),tokens([a1c])]),head([lexmatch([today]),inputmatch([today]),tag(noun),tokens([today])])],114/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C0310367','Today','Today',[today],[antb,orch],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','RXNORM'],[118/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([negation(nega,denies,[80/6],['C1963093':'Dizziness'],[95/9]),negation(nega,no,[198/2],['C0521989':'associated symptoms'],[201/19])]).
utterance('00000000.tx.1',"VPB : 2065 - ETT showed freq PVC's, bigeminy and couplets, nondx for ischemia - denies palp or dizziness.  ",0/107,[]).
phrase('VPB',[head([lexmatch([vpb]),inputmatch(['VPB']),tag(noun),tokens([vpb])])],0/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0279462','VPB','bleomycin/procarbazine/vinblastine',[vpb],[topp],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','PDQ'],[0/3],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],4/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('2065 - ETT',[shapes([inputmatch(['2065']),features([integer]),tokens(['2065'])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([ett]),inputmatch(['ETT']),tag(noun),tokens([ett])])],6/10,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(showed,[verb([lexmatch([showed]),inputmatch([showed]),tag(verb),tokens([showed])])],17/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-966,[ev(-966,'C1547282','Show','Show',[show],[anim],[[[1,1],[1,1],1]],yes,no,['HL7V2.5','HL7V3.0'],[17/6],0,0)])]).
phrase('freq PVC\'s,',[mod([inputmatch([freq]),tag(noun),tokens([freq])]),head([lexmatch([pvc]),inputmatch(['PVC\'s']),tag(noun),tokens([pvc])]),punc([inputmatch([',']),tokens([])])],24/11,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-694,'C2347273','FREQ','CDISC SDTM Frequency Terminology',[freq],[inpr],[[[1,1],[1,1],0]],no,no,['MTH','NCI','NCI_CDISC'],[24/4],0,0),ev(-861,'C0151636','PVC\'S','Premature ventricular contractions',[pvc],[patf],[[[2,2],[1,1],0]],yes,no,['CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','LNC','MSH','MTH','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[29/5],0,0)])]).
phrase(bigeminy,[head([lexmatch([bigeminy]),inputmatch([bigeminy]),tag(noun),tokens([bigeminy])])],36/8,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1963278','Bigeminy','Bigeminy Adverse Event',[bigeminy],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CTCAE'],[36/8],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],45/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('couplets,',[head([lexmatch([couplets]),inputmatch([couplets]),tag(noun),tokens([couplets])]),punc([inputmatch([',']),tokens([])])],49/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0429001','Couplets','Paired ventricular premature complexes',[couplets],[patf],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_CDISC','NLMSubSyn','OMIM','SNOMEDCT_US'],[49/8],0,0)])]).
phrase('nondx for ischemia -',[head([inputmatch([nondx]),tag(noun),tokens([nondx])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([ischemia]),inputmatch([ischemia]),tag(noun),tokens([ischemia])]),punc([inputmatch([-]),tokens([])])],59/20,[]).
candidates(2,1,0,1,[]).
mappings([map(-623,[ev(-623,'C0022116','ISCHEMIA','Ischemia',[ischemia],[patf],[[[3,3],[1,1],0]],no,no,['AOD','CHV','COSTAR','CSP','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US'],[69/8],0,0)])]).
phrase(denies,[verb([lexmatch([denies]),inputmatch([denies]),tag(verb),tokens([denies])])],80/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C2700401','Deny','Deny (action)',[deny],[acty],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[80/6],0,0)])]).
phrase(palp,[head([lexmatch([palp]),inputmatch([palp]),tag(noun),tokens([palp])])],87/4,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1412365','PALP','ALPP gene',[palp],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH','NCI','NLMSubSyn','OMIM'],[87/4],0,0)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],92/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('dizziness.',[head([lexmatch([dizziness]),inputmatch([dizziness]),tag(noun),tokens([dizziness])]),punc([inputmatch(['.']),tokens([])])],95/10,[]).
candidates(6,3,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1963093','Dizziness','Dizziness Adverse Event',[dizziness],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CTCAE'],[95/9],0,1)])]).
'EOU'.
utterance('00000000.tx.2',"Does occasionally feel a split second palpitation.  ",107/52,[]).
phrase('Does',[aux([lexmatch([does]),inputmatch(['Does']),tag(aux),tokens([does])])],107/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(occasionally,[adv([lexmatch([occasionally]),inputmatch([occasionally]),tag(adv),tokens([occasionally])])],112/12,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1998882','Occasionally','Sometimes',[occasionally],[tmco],[[[1,1],[1,1],0]],yes,no,['LNC','NCI'],[112/12],0,0)])]).
phrase(feel,[verb([lexmatch([feel]),inputmatch([feel]),tag(verb),tokens([feel])])],125/4,[]).
candidates(2,1,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0013987',feel,'Emotions',[feel],[menp],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','ICF','ICF-CY','LCH','LCH_NW','MSH','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[125/4],0,0)])]).
phrase('a split second palpitation.',[det([lexmatch([a]),inputmatch([a]),tag(det),tokens([a])]),mod([lexmatch(['split second']),inputmatch([split,second]),tag(adj),tokens([split,second])]),head([lexmatch([palpitation]),inputmatch([palpitation]),tag(noun),tokens([palpitation])]),punc([inputmatch(['.']),tokens([])])],130/27,[]).
candidates(10,2,0,8,[]).
mappings([map(-851,[ev(-660,'C1881714','Split','Medical Device Material Split',[split],[phpr],[[[1,1],[1,1],0]],no,no,['MTH','NCI','NCI_FDA'],[132/5],0,0),ev(-660,'C0565930','/second','per second',[second],[qnco],[[[2,2],[1,1],0]],no,no,['MTH','NCI','NCI_CDISC','NCI_UCUM','SNOMEDCT_US'],[138/6],0,0),ev(-827,'C0030252','PALPITATION','Palpitations',[palpitation],[fndg],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LNC','MTH','NCI','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US'],[145/11],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Takes a deep breath and it goes away.  ",159/39,[]).
phrase('Takes',[verb([lexmatch([takes]),inputmatch(['Takes']),tag(verb),tokens([takes])])],159/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],0]],yes,no,['NCI','SNOMEDCT_US'],[159/5],0,0)])]).
phrase('a deep breath',[det([lexmatch([a]),inputmatch([a]),tag(det),tokens([a])]),mod([lexmatch([deep]),inputmatch([deep]),tag(adj),tokens([deep])]),head([lexmatch([breath]),inputmatch([breath]),tag(noun),tokens([breath])])],165/13,[]).
candidates(4,1,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1321587','deep breath','Breathing abnormally deep',[deep,breath],[sosy],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','MTH','NLMSubSyn','SNOMEDCT_US'],[167/11],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],179/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(it,[pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])])],183/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(goes,[verb([lexmatch([goes]),inputmatch([goes]),tag(verb),tokens([goes])])],186/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1947959','Goes','Goes <invertebrate>',[goes],[euka],[[[1,1],[1,1],0]],yes,no,['MTH','NCBI'],[186/4],0,0)])]).
phrase('away.',[adv([lexmatch([away]),inputmatch([away]),tag(adv),tokens([away])]),punc([inputmatch(['.']),tokens([])])],191/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.4',"No associated symptoms.  ",198/25,[]).
phrase('No associated symptoms.',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),mod([lexmatch([associated]),inputmatch([associated]),tag(adj),tokens([associated])]),head([lexmatch([symptoms]),inputmatch([symptoms]),tag(noun),tokens([symptoms])]),punc([inputmatch(['.']),tokens([])])],198/23,[]).
candidates(8,4,0,4,[]).
mappings([map(-1000,[ev(-1000,'C0521989','associated symptoms','Associated symptom',[associated,symptoms],[sosy],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','SNMI','SNOMEDCT_US'],[201/19],0,1)])]).
'EOU'.
utterance('00000000.tx.5',"Perhaps feels it twice a month.  ",223/33,[]).
phrase('Perhaps',[adv([lexmatch([perhaps]),inputmatch(['Perhaps']),tag(adv),tokens([perhaps])])],223/7,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(feels,[verb([lexmatch([feels]),inputmatch([feels]),tag(verb),tokens([feels])])],231/5,[]).
candidates(2,1,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0013987',feel,'Emotions',[feel],[menp],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','ICF','ICF-CY','LCH','LCH_NW','MSH','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[231/5],0,0)])]).
phrase('it twice',[pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])]),adv([lexmatch([twice]),inputmatch([twice]),tag(adv),tokens([twice])])],237/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1948050','Twice','Twice (Numerical Qualifier)',[twice],[qnco],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[240/5],0,0)])]).
phrase('a month.',[det([lexmatch([a]),inputmatch([a]),tag(det),tokens([a])]),head([lexmatch([month]),inputmatch([month]),tag(noun),tokens([month])]),punc([inputmatch(['.']),tokens([])])],246/8,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0332177','/month','Monthly (qualifier value)',[month],[tmco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[248/5],0,0)])]).
'EOU'.
utterance('00000000.tx.6',"Will check electrolytes and TSH.",256/32,[]).
phrase('Will',[modal([lexmatch([will]),inputmatch(['Will']),tag(modal),tokens([will])])],256/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(check,[verb([lexmatch([check]),inputmatch([check]),tag(verb),tokens([check])])],261/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1283174','Check','Checking (action)',[check],[acty],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI','SNOMEDCT_US'],[261/5],0,0)])]).
phrase(electrolytes,[head([lexmatch([electrolytes]),inputmatch([electrolytes]),tag(noun),tokens([electrolytes])])],267/12,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0013832','ELECTROLYTES','Electrolytes',[electrolytes],[inch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','NDFRT','SNMI','SNOMEDCT_US','VANDF'],[267/12],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],280/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('TSH.',[head([lexmatch([tsh]),inputmatch(['TSH']),tag(noun),tokens([tsh])]),punc([inputmatch(['.']),tokens([])])],284/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Coronary artery disease : s/p ant SEMI + stent LAD 2/67, Dr Oakley, ETT Clarkfield 3/67 - neg scan for ischemia. ",0/113,[]).
phrase('Coronary artery disease',[head([lexmatch(['coronary artery disease']),inputmatch(['Coronary',artery,disease]),tag(noun),tokens([coronary,artery,disease])])],0/23,[]).
candidates(16,4,0,12,[]).
mappings([map(-1000,[ev(-1000,'C1956346','CORONARY ARTERY DISEASE','Coronary Artery Disease',[coronary,artery,disease],[dsyn],[[[1,3],[1,3],0]],yes,no,['AOD','COSTAR','CSP','CST','DXP','HPO','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','OMIM','SNMI','SNOMEDCT_US'],[0/23],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],24/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s/p ant SEMI + stent LAD 2/67,',[prep([lexmatch(['s/p']),inputmatch([s,/,p]),tag(prep),tokens([s,p])]),mod([lexmatch([ant]),inputmatch([ant]),tag(noun),tokens([ant])]),mod([lexmatch([semi]),inputmatch(['SEMI']),tag(noun),tokens([semi])]),punc([inputmatch([+]),tokens([])]),mod([lexmatch([stent]),inputmatch([stent]),tag(noun),tokens([stent])]),mod([lexmatch([lad]),inputmatch(['LAD']),tag(noun),tokens([lad])]),shapes([inputmatch(['2',/,'67']),features([fraction]),tokens(['2','67'])]),punc([inputmatch([',']),tokens([])])],26/30,[]).
candidates(3,0,0,3,[]).
mappings([map(-728,[ev(-799,'C0003455','Ant','Ants',[ant],[euka],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','MSH','MTH','NCBI','SNM','SNMI','SNOMEDCT_US'],[30/3],0,0),ev(-799,'C0038257','Stent','Stent, device',[stent],[medd],[[[3,3],[1,1],0]],yes,no,['CHV','CSP','MSH','MTH','SNMI','SNOMEDCT_US'],[41/5],0,0)])]).
phrase('Dr Oakley,',[mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),head([lexmatch([oakley]),inputmatch(['Oakley']),tag(noun),tokens([oakley])]),punc([inputmatch([',']),tokens([])])],57/10,[]).
candidates(5,0,0,5,[]).
mappings([map(-694,[ev(-694,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[1,1],[1,1],0]],no,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[57/2],0,0)])]).
phrase('ETT Clarkfield 3/67 - neg scan for ischemia.',[mod([lexmatch([ett]),inputmatch(['ETT']),tag(noun),tokens([ett])]),mod([inputmatch(['Clarkfield']),tag(noun),tokens([clarkfield])]),shapes([inputmatch(['3',/,'67']),features([fraction]),tokens(['3','67'])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([neg]),inputmatch([neg]),tag(noun),tokens([neg])]),head([lexmatch([scan]),inputmatch([scan]),tag(noun),tokens([scan])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([ischemia]),inputmatch([ischemia]),tag(noun),tokens([ischemia])]),punc([inputmatch(['.']),tokens([])])],68/44,[]).
candidates(6,1,0,5,[]).
mappings([map(-645,[ev(-578,'C3853545','NEG','Negative - answer',[neg],[qlco],[[[5,5],[1,1],0]],no,no,['MTH','NCI'],[90/3],0,0),ev(-744,'C0441633','Scan','Scanning',[scan],[diap],[[[6,6],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNOMEDCT_US'],[94/4],0,0),ev(-578,'C0022116','ISCHEMIA','Ischemia',[ischemia],[patf],[[[8,8],[1,1],0]],no,no,['AOD','CHV','COSTAR','CSP','LCH','LCH_NW','MSH','MTH','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US'],[103/8],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"No CP's, palp. ",113/15,[]).
phrase('No CP\'s,',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([cp]),inputmatch(['CP\'s']),tag(noun),tokens([cp])]),punc([inputmatch([',']),tokens([])])],113/8,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('palp.',[head([lexmatch([palp]),inputmatch([palp]),tag(noun),tokens([palp])]),punc([inputmatch(['.']),tokens([])])],122/5,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1412365','PALP','ALPP gene',[palp],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH','NCI','NLMSubSyn','OMIM'],[122/4],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Not seen cardiology for two to 3 years. ",128/40,[]).
phrase('Not',[adv([lexmatch([not]),inputmatch(['Not']),tag(adv),tokens([not])])],128/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[128/3],0,0)])]).
phrase(seen,[verb([lexmatch([seen]),inputmatch([seen]),tag(verb),tokens([seen])])],132/4,[]).
candidates(3,2,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0205397','Seen',seen,[seen],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','SNMI','SNOMEDCT_US'],[132/4],0,0)])]).
phrase('cardiology for two',[head([lexmatch([cardiology]),inputmatch([cardiology]),tag(noun),tokens([cardiology])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([two]),inputmatch([two]),tag(noun),tokens([two])])],137/18,[]).
candidates(3,0,0,3,[]).
mappings([map(-746,[ev(-790,'C0007189','Cardiology','Cardiology discipline',[cardiology],[bmod],[[[1,1],[1,1],0]],yes,no,['CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[137/10],0,0),ev(-623,'C0205448','Two','Two',[two],[qnco],[[[3,3],[1,1],0]],no,no,['LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[152/3],0,0)])]).
phrase('to 3 years.',[prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),head([lexmatch([years]),inputmatch([years]),tag(noun),tokens([years])]),punc([inputmatch(['.']),tokens([])])],156/11,[]).
candidates(6,1,0,5,[]).
mappings([map(-888,[ev(-694,'C0439086','<3','<3 (qualifier value)',['3'],[qnco],[[[1,1],[1,1],0]],no,no,['MTH','SNOMEDCT_US'],[159/1],0,0),ev(-861,'C0439234','YEARS',year,[years],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[161/5],0,0)])]).
'EOU'.
utterance('00000000.tx.4',"Will make follow-up with cardiology now that Dr Oakley gone",168/59,[]).
phrase('Will',[modal([lexmatch([will]),inputmatch(['Will']),tag(modal),tokens([will])])],168/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(make,[verb([lexmatch([make]),inputmatch([make]),tag(verb),tokens([make])])],173/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1881534','Make','Make - Instruction Imperative',[make],[ftcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[173/4],0,0)])]).
phrase('follow-up with cardiology now',[head([lexmatch(['follow-up']),inputmatch([follow,-,up]),tag(adj),tokens([follow,up])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([cardiology]),inputmatch([cardiology]),tag(noun),tokens([cardiology])]),adv([lexmatch([now]),inputmatch([now]),tag(adv),tokens([now])])],178/29,[]).
candidates(9,0,0,9,[]).
mappings([map(-752,[ev(-806,'C1522577','Follow Up','follow-up',[follow,up],[hlca],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS'],[178/9],0,0),ev(-593,'C0007189','Cardiology','Cardiology discipline',[cardiology],[bmod],[[[4,4],[1,1],0]],no,no,['CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[193/10],0,0),ev(-593,'C1948052','Now','Now (temporal qualifier)',[now],[tmco],[[[5,5],[1,1],0]],no,no,['MTH','NCI'],[204/3],0,0)])]).
phrase('that Dr Oakley gone',[compl([lexmatch([that]),inputmatch([that]),tag(compl),tokens([that])]),mod([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),mod([lexmatch([oakley]),inputmatch(['Oakley']),tag(noun),tokens([oakley])]),head([lexmatch([gone]),inputmatch([gone]),tag(noun),tokens([gone])])],208/19,[]).
candidates(5,0,0,5,[]).
mappings([map(-660,[ev(-660,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[1,1],[1,1],0]],no,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[213/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"thyroid nodule : 2065, hot, follow TSH. ",0/40,[]).
phrase('thyroid nodule',[head([lexmatch(['thyroid nodule']),inputmatch([thyroid,nodule]),tag(noun),tokens([thyroid,nodule])])],0/14,[]).
candidates(16,11,0,5,[]).
mappings([map(-1000,[ev(-1000,'C0040137','THYROID NODULE','Thyroid Nodule',[thyroid,nodule],[neop],[[[1,2],[1,2],0]],yes,no,['CHV','COSTAR','DXP','MSH','MTH','MTHICD9','NCI','NDFRT','SNM','SNMI','SNOMEDCT_US'],[0/14],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],15/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('2065,',[shapes([inputmatch(['2065']),features([integer]),tokens(['2065'])]),punc([inputmatch([',']),tokens([])])],17/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('hot,',[head([lexmatch([hot]),inputmatch([hot]),tag(adj),tokens([hot])]),punc([inputmatch([',']),tokens([])])],23/4,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0444519','Hot','Hot sensation quality',[hot],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NLMSubSyn','SNOMEDCT_US'],[23/3],0,0)])]).
phrase(follow,[verb([lexmatch([follow]),inputmatch([follow]),tag(verb),tokens([follow])])],28/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1719822','Follow','Follow',[follow],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','SNOMEDCT_US'],[28/6],0,0)])]).
phrase('TSH.',[head([lexmatch([tsh]),inputmatch(['TSH']),tag(noun),tokens([tsh])]),punc([inputmatch(['.']),tokens([])])],35/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
utterance('00000000.tx.2',"TReated with RAI February 2071.  ",40/33,[]).
phrase('TReated with RAI February 2071.',[verb([lexmatch([treated]),inputmatch(['TReated']),tag(verb),tokens([treated])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([rai]),inputmatch(['RAI']),tag(noun),tokens([rai])]),mod([lexmatch([february]),inputmatch(['February']),tag(noun),tokens([february])]),shapes([inputmatch(['2071']),features([integer]),tokens(['2071'])]),punc([inputmatch(['.']),tokens([])])],40/31,[]).
candidates(8,2,0,6,[]).
mappings([map(-787,[ev(-806,'C0332293','Treated with','Treated with',[treated,with],[topp],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['MTH','SNMI','SNOMEDCT_US'],[40/12],0,0),ev(-760,'C3539761','RAI','Ribonuclease Inhibitor',[rai],[aapp],[[[3,3],[1,1],0]],yes,no,['MTH','NCI'],[53/3],0,0),ev(-760,'C3830166','February','February',[february],[qlco],[[[4,4],[1,1],0]],yes,no,['NCI'],[57/8],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Last TSH checked 12/71 and was in the normal range.  ",73/53,[]).
phrase('Last TSH',[mod([lexmatch([last]),inputmatch(['Last']),tag(adj),tokens([last])]),head([lexmatch([tsh]),inputmatch(['TSH']),tag(noun),tokens([tsh])])],73/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-694,[ev(-694,'C1517741','Last','Last',[last],[qlco],[[[1,1],[1,1],0]],no,no,['NCI'],[73/4],0,0)])]).
phrase(checked,[verb([lexmatch([checked]),inputmatch([checked]),tag(verb),tokens([checked])])],82/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1283174','Checked','Checking (action)',[checked],[acty],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI','SNOMEDCT_US'],[82/7],0,0)])]).
phrase('12/71',[shapes([inputmatch(['12',/,'71']),features([fraction]),tokens(['12','71'])])],90/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C0450389','71','71',['71'],[inpr],[[[2,2],[1,1],0]],yes,no,['SNOMEDCT_US'],[93/2],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],96/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('was in the normal range.',[aux([lexmatch([was]),inputmatch([was]),tag(aux),tokens([was])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch(['normal range']),inputmatch([normal,range]),tag(noun),tokens([normal,range])]),punc([inputmatch(['.']),tokens([])])],100/24,[]).
candidates(10,0,0,10,[]).
mappings([map(-745,[ev(-760,'C0043194','WAS','Wiskott-Aldrich Syndrome',[was],[dsyn],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','DXP','ICD10CM','ICD9CM','MSH','MTH','NCI','NCI_NCI-GLOSS','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[100/3],0,0),ev(-806,'C0086715','Normal Range','Normal Range',[normal,range],[qnco],[[[4,5],[1,2],0]],yes,no,['CHV','HL7V2.5','MSH','MTH','NCI','NCI_CareLex','NCI_NCI-GLOSS','NLMSubSyn','SNOMEDCT_US'],[111/12],0,0)])]).
'EOU'.
utterance('00000000.tx.4',"To see Dr. ",126/11,[]).
phrase('To',[adv([lexmatch([to]),inputmatch(['To']),tag(adv),tokens([to])])],126/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0041260','TO','Tryptophanase',[to],[aapp,enzy],[[[1,1],[1,1],0]],yes,no,['CSP','MSH','MTH','NCI','NDFRT','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[126/2],0,0)])]).
phrase(see,[verb([lexmatch([see]),inputmatch([see]),tag(verb),tokens([see])])],129/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[129/3],0,0)])]).
phrase('Dr.',[head([lexmatch([dr]),inputmatch(['Dr']),tag(noun),tokens([dr])]),punc([inputmatch(['.']),tokens([])])],133/3,[]).
candidates(5,0,0,5,[]).
mappings([map(-1000,[ev(-1000,'C1707664','DR','Delayed Release Dosage Form',[dr],[bodm],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_NCPDP','NLMSubSyn'],[133/2],0,0)])]).
'EOU'.
utterance('00000000.tx.5',"Dolan q. year.",137/14,[]).
phrase('Dolan q. year.',[mod([inputmatch(['Dolan']),tag(noun),tokens([dolan])]),mod([lexmatch([q]),inputmatch([q]),tag(noun),tokens([q])]),punc([inputmatch(['.']),tokens([])]),head([lexmatch([year]),inputmatch([year]),tag(noun),tokens([year])]),punc([inputmatch(['.']),tokens([])])],137/14,[]).
candidates(2,0,0,2,[]).
mappings([map(-827,[ev(-827,'C0439508','/Year','per year',[year],[tmco],[[[3,3],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[146/4],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Hyperlipidemia : CRF mild chol, cigs, HTN, Fhx and known hx CAD in pt. in January 2071 she was written to increase her Lipitor to 40 mg and then to follow-up in March.  ",0/169,[]).
phrase('Hyperlipidemia',[head([lexmatch([hyperlipidemia]),inputmatch(['Hyperlipidemia']),tag(noun),tokens([hyperlipidemia])])],0/14,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0428465','Hyperlipidemia','Serum lipids high (finding)',[hyperlipidemia],[fndg],[[[1,1],[1,1],0]],yes,no,['HPO','MTH','SNOMEDCT_US','SNOMEDCT_VET'],[0/14],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],15/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('CRF mild chol,',[mod([lexmatch([crf]),inputmatch(['CRF']),tag(noun),tokens([crf])]),mod([lexmatch([mild]),inputmatch([mild]),tag(adj),tokens([mild])]),head([lexmatch([chol]),inputmatch([chol]),tag(noun),tokens([chol])]),punc([inputmatch([',']),tokens([])])],17/14,[]).
candidates(2,0,0,2,[]).
mappings([map(-790,[ev(-660,'C2945599','MILD','Mild (qualifier value)',[mild],[qlco],[[[2,2],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[21/4],0,0),ev(-827,'C0201950','CHOL','Cholesterol measurement test',[chol],[lbpr],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[26/4],0,0)])]).
phrase('cigs,',[head([lexmatch([cigs]),inputmatch([cigs]),tag(noun),tokens([cigs])]),punc([inputmatch([',']),tokens([])])],32/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('HTN,',[head([lexmatch([htn]),inputmatch(['HTN']),tag(noun),tokens([htn])]),punc([inputmatch([',']),tokens([])])],38/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0020538','HTN','Hypertensive disease',[htn],[dsyn],[[[1,1],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[38/3],0,0)])]).
phrase('Fhx',[head([lexmatch([fhx]),inputmatch(['Fhx']),tag(noun),tokens([fhx])])],43/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1428412','FHX','FOXJ2 gene',[fhx],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH'],[43/3],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],47/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('known hx CAD in pt.',[mod([lexmatch([known]),inputmatch([known]),tag(adj),tokens([known])]),mod([lexmatch([hx]),inputmatch([hx]),tag(noun),tokens([hx])]),head([lexmatch([cad]),inputmatch(['CAD']),tag(noun),tokens([cad])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([pt]),inputmatch([pt]),tag(noun),tokens([pt])]),punc([inputmatch(['.']),tokens([])])],51/19,[]).
candidates(7,0,0,7,[]).
mappings([map(-761,[ev(-797,'C3275096','KNOWN CAD','Known Coronary Artery Disease',[known,cad],[qnco],[[[1,1],[1,1],0],[[3,3],[2,2],0]],yes,no,['NCI','NCI_CDISC','NLMSubSyn'],[51/5,60/3],0,0),ev(-593,'C0262926','Hx','Medical History',[hx],[fndg],[[[2,2],[1,1],0]],no,no,['AIR','AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','NCI_NICHD','NLMSubSyn','SNOMEDCT_US'],[57/2],0,0),ev(-593,'C0699718','PT','Physical therapy (field)',[pt],[bmod],[[[5,5],[1,1],0]],no,no,['CHV','LNC','MTH','NLMSubSyn'],[67/2],0,0)])]).
phrase('in January 2071',[prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([january]),inputmatch(['January']),tag(noun),tokens([january])]),shapes([inputmatch(['2071']),features([integer]),tokens(['2071'])])],71/15,[]).
candidates(1,0,0,1,[]).
mappings([map(-861,[ev(-861,'C3829466','January','January',[january],[qlco],[[[1,1],[1,1],0]],yes,no,['NCI'],[74/7],0,0)])]).
phrase(she,[pron([lexmatch([she]),inputmatch([she]),tag(pron),tokens([she])])],87/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(was,[aux([lexmatch([was]),inputmatch([was]),tag(aux),tokens([was])])],91/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(written,[verb([lexmatch([written]),inputmatch([written]),tag(verb),tokens([written])])],95/7,[]).
candidates(3,0,0,3,[]).
mappings([map(-966,[ev(-966,'C2584304','Write','Writing (function)',[write],[menp],[[[1,1],[1,1],1]],yes,no,['ICF','ICF-CY','LCH','MTH','NCI','SNMI','SNOMEDCT_US'],[95/7],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],103/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1883351','To','To',[to],[qlco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[103/2],0,0)])]).
phrase(increase,[verb([lexmatch([increase]),inputmatch([increase]),tag(verb),tokens([increase])])],106/8,[]).
candidates(8,7,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0442805','Increase','Increase',[increase],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[106/8],0,0)])]).
phrase('her Lipitor to 40 mg',[pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),head([lexmatch([lipitor]),inputmatch(['Lipitor']),tag(noun),tokens([lipitor])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),shapes([inputmatch(['40']),features([integer]),tokens(['40'])]),mod([lexmatch([mg]),inputmatch([mg]),tag(noun),tokens([mg])])],115/20,[]).
candidates(7,0,0,7,[]).
mappings([map(-696,[ev(-760,'C0593906','Lipitor','Lipitor',[lipitor],[orch,phsu],[[[2,2],[1,1],0]],yes,no,['CHV','CSP','MSH','NCI','NCI_NCI-GLOSS','PDQ','RXNORM'],[119/7],0,0),ev(-593,'C0439509','/40','/40',['40'],[tmco],[[[4,4],[1,1],0]],no,no,['SNOMEDCT_US'],[130/2],0,0),ev(-593,'C1960952','mg %','Milligram percent',[mg],[qnco],[[[5,5],[1,1],0]],no,no,['SNOMEDCT_US'],[133/2],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],136/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('then to follow-up in March.',[adv([lexmatch([then]),inputmatch([then]),tag(adv),tokens([then])]),adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])]),head([lexmatch(['follow-up']),inputmatch([follow,-,up]),tag(adj),tokens([follow,up])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([march]),inputmatch(['March']),tag(noun),tokens([march])]),punc([inputmatch(['.']),tokens([])])],140/27,[]).
candidates(8,0,0,8,[]).
mappings([map(-712,[ev(-586,'C1883708','Then','Then',[then],[tmco],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[140/4],0,0),ev(-790,'C1522577','Follow Up','follow-up',[follow,up],[hlca],[[[3,3],[1,1],0],[[4,4],[2,2],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS'],[148/9],0,0),ev(-586,'C3829202','March','March',[march],[qlco],[[[6,6],[1,1],0]],no,no,['LNC','NCI'],[161/5],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"She never did increase the dose at that time. ",169/46,[]).
phrase('She',[pron([lexmatch([she]),inputmatch(['She']),tag(pron),tokens([she])])],169/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(never,[adv([lexmatch([never]),inputmatch([never]),tag(adv),tokens([never])])],173/5,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C2003901','NEVER','Never (frequency)',[never],[tmco],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[173/5],0,0)])]).
phrase(did,[aux([lexmatch([did]),inputmatch([did]),tag(aux),tokens([did])])],179/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(increase,[verb([lexmatch([increase]),inputmatch([increase]),tag(verb),tokens([increase])])],183/8,[]).
candidates(8,7,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0442805','Increase','Increase',[increase],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[183/8],0,0)])]).
phrase('the dose at',[det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),head([lexmatch([dose]),inputmatch([dose]),tag(noun),tokens([dose])]),prep([lexmatch([at]),inputmatch([at]),tag(prep),tokens([at])])],192/11,[]).
candidates(3,0,0,3,[]).
mappings([map(-790,[ev(-790,'C0178602','DOSE','Dosage',[dose],[qnco],[[[2,2],[1,1],0]],yes,no,['CHV','CSP','LNC','MTH','NCI','NCI_BRIDG','NCI_CDISC','NCI_FDA','NCI_NCI-GLOSS','NCI_UCUM','SNOMEDCT_US'],[196/4],0,0)])]).
phrase('that time.',[compl([lexmatch([that]),inputmatch([that]),tag(compl),tokens([that])]),head([lexmatch([time]),inputmatch([time]),tag(noun),tokens([time])]),punc([inputmatch(['.']),tokens([])])],204/10,[]).
candidates(5,3,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0040223','TIME','Time',[time],[tmco],[[[1,1],[1,1],0]],yes,no,['CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NICHD','SNOMEDCT_US'],[209/4],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"Check lfts and cholesterol fasting next week, and then can decide if we need to increase the Lipitor.  ",215/103,[]).
phrase('Check lfts',[mod([lexmatch([check]),inputmatch(['Check']),tag(noun),tokens([check])]),head([lexmatch([lfts]),inputmatch([lfts]),tag(noun),tokens([lfts])])],215/10,[]).
candidates(3,0,0,3,[]).
mappings([map(-872,[ev(-694,'C1283174','Check','Checking (action)',[check],[acty],[[[1,1],[1,1],0]],no,no,['LNC','MTH','NCI','SNOMEDCT_US'],[215/5],0,0),ev(-827,'C0023901','LFT','Liver Function Tests',[lft],[lbpr],[[[2,2],[1,1],1]],yes,no,['AOD','CHV','LCH','LCH_NW','MSH','MTH','MTHMST','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[221/4],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],226/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('cholesterol fasting next week,',[mod([lexmatch([cholesterol]),inputmatch([cholesterol]),tag(noun),tokens([cholesterol])]),mod([lexmatch([fasting]),inputmatch([fasting]),tag(noun),tokens([fasting])]),mod([lexmatch([next]),inputmatch([next]),tag(adj),tokens([next])]),head([lexmatch([week]),inputmatch([week]),tag(noun),tokens([week])]),punc([inputmatch([',']),tokens([])])],230/30,[]).
candidates(9,2,0,7,[]).
mappings([map(-833,[ev(-645,'C0008377','CHOLESTEROL','Cholesterol',[cholesterol],[bacs,orch],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHSPL','NCI','NCI_CRCH','NCI_DCP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[230/11],0,0),ev(-645,'C0015663','FASTING','Fasting',[fasting],[fndg],[[[2,2],[1,1],0]],no,no,['AOD','CHV','CSP','DXP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[242/7],0,0),ev(-645,'C1883708','Next','Then',[next],[tmco],[[[3,3],[1,1],0]],no,no,['MTH','NCI'],[250/4],0,0),ev(-812,'C0332174','/week','Weekly',[week],[tmco],[[[4,4],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[255/4],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],261/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(then,[adv([lexmatch([then]),inputmatch([then]),tag(adv),tokens([then])])],265/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1883708','Then','Then',[then],[tmco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[265/4],0,0)])]).
phrase(can,[modal([lexmatch([can]),inputmatch([can]),tag(modal),tokens([can])])],270/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(decide,[verb([lexmatch([decide]),inputmatch([decide]),tag(verb),tokens([decide])])],274/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(if,[conj([lexmatch([if]),inputmatch([if]),tag(conj),tokens([if])])],281/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(we,[pron([lexmatch([we]),inputmatch([we]),tag(pron),tokens([we])])],284/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(need,[verb([lexmatch([need]),inputmatch([need]),tag(verb),tokens([need])])],287/4,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0027552','Need','Needs',[need],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','MTH','NCI','SNOMEDCT_US'],[287/4],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],292/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1883351','To','To',[to],[qlco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[292/2],0,0)])]).
phrase(increase,[verb([lexmatch([increase]),inputmatch([increase]),tag(verb),tokens([increase])])],295/8,[]).
candidates(8,7,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0442805','Increase','Increase',[increase],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[295/8],0,0)])]).
phrase('the Lipitor.',[det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),head([lexmatch([lipitor]),inputmatch(['Lipitor']),tag(noun),tokens([lipitor])]),punc([inputmatch(['.']),tokens([])])],304/12,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0593906','Lipitor','Lipitor',[lipitor],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','MSH','NCI','NCI_NCI-GLOSS','PDQ','RXNORM'],[308/7],0,0)])]).
'EOU'.
utterance('00000000.tx.4',"Will aim for LDL less than 100",318/30,[]).
phrase('Will',[modal([lexmatch([will]),inputmatch(['Will']),tag(modal),tokens([will])])],318/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('aim for LDL less',[verb([lexmatch([aim]),inputmatch([aim]),tag(verb),tokens([aim])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([ldl]),inputmatch(['LDL']),tag(noun),tokens([ldl])]),adv([lexmatch([less]),inputmatch([less]),tag(adv),tokens([less])])],323/16,[]).
candidates(5,0,0,5,[]).
mappings([map(-770,[ev(-770,'C1947946','Aim','Aim (idea)',[aim],[idcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[323/3],0,0)])]).
phrase('than 100',[prep([lexmatch([than]),inputmatch([than]),tag(prep),tokens([than])]),shapes([inputmatch(['100']),features([integer]),tokens(['100'])])],340/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3817553','100%','100%',['100'],[qnco],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[345/3],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Medications Asa (ACETYLSALICYLIC ACID) 325MG TABLET take 1 Tablet(s) PO QD  Nitroglycerin 1/150 (0.4 MG) 1 TAB SL x1 PRN prn CP  Norvasc (AMLODIPINE) 5MG TABLET take 1 Tablet(s) PO QD  Triamcinolone CREAM 0.5% (TRIAMCINOLONE ACETONIDE 0.5%) TOP BID PRN  Lipitor (ATORVASTATIN) 20MG TABLET PO QD  Zestril (LISINOPRIL) 40MG TABLET take 1 Tablet(s) PO QD  Atenolol 50MG TABLET take 1 Tablet(s) PO QD  Hctz (HYDROCHLOROTHIAZIDE) 25MG TABLET take 1 Tablet(s) PO QD  Ativan (LORAZEPAM) 1 MG (1MG TABLET take 1) PO qhs PRN , dea#pf 0760305",0/532,[]).
phrase('Medications Asa',[mod([lexmatch([medications]),inputmatch(['Medications']),tag(noun),tokens([medications])]),head([lexmatch([asa]),inputmatch(['Asa']),tag(noun),tokens([asa])])],0/15,[]).
candidates(7,1,0,6,[]).
mappings([map(-888,[ev(-694,'C0013227','Medications','Pharmaceutical Preparations',[medications],[phsu],[[[1,1],[1,1],0]],no,no,['CHV','CSP','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[0/11],0,0),ev(-861,'C0004057','ASA','Aspirin',[asa],[orch,phsu],[[[2,2],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','MSH','MTH','MTHSPL','NCI','NCI_DCP','NCI_DTP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[12/3],0,0)])]).
phrase('(ACETYLSALICYLIC ACID',[punc([inputmatch(['(']),tokens([])]),head([lexmatch(['acetylsalicylic acid']),inputmatch(['ACETYLSALICYLIC','ACID']),tag(noun),tokens([acetylsalicylic,acid])])],16/21,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0004057','Acetylsalicylic Acid','Aspirin',[acetylsalicylic,acid],[orch,phsu],[[[1,2],[1,2],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','MSH','MTH','MTHSPL','NCI','NCI_DCP','NCI_DTP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[17/20],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],37/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('325MG TABLET',[mod([inputmatch(['325MG']),tag(noun),tokens(['325mg'])]),head([lexmatch([tablet]),inputmatch(['TABLET']),tag(noun),tokens([tablet])])],39/12,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[45/6],0,0)])]).
phrase(take,[verb([lexmatch([take]),inputmatch([take]),tag(verb),tokens([take])])],52/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],0]],yes,no,['NCI','SNOMEDCT_US'],[52/4],0,0)])]).
phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],57/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[57/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[59/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],65/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],66/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD  Nitroglycerin 1/150',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),mod([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])]),mod([lexmatch([nitroglycerin]),inputmatch(['Nitroglycerin']),tag(noun),tokens([nitroglycerin])]),shapes([inputmatch(['1',/,'150']),features([fraction]),tokens(['1','150'])])],69/26,[]).
candidates(10,4,0,6,[]).
mappings([map(-798,[ev(-875,'C0297198','PO-1','PO-1',[po,'1'],[orch],[[[1,1],[1,1],0],[[4,4],[2,2],0]],yes,no,['MSH'],[69/2,90/1],0,0),ev(-804,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[72/2],0,0),ev(-804,'C0017887','NITROGLYCERIN','Nitroglycerin',[nitroglycerin],[orch,phsu],[[[3,3],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[76/13],0,0)])]).
phrase('(0.4 MG',[punc([inputmatch(['(']),tokens([])]),shapes([inputmatch(['0','.','4']),features([real_number]),tokens(['0','4'])]),head([lexmatch([mg]),inputmatch(['MG']),tag(noun),tokens([mg])])],96/7,[]).
candidates(5,0,0,5,[]).
mappings([map(-802,[ev(-660,'C3842591','0%','0%',['0'],[fndg],[[[1,1],[1,1],0]],no,no,['LNC'],[97/1],0,0),ev(-827,'C2346927','Mg++','Magnesium Cation',[mg],[elii,phsu],[[[3,3],[1,1],0]],yes,no,['MTH','MTHSPL','NCI','NCI_CRCH','NCI_FDA','RXNORM'],[101/2],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],103/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('1 TAB SL x1 PRN prn CP  Norvasc',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),mod([lexmatch([tab]),inputmatch(['TAB']),tag(noun),tokens([tab])]),mod([lexmatch([sl]),inputmatch(['SL']),tag(noun),tokens([sl])]),mod([inputmatch([x1]),tag(noun),tokens([x1])]),mod([lexmatch([prn]),inputmatch(['PRN']),tag(noun),tokens([prn])]),mod([lexmatch([prn]),inputmatch([prn]),tag(noun),tokens([prn])]),mod([lexmatch([cp]),inputmatch(['CP']),tag(noun),tokens([cp])]),head([lexmatch([norvasc]),inputmatch(['Norvasc']),tag(noun),tokens([norvasc])])],105/31,[]).
candidates(6,0,0,6,[]).
mappings([map(-749,[ev(-626,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[105/1],0,0),ev(-626,'C1705223','Tab','Tablet Dosing Unit',[tab],[qnco],[[[2,2],[1,1],0]],no,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[107/3],0,0),ev(-793,'C0162712','Norvasc','Norvasc',[norvasc],[orch,phsu],[[[8,8],[1,1],0]],yes,no,['CHV','CSP','MSH','MTH','RXNORM'],[129/7],0,0)])]).
phrase('(AMLODIPINE',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([amlodipine]),inputmatch(['AMLODIPINE']),tag(noun),tokens([amlodipine])])],137/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0051696','AMLODIPINE','Amlodipine',[amlodipine],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[138/10],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],148/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('5MG TABLET',[mod([inputmatch(['5MG']),tag(noun),tokens(['5mg'])]),head([lexmatch([tablet]),inputmatch(['TABLET']),tag(noun),tokens([tablet])])],150/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[154/6],0,0)])]).
phrase(take,[verb([lexmatch([take]),inputmatch([take]),tag(verb),tokens([take])])],161/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],0]],yes,no,['NCI','SNOMEDCT_US'],[161/4],0,0)])]).
phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],166/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[166/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[168/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],174/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],175/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD  Triamcinolone CREAM 0.5%',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),mod([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])]),mod([lexmatch(['triamcinolone cream']),inputmatch(['Triamcinolone','CREAM']),tag(noun),tokens([triamcinolone,cream])]),shapes([inputmatch(['0','.','5','%']),features([percentage,real_number]),tokens(['0','5'])])],178/31,[]).
candidates(9,1,0,8,[]).
mappings([map(-827,[ev(-799,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[178/2],0,0),ev(-799,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[181/2],0,0),ev(-799,'C0040864','TRIAMCINOLONE','Triamcinolone',[triamcinolone],[orch,phsu],[[[3,3],[1,1],0]],yes,no,['ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_DTP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[185/13],0,0),ev(-799,'C1378128','Cream','Cream',[cream],[bodm],[[[4,4],[1,1],0]],yes,no,['HL7V3.0','LNC','MTH','NCI','NCI_FDA','NCI_NCPDP','NDFRT','NLMSubSyn','RXNORM','SNM','SNOMEDCT_US'],[199/5],0,0),ev(-827,'C0444499','0/5','0/5',['0','5'],[qnco],[[[5,5],[1,1],0],[[6,6],[2,2],0]],yes,no,['SNOMEDCT_US'],[205/3],0,0)])]).
phrase('(TRIAMCINOLONE ACETONIDE 0.5%',[punc([inputmatch(['(']),tokens([])]),mod([lexmatch(['triamcinolone acetonide']),inputmatch(['TRIAMCINOLONE','ACETONIDE']),tag(noun),tokens([triamcinolone,acetonide])]),shapes([inputmatch(['0','.','5','%']),features([percentage,real_number]),tokens(['0','5'])])],210/29,[]).
candidates(6,2,0,4,[]).
mappings([map(-888,[ev(-861,'C0040866','TRIAMCINOLONE ACETONIDE','Triamcinolone Acetonide',[triamcinolone,acetonide],[orch,phsu],[[[1,2],[1,2],0]],yes,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[211/23],0,0),ev(-861,'C0444499','0/5','0/5',['0','5'],[qnco],[[[3,3],[1,1],0],[[4,4],[2,2],0]],yes,no,['SNOMEDCT_US'],[235/3],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],239/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('TOP BID PRN  Lipitor',[mod([lexmatch([top]),inputmatch(['TOP']),tag(noun),tokens([top])]),mod([lexmatch([bid]),inputmatch(['BID']),tag(noun),tokens([bid])]),mod([lexmatch([prn]),inputmatch(['PRN']),tag(noun),tokens([prn])]),head([lexmatch([lipitor]),inputmatch(['Lipitor']),tag(noun),tokens([lipitor])])],241/20,[]).
candidates(2,0,0,2,[]).
mappings([map(-791,[ev(-645,'C1704458','Top','Top (position)',[top],[spco],[[[1,1],[1,1],0]],no,no,['MTH','NCI','SNOMEDCT_US'],[241/3],0,0),ev(-812,'C0593906','Lipitor','Lipitor',[lipitor],[orch,phsu],[[[4,4],[1,1],0]],yes,no,['CHV','CSP','MSH','NCI','NCI_NCI-GLOSS','PDQ','RXNORM'],[254/7],0,0)])]).
phrase('(ATORVASTATIN',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([atorvastatin]),inputmatch(['ATORVASTATIN']),tag(noun),tokens([atorvastatin])])],262/13,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0286651','ATORVASTATIN',atorvastatin,[atorvastatin],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LNC','MSH','MTH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[263/12],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],275/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('20MG TABLET PO QD  Zestril',[mod([inputmatch(['20MG']),tag(noun),tokens(['20mg'])]),mod([lexmatch([tablet]),inputmatch(['TABLET']),tag(noun),tokens([tablet])]),mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),mod([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])]),head([lexmatch([zestril]),inputmatch(['Zestril']),tag(noun),tokens([zestril])])],277/26,[]).
candidates(6,0,0,6,[]).
mappings([map(-771,[ev(-637,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],no,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[282/6],0,0),ev(-637,'C0442027','PO','Oral',[po],[spco],[[[3,3],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[289/2],0,0),ev(-637,'C0332173','QD','Daily',[qd],[tmco],[[[4,4],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[292/2],0,0),ev(-804,'C0678140','Zestril','Zestril',[zestril],[aapp,phsu],[[[5,5],[1,1],0]],yes,no,['CHV','MSH','NCI','NCI_NCI-GLOSS','RXNORM'],[296/7],0,0)])]).
phrase('(LISINOPRIL',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([lisinopril]),inputmatch(['LISINOPRIL']),tag(noun),tokens([lisinopril])])],304/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0065374','LISINOPRIL','Lisinopril',[lisinopril],[aapp,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','CSP','LNC','MSH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNOMEDCT_US','USPMG','VANDF'],[305/10],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],315/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('40MG TABLET',[mod([inputmatch(['40MG']),tag(noun),tokens(['40mg'])]),head([lexmatch([tablet]),inputmatch(['TABLET']),tag(noun),tokens([tablet])])],317/11,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[322/6],0,0)])]).
phrase(take,[verb([lexmatch([take]),inputmatch([take]),tag(verb),tokens([take])])],329/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],0]],yes,no,['NCI','SNOMEDCT_US'],[329/4],0,0)])]).
phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],334/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[334/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[336/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],342/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],343/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD  Atenolol 50MG TABLET',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),mod([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])]),mod([lexmatch([atenolol]),inputmatch(['Atenolol']),tag(noun),tokens([atenolol])]),mod([inputmatch(['50MG']),tag(noun),tokens(['50mg'])]),head([lexmatch([tablet]),inputmatch(['TABLET']),tag(noun),tokens([tablet])])],346/27,[]).
candidates(7,0,0,7,[]).
mappings([map(-875,[ev(-637,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[346/2],0,0),ev(-637,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[349/2],0,0),ev(-884,'C0687940','Atenolol 50mg tablet','Atenolol 50 MG Oral Tablet',[atenolol,'50mg',tablet],[clnd],[[[3,3],[1,1],0],[[4,4],[2,2],0],[[5,5],[3,3],0]],yes,no,['MTHSPL','NDFRT','RXNORM','SNOMEDCT_US','VANDF'],[353/20],0,0)])]).
phrase(take,[verb([lexmatch([take]),inputmatch([take]),tag(verb),tokens([take])])],374/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],0]],yes,no,['NCI','SNOMEDCT_US'],[374/4],0,0)])]).
phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],379/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[379/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[381/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],387/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],388/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD  Hctz',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),mod([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])]),head([lexmatch([hctz]),inputmatch(['Hctz']),tag(noun),tokens([hctz])])],391/11,[]).
candidates(4,0,0,4,[]).
mappings([map(-851,[ev(-660,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[391/2],0,0),ev(-660,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[394/2],0,0),ev(-827,'C0020261','HCTZ','Hydrochlorothiazide',[hctz],[orch,phsu],[[[3,3],[1,1],0]],yes,no,['ATC','CHV','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[398/4],0,0)])]).
phrase('(HYDROCHLOROTHIAZIDE',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([hydrochlorothiazide]),inputmatch(['HYDROCHLOROTHIAZIDE']),tag(noun),tokens([hydrochlorothiazide])])],403/20,[]).
candidates(4,3,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0020261','HYDROCHLOROTHIAZIDE','Hydrochlorothiazide',[hydrochlorothiazide],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['ATC','CHV','LNC','MSH','MTHSPL','NCI','NCI_DCP','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[404/19],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],423/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('25MG TABLET',[mod([inputmatch(['25MG']),tag(noun),tokens(['25mg'])]),head([lexmatch([tablet]),inputmatch(['TABLET']),tag(noun),tokens([tablet])])],425/11,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[430/6],0,0)])]).
phrase(take,[verb([lexmatch([take]),inputmatch([take]),tag(verb),tokens([take])])],437/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],0]],yes,no,['NCI','SNOMEDCT_US'],[437/4],0,0)])]).
phrase('1 Tablet',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([tablet]),inputmatch(['Tablet']),tag(noun),tokens([tablet])])],442/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[442/1],0,0),ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[444/6],0,0)])]).
phrase('(',[punc([inputmatch(['(']),tokens([])])],450/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('s)',[aux([lexmatch([s]),inputmatch([s,')']),tag(aux),tokens([s])])],451/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO QD  Ativan',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),mod([lexmatch([qd]),inputmatch(['QD']),tag(noun),tokens([qd])]),head([lexmatch([ativan]),inputmatch(['Ativan']),tag(noun),tokens([ativan])])],454/13,[]).
candidates(4,0,0,4,[]).
mappings([map(-851,[ev(-660,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[454/2],0,0),ev(-660,'C0332173','QD','Daily',[qd],[tmco],[[[2,2],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_UCUM','SNMI','SNOMEDCT_US'],[457/2],0,0),ev(-827,'C0699194','Ativan','Ativan',[ativan],[orch,phsu],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','MSH','MTH','NCI','NCI_DTP','PDQ','RXNORM'],[461/6],0,0)])]).
phrase('(LORAZEPAM',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([lorazepam]),inputmatch(['LORAZEPAM']),tag(noun),tokens([lorazepam])])],468/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0024002','LORAZEPAM','Lorazepam',[lorazepam],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['AOD','ATC','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','PDQ','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[469/9],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],478/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('1 MG',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),head([lexmatch([mg]),inputmatch(['MG']),tag(noun),tokens([mg])])],480/4,[]).
candidates(7,0,0,7,[]).
mappings([map(-888,[ev(-694,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[480/1],0,0),ev(-861,'C2346927','Mg++','Magnesium Cation',[mg],[elii,phsu],[[[2,2],[1,1],0]],yes,no,['MTH','MTHSPL','NCI','NCI_CRCH','NCI_FDA','RXNORM'],[482/2],0,0)])]).
phrase('(1MG TABLET',[punc([inputmatch(['(']),tokens([])]),mod([inputmatch(['1MG']),tag(noun),tokens(['1mg'])]),head([lexmatch([tablet]),inputmatch(['TABLET']),tag(noun),tokens([tablet])])],485/11,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C1705223','TABLET','Tablet Dosing Unit',[tablet],[qnco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[490/6],0,0)])]).
phrase(take,[verb([lexmatch([take]),inputmatch([take]),tag(verb),tokens([take])])],497/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1515187','Take','Take',[take],[hlca],[[[1,1],[1,1],0]],yes,no,['NCI','SNOMEDCT_US'],[497/4],0,0)])]).
phrase('1',[shapes([inputmatch(['1']),features([integer]),tokens(['1'])])],502/1,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C2981698','1+','1+ Score, WHO',['1'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[502/1],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],503/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PO qhs PRN ,',[mod([lexmatch([po]),inputmatch(['PO']),tag(noun),tokens([po])]),mod([lexmatch([qhs]),inputmatch([qhs]),tag(noun),tokens([qhs])]),head([lexmatch([prn]),inputmatch(['PRN']),tag(noun),tokens([prn])]),punc([inputmatch([',']),tokens([])])],505/12,[]).
candidates(3,0,0,3,[]).
mappings([map(-623,[ev(-660,'C0442027','PO','Oral',[po],[spco],[[[1,1],[1,1],0]],no,no,['AOD','CHV','LNC','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[505/2],0,0),ev(-660,'C1275563',qHS,'Once a day, at bedtime',[qhs],[tmco],[[[2,2],[1,1],0]],no,no,['CHV','MTH','SNOMEDCT_US'],[508/3],0,0)])]).
phrase('dea#pf 0760305',[mod([lexmatch([dea]),inputmatch([dea]),tag(noun),tokens([dea])]),punc([inputmatch([#]),tokens([])]),mod([lexmatch([pf]),inputmatch([pf]),tag(noun),tokens([pf])]),shapes([inputmatch(['0760305']),features([integer]),tokens(['0760305'])])],518/14,[]).
candidates(2,0,0,2,[]).
mappings([map(-790,[ev(-827,'C1512006','DEA','Division of Extramural Activities',[dea],[hcro],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[518/3],0,0),ev(-827,'C3815179','PF','Pharmacogenomics Findings Domain',[pf],[inpr],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NLMSubSyn'],[522/2],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Allergies CEFACLOR - Rash,",0/26,[]).
phrase('Allergies CEFACLOR - Rash,',[mod([lexmatch([allergies]),inputmatch(['Allergies']),tag(noun),tokens([allergies])]),mod([lexmatch([cefaclor]),inputmatch(['CEFACLOR']),tag(noun),tokens([cefaclor])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([rash]),inputmatch(['Rash']),tag(noun),tokens([rash])]),punc([inputmatch([',']),tokens([])])],0/26,[]).
candidates(10,6,0,4,[]).
mappings([map(-873,[ev(-871,'C0850569','allergic rash','allergic rash',[allergic,rash],[dsyn],[[[1,1],[1,1],4],[[3,3],[2,2],0]],yes,no,['CHV'],[0/9,21/4],0,0),ev(-660,'C0007537','CEFACLOR','Cefaclor',[cefaclor],[antb,orch],[[[2,2],[1,1],0]],no,no,['ATC','CHV','LCH_NW','LNC','MSH','MTHSPL','NCI','NCI_FDA','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','USPMG','VANDF'],[10/8],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Family History^I father -HTN, 85 now mother-HTN, MI at 58 and 62 - died then siblings-sister finally died from breast CA after 4 year battle, dx age 37.     ",0/156,[]).
phrase('Family History\t father -HTN,',[mod([lexmatch(['family history']),inputmatch(['Family','History']),tag(noun),tokens([family,history])]),mod([lexmatch([father]),inputmatch([father]),tag(noun),tokens([father])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([htn]),inputmatch(['HTN']),tag(noun),tokens([htn])]),punc([inputmatch([',']),tokens([])])],0/28,[]).
candidates(15,3,0,12,[]).
mappings([map(-861,[ev(-694,'C0241889','FAMILY HISTORY','Family history',[family,history],[fndg],[[[1,2],[1,2],0]],no,no,['CHV','CSP','DXP','MEDLINEPLUS','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNOMEDCT_US'],[0/14],0,0),ev(-645,'C0015671','Father','Father (person)',[father],[famg],[[[3,3],[1,1],0]],no,no,['AOD','CHV','CSP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[16/6],0,0),ev(-812,'C0020538','HTN','Hypertensive disease',[htn],[dsyn],[[[4,4],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[24/3],0,0)])]).
phrase('85 now mother-HTN,',[shapes([inputmatch(['85']),features([integer]),tokens(['85'])]),adv([lexmatch([now]),inputmatch([now]),tag(adv),tokens([now])]),mod([lexmatch([mother]),inputmatch([mother]),tag(noun),tokens([mother])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([htn]),inputmatch(['HTN']),tag(noun),tokens([htn])]),punc([inputmatch([',']),tokens([])])],29/18,[]).
candidates(5,2,0,3,[]).
mappings([map(-775,[ev(-645,'C1948052','Now','Now (temporal qualifier)',[now],[tmco],[[[2,2],[1,1],0]],no,no,['MTH','NCI'],[32/3],0,0),ev(-645,'C0026591','Mother','Mother (person)',[mother],[famg],[[[3,3],[1,1],0]],no,no,['AOD','CHV','CSP','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[36/6],0,0),ev(-812,'C0020538','HTN','Hypertensive disease',[htn],[dsyn],[[[4,4],[1,1],0]],yes,no,['AOD','CCS','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[43/3],0,0)])]).
phrase('MI at 58',[head([lexmatch([mi]),inputmatch(['MI']),tag(noun),tokens([mi])]),prep([lexmatch([at]),inputmatch([at]),tag(prep),tokens([at])]),shapes([inputmatch(['58']),features([integer]),tokens(['58'])])],48/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-790,[ev(-790,'C3810814','MI','Myocardial Infarction ECG Assessment',[mi],[diap],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NLMSubSyn'],[48/2],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],57/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('62 -',[shapes([inputmatch(['62']),features([integer]),tokens(['62'])]),punc([inputmatch([-]),tokens([])])],61/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(died,[verb([lexmatch([died]),inputmatch([died]),tag(verb),tokens([died])])],66/4,[]).
candidates(8,5,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0011065','Died','Cessation of life',[died],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','GO','ICPC','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','SNOMEDCT_US'],[66/4],0,0)])]).
phrase('then siblings-sister',[adv([lexmatch([then]),inputmatch([then]),tag(adv),tokens([then])]),mod([lexmatch([siblings]),inputmatch([siblings]),tag(noun),tokens([siblings])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([sister]),inputmatch([sister]),tag(noun),tokens([sister])])],71/20,[]).
candidates(3,0,0,3,[]).
mappings([map(-851,[ev(-660,'C1883708','Then','Then',[then],[tmco],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[71/4],0,0),ev(-660,'C0037047','Siblings','Sibling',[siblings],[famg],[[[2,2],[1,1],0]],no,no,['AOD','CHV','CSP','HL7V3.0','LNC','MSH','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[76/8],0,0),ev(-827,'C0337514','Sister','Sister',[sister],[famg],[[[3,3],[1,1],0]],yes,no,['CHV','CSP','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[85/6],0,0)])]).
phrase(finally,[adv([lexmatch([finally]),inputmatch([finally]),tag(adv),tokens([finally])])],92/7,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('died from breast CA',[verb([lexmatch([died]),inputmatch([died]),tag(verb),tokens([died])]),prep([lexmatch([from]),inputmatch([from]),tag(prep),tokens([from])]),mod([lexmatch([breast]),inputmatch([breast]),tag(noun),tokens([breast])]),mod([lexmatch([ca]),inputmatch(['CA']),tag(noun),tokens([ca])])],100/19,[]).
candidates(16,10,0,6,[]).
mappings([map(-733,[ev(-770,'C0011065','Died','Cessation of life',[died],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','GO','ICPC','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_CTCAE','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','SNOMEDCT_US'],[100/4],0,0),ev(-770,'C1268990','Breast','Entire breast',[breast],[bpoc],[[[3,3],[1,1],0]],yes,no,['MTH','SNOMEDCT_US'],[110/6],0,0),ev(-770,'C3887642','CA','Hippocampus Proper',[ca],[bpoc],[[[4,4],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','MSH','MTH','NCI'],[117/2],0,0)])]).
phrase('after 4 year battle,',[prep([lexmatch([after]),inputmatch([after]),tag(prep),tokens([after])]),shapes([inputmatch(['4']),features([integer]),tokens(['4'])]),mod([lexmatch([year]),inputmatch([year]),tag(noun),tokens([year])]),head([lexmatch([battle]),inputmatch([battle]),tag(noun),tokens([battle])]),punc([inputmatch([',']),tokens([])])],120/20,[]).
candidates(3,0,0,3,[]).
mappings([map(-623,[ev(-660,'C3838679','4+','4+ Answer to question',['4'],[fndg],[[[1,1],[1,1],0]],no,no,['LNC','MTH'],[126/1],0,0),ev(-660,'C0439508','/Year','per year',[year],[tmco],[[[2,2],[1,1],0]],no,no,['CHV','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[128/4],0,0)])]).
phrase('dx age 37.',[mod([lexmatch([dx]),inputmatch([dx]),tag(noun),tokens([dx])]),mod([lexmatch([age]),inputmatch([age]),tag(noun),tokens([age])]),shapes([inputmatch(['37']),features([integer]),tokens(['37'])]),punc([inputmatch(['.']),tokens([])])],141/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-790,[ev(-827,'C3538936','DX','Device Exposure Domain',[dx],[idcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC'],[141/2],0,0),ev(-827,'C0001779','AGE','Age',[age],[orga],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','LNC','MTH','NCI','NCI_BRIDG','NCI_CDISC','NCI_FDA','NCI_NICHD','SNMI','SNOMEDCT_US'],[144/3],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"7 sisters - one with DM,and 2 brothers - ok No change since previous annual.",156/76,[]).
phrase('7 sisters - one with DM,',[shapes([inputmatch(['7']),features([integer]),tokens(['7'])]),mod([lexmatch([sisters]),inputmatch([sisters]),tag(noun),tokens([sisters])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([one]),inputmatch([one]),tag(noun),tokens([one])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([dm]),inputmatch(['DM']),tag(noun),tokens([dm])]),punc([inputmatch([',']),tokens([])])],156/24,[]).
candidates(2,0,0,2,[]).
mappings([map(-695,[ev(-593,'C0337514','Sisters','Sister',[sisters],[famg],[[[2,2],[1,1],0]],no,no,['CHV','CSP','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[158/7],0,0),ev(-760,'C0205447','ONE','One',[one],[qnco],[[[3,3],[1,1],0]],yes,no,['LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[168/3],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],180/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('2 brothers -',[shapes([inputmatch(['2']),features([integer]),tokens(['2'])]),head([lexmatch([brothers]),inputmatch([brothers]),tag(noun),tokens([brothers])]),punc([inputmatch([-]),tokens([])])],184/12,[]).
candidates(5,0,0,5,[]).
mappings([map(-888,[ev(-694,'C2981700','2+','2+ Score, WHO',['2'],[clas],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[184/1],0,0),ev(-861,'C0337527','Brothers','Brothers',[brothers],[famg],[[[2,2],[1,1],0]],yes,no,['CHV','CSP','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[186/8],0,0)])]).
phrase(ok,[verb([lexmatch([ok]),inputmatch([ok]),tag(verb),tokens([ok])])],197/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('No change',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])]),head([lexmatch([change]),inputmatch([change]),tag(noun),tokens([change])])],200/9,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0443172',change,'Changed status',[change],[qnco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NLMSubSyn','SNOMEDCT_US'],[203/6],0,0)])]).
phrase(since,[conj([lexmatch([since]),inputmatch([since]),tag(conj),tokens([since])])],210/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('previous annual.',[mod([lexmatch([previous]),inputmatch([previous]),tag(adj),tokens([previous])]),head([lexmatch([annual]),inputmatch([annual]),tag(adj),tokens([annual])]),punc([inputmatch(['.']),tokens([])])],216/16,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0205156','Previous','Previous',[previous],[tmco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[216/8],0,0),ev(-861,'C0332181','Annual','Annual',[annual],[tmco],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[225/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Social History^Iworking for Convergys as Sculptor, widowed 2070, one son - 29 yo who lives with her - Specialized Livestock Worker",0/129,[]).
phrase('Social History\tworking for Convergys',[mod([lexmatch(['social history']),inputmatch(['Social','History']),tag(noun),tokens([social,history])]),head([lexmatch([working]),inputmatch([working]),tag(noun),tokens([working])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([inputmatch(['Convergys']),tag(noun),tokens([convergys])])],0/36,[]).
candidates(12,2,0,10,[]).
mappings([map(-763,[ev(-640,'C0424945','Social history','Social and personal history',[social,history],[fndg],[[[1,2],[1,2],0]],no,no,['CHV','MTH','SNOMEDCT_US'],[0/14],0,0),ev(-760,'C0043227','Working','Work',[working],[ocac],[[[3,3],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[15/7],0,0)])]).
phrase('as Sculptor,',[prep([lexmatch([as]),inputmatch([as]),tag(prep),tokens([as])]),head([lexmatch([sculptor]),inputmatch(['Sculptor']),tag(noun),tokens([sculptor])]),punc([inputmatch([',']),tokens([])])],37/12,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0335049','Sculptor','Sculptor',[sculptor],[prog],[[[1,1],[1,1],0]],yes,no,['SNM','SNMI','SNOMEDCT_US'],[40/8],0,0)])]).
phrase('widowed 2070,',[mod([lexmatch([widowed]),inputmatch([widowed]),tag(adj),tokens([widowed])]),shapes([inputmatch(['2070']),features([integer]),tokens(['2070'])]),punc([inputmatch([',']),tokens([])])],50/13,[]).
candidates(2,0,0,2,[]).
mappings([map(-861,[ev(-861,'C0206275','WIDOWED','Widowhood',[widowed],[fndg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','HL7V2.5','HL7V3.0','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-HL7','SNM','SNMI','SNOMEDCT_US'],[50/7],0,0)])]).
phrase('one son - 29 yo',[mod([lexmatch([one]),inputmatch([one]),tag(noun),tokens([one])]),mod([lexmatch([son]),inputmatch([son]),tag(noun),tokens([son])]),punc([inputmatch([-]),tokens([])]),shapes([inputmatch(['29']),features([integer]),tokens(['29'])]),head([lexmatch([yo]),inputmatch([yo]),tag(noun),tokens([yo])])],64/15,[]).
candidates(4,0,0,4,[]).
mappings([map(-833,[ev(-645,'C0205447','ONE','One',[one],[qnco],[[[1,1],[1,1],0]],no,no,['LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US'],[64/3],0,0),ev(-645,'C0037683','Son','Son (person)',[son],[famg],[[[2,2],[1,1],0]],no,no,['AOD','CHV','HL7V3.0','LNC','MSH','MTH','NCI','SNMI','SNOMEDCT_US'],[68/3],0,0),ev(-645,'C3843708','29+','29+',['29'],[fndg],[[[3,3],[1,1],0]],no,no,['LNC'],[74/2],0,0),ev(-812,'C1413296','Yo','CDR2 gene',[yo],[gngm],[[[4,4],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[77/2],0,0)])]).
phrase(who,[pron([lexmatch([who]),inputmatch([who]),tag(pron),tokens([who])])],80/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('lives with her - Specialized Livestock Worker',[verb([lexmatch([lives]),inputmatch([lives]),tag(verb),tokens([lives])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([specialized]),inputmatch(['Specialized']),tag(adj),tokens([specialized])]),mod([lexmatch([livestock]),inputmatch(['Livestock']),tag(noun),tokens([livestock])]),mod([lexmatch([worker]),inputmatch(['Worker']),tag(noun),tokens([worker])])],84/45,[]).
candidates(9,0,0,9,[]).
mappings([map(-725,[ev(-753,'C0595998',lives,'Household composition',[lives],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','SNOMEDCT_US'],[84/5],0,0),ev(-753,'C1704211','Specialized','Specialized',[specialized],[cnce],[[[4,4],[1,1],0]],yes,no,['MTH','NCI','SNMI','SNOMEDCT_US'],[101/11],0,0),ev(-790,'C0335436','Livestock worker','Livestock worker',[livestock,worker],[prog],[[[5,5],[1,1],0],[[6,6],[2,2],0]],yes,no,['SNM','SNMI','SNOMEDCT_US'],[113/16],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Review of Systems^I The following systems were reviewed today and were negative unless indicated otherwise in the history noted above: Constitutional, HEENT, Breast,CVS, GI, GYN, Skin, Musculoskeletal, Neuro, Psych, Respiratory, and Allergic",0/240,[]).
phrase('Review of Systems',[head([lexmatch([review]),inputmatch(['Review']),tag(noun),tokens([review])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([systems]),inputmatch(['Systems']),tag(noun),tokens([systems])])],0/17,[]).
candidates(12,3,0,9,[]).
mappings([map(-1000,[ev(-1000,'C0488564','Review of systems','Review of systems:Finding:Point in time:^Patient:Narrative:Reported',[review,of,systems],[clna],[[[1,1],[1,1],0],[[2,2],[2,2],0],[[3,3],[3,3],0]],yes,no,['LNC','MTH'],[0/17],0,0)])]).
phrase('The following systems',[det([lexmatch([the]),inputmatch(['The']),tag(det),tokens([the])]),mod([lexmatch([following]),inputmatch([following]),tag(adj),tokens([following])]),head([lexmatch([systems]),inputmatch([systems]),tag(noun),tokens([systems])])],19/21,[]).
candidates(9,4,0,5,[]).
mappings([map(-872,[ev(-694,'C0332282','Following','Following',[following],[tmco],[[[1,1],[1,1],0]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[23/9],0,0),ev(-827,'C1704459','System','Device Component System',[system],[mnob],[[[2,2],[1,1],1]],yes,no,['MTH','NCI','NCI_FDA','NLMSubSyn'],[33/7],0,0)])]).
phrase(were,[aux([lexmatch([were]),inputmatch([were]),tag(aux),tokens([were])])],41/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(reviewed,[verb([lexmatch([reviewed]),inputmatch([reviewed]),tag(verb),tokens([reviewed])])],46/8,[]).
candidates(3,1,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0282443',reviewed,'Review [Publication Type]',[reviewed],[inpr],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','MSH','MTH'],[46/8],0,0)])]).
phrase(today,[head([lexmatch([today]),inputmatch([today]),tag(noun),tokens([today])])],55/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0310367','Today','Today',[today],[antb,orch],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','RXNORM'],[55/5],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],61/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(were,[aux([lexmatch([were]),inputmatch([were]),tag(aux),tokens([were])])],65/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(negative,[head([lexmatch([negative]),inputmatch([negative]),tag(adj),tokens([negative])])],70/8,[]).
candidates(5,0,0,5,[]).
mappings([map(-1000,[ev(-1000,'C0205160','Negative','Negative',[negative],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','SNMI','SNOMEDCT_US'],[70/8],0,0)])]).
phrase(unless,[conj([lexmatch([unless]),inputmatch([unless]),tag(conj),tokens([unless])])],79/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(indicated,[verb([lexmatch([indicated]),inputmatch([indicated]),tag(verb),tokens([indicated])])],86/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1444656','Indicated','Indicated',[indicated],[fndg],[[[1,1],[1,1],0]],yes,no,['SNOMEDCT_US'],[86/9],0,0)])]).
phrase('otherwise in the history',[adv([lexmatch([otherwise]),inputmatch([otherwise]),tag(adv),tokens([otherwise])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),det([lexmatch([the]),inputmatch([the]),tag(det),tokens([the])]),mod([lexmatch([history]),inputmatch([history]),tag(noun),tokens([history])])],96/24,[]).
candidates(8,2,0,6,[]).
mappings([map(-770,[ev(-770,'C2004062','History','History of previous events',[history],[fndg],[[[4,4],[1,1],0]],yes,no,['CHV','LCH','MTH','NCI'],[113/7],0,0)])]).
phrase(noted,[verb([lexmatch([noted]),inputmatch([noted]),tag(verb),tokens([noted])])],121/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-966,[ev(-966,'C1317574','Note','Note (document)',[note],[inpr],[[[1,1],[1,1],1]],yes,no,['CHV','LNC','MTH','NCI'],[121/5],0,0)])]).
phrase(above,[head([lexmatch([above]),inputmatch([above]),tag(adj),tokens([above])])],127/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1282910','Above','Upper',[above],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','FMA','HL7V2.5','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US','UWDA'],[127/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],132/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Constitutional,',[head([lexmatch([constitutional]),inputmatch(['Constitutional']),tag(noun),tokens([constitutional])]),punc([inputmatch([',']),tokens([])])],134/15,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1511487','Constitutional','Constitutional',[constitutional],[idcn],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[134/14],0,0)])]).
phrase('HEENT,',[head([lexmatch([heent]),inputmatch(['HEENT']),tag(noun),tokens([heent])]),punc([inputmatch([',']),tokens([])])],150/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1512338','HEENT','HEENT',[heent],[blor],[[[1,1],[1,1],0]],yes,no,['LNC','NCI','OMIM'],[150/5],0,0)])]).
phrase('Breast,',[head([lexmatch([breast]),inputmatch(['Breast']),tag(noun),tokens([breast])]),punc([inputmatch([',']),tokens([])])],157/7,[]).
candidates(7,5,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1268990','Breast','Entire breast',[breast],[bpoc],[[[1,1],[1,1],0]],yes,no,['MTH','SNOMEDCT_US'],[157/6],0,0)])]).
phrase('CVS,',[head([lexmatch([cvs]),inputmatch(['CVS']),tag(noun),tokens([cvs])]),punc([inputmatch([',']),tokens([])])],164/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('GI,',[head([lexmatch([gi]),inputmatch(['GI']),tag(noun),tokens([gi])]),punc([inputmatch([',']),tokens([])])],169/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3539617','GI','Digestive System Findings Domain',[gi],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_CDISC','NLMSubSyn'],[169/2],0,0)])]).
phrase('GYN,',[head([lexmatch([gyn]),inputmatch(['GYN']),tag(noun),tokens([gyn])]),punc([inputmatch([',']),tokens([])])],173/4,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0205480','GYN','Gynecologic',[gyn],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[173/3],0,0)])]).
phrase('Skin,',[head([lexmatch([skin]),inputmatch(['Skin']),tag(noun),tokens([skin])]),punc([inputmatch([',']),tokens([])])],178/5,[]).
candidates(7,4,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1278993','Skin','Entire skin',[skin],[bdsy],[[[1,1],[1,1],0]],yes,no,['MTH','NLMSubSyn','SNOMEDCT_US'],[178/4],0,0)])]).
phrase('Musculoskeletal,',[head([lexmatch([musculoskeletal]),inputmatch(['Musculoskeletal']),tag(adj),tokens([musculoskeletal])]),punc([inputmatch([',']),tokens([])])],184/16,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C2707260','Musculoskeletal','Musculoskeletal:-:Point in time:^Patient:-',[musculoskeletal],[clna],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[184/15],0,0)])]).
phrase('Neuro,',[head([lexmatch([neuro]),inputmatch(['Neuro']),tag(adj),tokens([neuro])]),punc([inputmatch([',']),tokens([])])],201/6,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Psych,',[head([lexmatch([psych]),inputmatch(['Psych']),tag(noun),tokens([psych])]),punc([inputmatch([',']),tokens([])])],208/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1306597',psych,'Psychiatric problem',[psych],[mobd],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','ICPC','LNC','MTH'],[208/5],0,0)])]).
phrase('Respiratory,',[head([lexmatch([respiratory]),inputmatch(['Respiratory']),tag(adj),tokens([respiratory])]),punc([inputmatch([',']),tokens([])])],215/12,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0521346','RESPIRATORY',respiratory,[respiratory],[ftcn],[[[1,1],[1,1],0]],yes,no,['ICPC','LNC','MTH','NCI','OMIM','SNMI'],[215/11],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],228/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Allergic',[head([lexmatch([allergic]),inputmatch(['Allergic']),tag(adj),tokens([allergic])])],232/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0700624','Allergic',allergic,[allergic],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','NCI','SNMI'],[232/8],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Physical Exam",0/13,[]).
phrase('Physical Exam',[mod([lexmatch([physical]),inputmatch(['Physical']),tag(adj),tokens([physical])]),head([lexmatch([exam]),inputmatch(['Exam']),tag(noun),tokens([exam])])],0/13,[]).
candidates(6,0,0,6,[]).
mappings([map(-1000,[ev(-1000,'C1744699','Physical Exam','Physical Exam Domain',[physical,exam],[inpr],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['MTH','NCI','NCI_CDISC','NLMSubSyn'],[0/13],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Vital Signs BLOOD PRESSURE 148/76  PULSE 60  HEIGHT 65 in WEIGHT 217.5 lb BMI 36.3",0/82,[]).
phrase('Vital Signs BLOOD PRESSURE 148/76  PULSE 60  HEIGHT 65',[mod([lexmatch(['vital signs']),inputmatch(['Vital','Signs']),tag(noun),tokens([vital,signs])]),mod([lexmatch(['blood pressure']),inputmatch(['BLOOD','PRESSURE']),tag(noun),tokens([blood,pressure])]),shapes([inputmatch(['148',/,'76']),features([fraction]),tokens(['148','76'])]),mod([lexmatch([pulse]),inputmatch(['PULSE']),tag(noun),tokens([pulse])]),shapes([inputmatch(['60']),features([integer]),tokens(['60'])]),mod([lexmatch([height]),inputmatch(['HEIGHT']),tag(noun),tokens([height])]),shapes([inputmatch(['65']),features([integer]),tokens(['65'])])],0/54,[]).
candidates(40,16,0,24,[]).
mappings([map(-743,[ev(-804,'C0150404','Vital signs','Taking vital signs',[vital,signs],[hlca],[[[1,2],[1,2],0]],yes,no,['CHV','MTH','SNM','SNMI','SNOMEDCT_US'],[0/11],0,0),ev(-804,'C0005823','BLOOD PRESSURE','Blood Pressure',[blood,pressure],[orgf],[[[3,4],[1,2],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','NCI_NICHD','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[12/14],0,0),ev(-790,'C0232117','PULSE','Pulse Rate',[pulse],[clna],[[[7,7],[1,1],0]],yes,no,['AOD','CHV','MSH','MTH','NCI','NCI_CDISC','NCI_NCPDP','NCI_NICHD','SNM','SNMI','SNOMEDCT_US'],[35/5],0,0),ev(-790,'C3842585','60%','60%',['60'],[fndg],[[[8,8],[1,1],0]],yes,no,['LNC'],[41/2],0,0),ev(-790,'C0489786','Height','Height',[height],[orga],[[[9,9],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_DICOM','NCI_FDA','NCI_NCPDP','OMIM'],[45/6],0,0),ev(-790,'C3843765','65+','65+',['65'],[fndg],[[[10,10],[1,1],0]],yes,no,['LNC'],[52/2],0,0)]),map(-743,[ev(-804,'C0150404','Vital signs','Taking vital signs',[vital,signs],[hlca],[[[1,2],[1,2],0]],yes,no,['CHV','MTH','SNM','SNMI','SNOMEDCT_US'],[0/11],0,0),ev(-790,'C0005768','BLOOD','In Blood',[blood],[bdsu],[[[3,3],[1,1],0]],yes,no,['MSH','MTH'],[12/5],0,0),ev(-824,'C0949236','pressure pulse','Pulse Pressure',[pressure,pulse],[orgf],[[[4,4],[1,1],0],[[7,7],[2,2],0]],yes,no,['CHV','MSH','NCI','NCI_CDISC','NLMSubSyn'],[18/8,35/5],0,0),ev(-790,'C3842585','60%','60%',['60'],[fndg],[[[8,8],[1,1],0]],yes,no,['LNC'],[41/2],0,0),ev(-790,'C0489786','Height','Height',[height],[orga],[[[9,9],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','NCI_DICOM','NCI_FDA','NCI_NCPDP','OMIM'],[45/6],0,0),ev(-790,'C3843765','65+','65+',['65'],[fndg],[[[10,10],[1,1],0]],yes,no,['LNC'],[52/2],0,0)])]).
phrase('in WEIGHT 217.5 lb BMI 36.3',[prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([weight]),inputmatch(['WEIGHT']),tag(noun),tokens([weight])]),shapes([inputmatch(['217','.','5']),features([real_number]),tokens(['217','5'])]),mod([lexmatch([lb]),inputmatch([lb]),tag(noun),tokens([lb])]),mod([lexmatch([bmi]),inputmatch(['BMI']),tag(noun),tokens([bmi])]),shapes([inputmatch(['36','.','3']),features([real_number]),tokens(['36','3'])])],55/27,[]).
candidates(5,1,0,4,[]).
mappings([map(-795,[ev(-795,'C0043100','WEIGHT','Weight',[weight],[qnco],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_FDA','OMIM','SNMI','SNOMEDCT_US'],[58/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([negation(nega,no,[107/2],['C0018021':'THYROMEGALY'],[110/11]),negation(nega,no,[123/2],['C0006318':bruits],[126/6]),negation(nega,no,[140/2],['C0749155':'Supraclavicular lymphadenopathy'],[166/31]),negation(nega,no,[208/2],['C0149741':'NIPPLE DISCHARGE'],[211/16]),negation(nega,no,[208/2],['C0332523':'Retraction'],[231/10]),negation(nega,no,[243/2],['C1709157':'Clear'],[270/5]),negation(nega,no,[243/2],['C0347941':'mass chest'],[255/12]),negation(nega,no,[293/2],['C0035508':'RHONCHI'],[296/7]),negation(nega,no,[293/2],['C3715215':'S1'],[328/2]),negation(nega,no,[293/2],['C0035508':'Wheeze'],[307/6]),negation(nega,no,[336/2],['C3842105':'Rubs'],[348/4]),negation(nega,no,[336/2],['C0018808':murmurs],[339/7]),negation(nega,no,[383/2],['C0577573':'Mass'],[393/6]),negation(nega,no,[418/2],['C0041834':'ERYTHEMA'],[421/8]),negation(nega,no,[418/2],['C0013604':'SWELLING'],[431/8]),negation(nega,no,[418/2],['C0234233':'TENDERNESS (NOS)'],[444/10]),negation(nega,'no suspicious',[77/13],['C0235656':'lesion cervix'],[91/7,100/4])]).
utterance('00000000.tx.1',"up 3 lbs General:  appears well       HEENT:  EOMI, PERRL, OP normal   Skin: no suspicious lesions  Neck:  no thyromegaly, no bruits Nodes: no cervical, axillary, or supraclavicular lymphadenopathy Breasts - no nipple discharge or retraction, no dominant masses Chest:  clear to auscultation, no rhonchi or wheeze COR:  regular S1, S2, no murmurs, rubs or gallops    Abd:  soft, NT, no HSM or masses Musculoskeletal:  no erythema, swelling, or tenderness Ext:  no CCE    ,  Neuro:  grossly non-focal",0/499,[]).
phrase('up 3 lbs',[prep([lexmatch([up]),inputmatch([up]),tag(prep),tokens([up])]),shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),head([lexmatch([lbs]),inputmatch([lbs]),tag(noun),tokens([lbs])])],0/8,[]).
candidates(6,0,0,6,[]).
mappings([map(-888,[ev(-694,'C0439086','<3','<3 (qualifier value)',['3'],[qnco],[[[1,1],[1,1],0]],no,no,['MTH','SNOMEDCT_US'],[3/1],0,0),ev(-861,'C3161851','LBS','liquid-based cytology (procedure)',[lbs],[lbpr],[[[2,2],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[5/3],0,0)])]).
phrase('General',[head([lexmatch([general]),inputmatch(['General']),tag(adj),tokens([general])])],9/7,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0205246','General','Generalized',[general],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','HL7V3.0','HPO','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[9/7],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],16/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(appears,[verb([lexmatch([appears]),inputmatch([appears]),tag(verb),tokens([appears])])],19/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0700364','APPEAR','Appearance',[appear],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[19/7],0,0)])]).
phrase('well       HEENT',[adv([lexmatch([well]),inputmatch([well]),tag(adv),tokens([well])]),head([lexmatch([heent]),inputmatch(['HEENT']),tag(noun),tokens([heent])])],27/16,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C3146287','Well','Well',[well],[mnob],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[27/4],0,0),ev(-861,'C1512338','HEENT','HEENT',[heent],[blor],[[[2,2],[1,1],0]],yes,no,['LNC','NCI','OMIM'],[38/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],43/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('EOMI,',[head([lexmatch([eomi]),inputmatch(['EOMI']),tag(noun),tokens([eomi])]),punc([inputmatch([',']),tokens([])])],46/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('PERRL,',[head([inputmatch(['PERRL']),tag(noun),tokens([perrl])]),punc([inputmatch([',']),tokens([])])],52/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1642390','PERRL','Pupil equal round and reacting to light',[perrl],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC','NCI','SNOMEDCT_US'],[52/5],0,0)])]).
phrase('OP normal   Skin',[mod([lexmatch([op]),inputmatch(['OP']),tag(noun),tokens([op])]),head([lexmatch(['normal skin']),inputmatch([normal,'Skin']),tag(noun),tokens([normal,skin])])],59/16,[]).
candidates(11,4,0,7,[]).
mappings([map(-901,[ev(-901,'C0558145','Normal Skin','Skin appearance normal (finding)',[normal,skin],[fndg],[[[2,3],[1,2],0]],yes,no,['CHV','MTH','NCI','OMIM','SNOMEDCT_US'],[62/6,71/4],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],75/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no suspicious lesions  Neck',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([suspicious]),inputmatch([suspicious]),tag(adj),tokens([suspicious])]),mod([lexmatch([lesions]),inputmatch([lesions]),tag(noun),tokens([lesions])]),head([lexmatch([neck]),inputmatch(['Neck']),tag(noun),tokens([neck])])],77/27,[]).
candidates(11,5,0,6,[]).
mappings([map(-859,[ev(-660,'C0750493','Suspicious',suspicious,[suspicious],[idcn],[[[1,1],[1,1],0]],no,no,['CHV','LNC'],[80/10],0,0),ev(-838,'C0235656','lesion cervix','Lesion of cervix',[lesion,cervix],[patf],[[[2,2],[1,1],1],[[3,3],[2,2],5]],yes,no,['CHV','CST','DXP','SNOMEDCT_US'],[91/7,100/4],0,1)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],104/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no thyromegaly,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([thyromegaly]),inputmatch([thyromegaly]),tag(noun),tokens([thyromegaly])]),punc([inputmatch([',']),tokens([])])],107/15,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0018021','THYROMEGALY','Goiter',[thyromegaly],[patf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','ICPC','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[110/11],0,1)])]).
phrase('no bruits Nodes',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([bruits]),inputmatch([bruits]),tag(noun),tokens([bruits])]),head([lexmatch([nodes]),inputmatch(['Nodes']),tag(noun),tokens([nodes])])],123/15,[]).
candidates(13,11,0,2,[]).
mappings([map(-888,[ev(-694,'C0006318',bruits,'Bruit',[bruits],[fndg],[[[1,1],[1,1],0]],no,no,['CHV','COSTAR','DXP','MTHICD9','SNM','SNMI','SNOMEDCT_US'],[126/6],0,1),ev(-861,'C0746922',nodes,'Anatomic Node',[nodes],[bpoc],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI'],[133/5],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],138/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no cervical, axillary,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([cervical]),inputmatch([cervical]),tag(adj),tokens([cervical])]),punc([inputmatch([',']),tokens([])]),head([lexmatch([axillary]),inputmatch([axillary]),tag(adj),tokens([axillary])]),punc([inputmatch([',']),tokens([])])],140/22,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0027530','Cervical','Neck',[cervical],[blor],[[[1,1],[1,1],0]],no,no,['AOD','CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[143/8],0,0),ev(-861,'C0004454','Axillary','Axilla',[axillary],[blor],[[[2,2],[1,1],0]],yes,no,['CHV','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US','UWDA'],[153/8],0,0)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],163/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('supraclavicular lymphadenopathy Breasts -',[mod([lexmatch([supraclavicular]),inputmatch([supraclavicular]),tag(adj),tokens([supraclavicular])]),mod([lexmatch([lymphadenopathy]),inputmatch([lymphadenopathy]),tag(noun),tokens([lymphadenopathy])]),head([lexmatch([breasts]),inputmatch(['Breasts']),tag(noun),tokens([breasts])]),punc([inputmatch([-]),tokens([])])],166/41,[]).
candidates(10,6,0,4,[]).
mappings([map(-901,[ev(-734,'C0749155','Supraclavicular lymphadenopathy','Supraclavicular lymphadenopathy',[supraclavicular,lymphadenopathy],[patf],[[[1,1],[1,1],0],[[2,2],[2,2],0]],no,no,['MTH','NLMSubSyn','SNOMEDCT_US'],[166/31],0,1),ev(-827,'C0006141','BREASTS','Breast',[breasts],[bpoc],[[[3,3],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[198/7],0,0)])]).
phrase('no nipple discharge',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([nipple]),inputmatch([nipple]),tag(noun),tokens([nipple])]),head([lexmatch([discharge]),inputmatch([discharge]),tag(noun),tokens([discharge])])],208/19,[]).
candidates(12,4,0,8,[]).
mappings([map(-1000,[ev(-1000,'C0149741','NIPPLE DISCHARGE','nipple discharge',[nipple,discharge],[sosy],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','COSTAR','DXP','ICD10CM','LNC','MTH','MTHICD9','NCI','NCI_NCI-GLOSS','NLMSubSyn','SNMI','SNOMEDCT_US'],[211/16],0,1)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],228/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('retraction,',[head([lexmatch([retraction]),inputmatch([retraction]),tag(noun),tokens([retraction])]),punc([inputmatch([',']),tokens([])])],231/11,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0332523','Retraction','Retraction (finding)',[retraction],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH','SNM','SNMI','SNOMEDCT_US'],[231/10],0,1)])]).
phrase('no dominant masses Chest',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),mod([lexmatch([dominant]),inputmatch([dominant]),tag(adj),tokens([dominant])]),mod([lexmatch([masses]),inputmatch([masses]),tag(noun),tokens([masses])]),head([lexmatch([chest]),inputmatch(['Chest']),tag(noun),tokens([chest])])],243/24,[]).
candidates(14,6,0,8,[]).
mappings([map(-890,[ev(-660,'C1527180','Dominant','Dominant',[dominant],[ftcn],[[[1,1],[1,1],0]],no,no,['MTH','NCI'],[246/8],0,0),ev(-884,'C0347941','mass chest','Chest mass',[mass,chest],[fndg],[[[2,2],[1,1],1],[[3,3],[2,2],0]],yes,no,['CHV','COSTAR','DXP','NCI','SNMI','SNOMEDCT_US'],[255/12],0,1)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],267/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('clear to auscultation,',[head([lexmatch([clear]),inputmatch([clear]),tag(adj),tokens([clear])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),mod([lexmatch([auscultation]),inputmatch([auscultation]),tag(noun),tokens([auscultation])]),punc([inputmatch([',']),tokens([])])],270/22,[]).
candidates(3,0,0,3,[]).
mappings([map(-746,[ev(-790,'C1709157','Clear','Negative Surgical Margin',[clear],[fndg],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NLMSubSyn'],[270/5],0,1),ev(-623,'C0004339','AUSCULTATION','Auscultation',[auscultation],[diap],[[[3,3],[1,1],0]],no,no,['AOD','CHV','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','SNM','SNMI','SNOMEDCT_US'],[279/12],0,0)])]).
phrase('no rhonchi',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([rhonchi]),inputmatch([rhonchi]),tag(noun),tokens([rhonchi])])],293/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0035508','RHONCHI','Rhonchi',[rhonchi],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','DXP','LNC','MSH','MTH','NCI','NCI_NICHD','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[296/7],0,1)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],304/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('wheeze COR',[mod([lexmatch([wheeze]),inputmatch([wheeze]),tag(noun),tokens([wheeze])]),head([lexmatch([cor]),inputmatch(['COR']),tag(noun),tokens([cor])])],307/10,[]).
candidates(4,0,0,4,[]).
mappings([map(-888,[ev(-694,'C0035508','Wheeze','Rhonchi',[wheeze],[fndg],[[[1,1],[1,1],0]],no,no,['CHV','DXP','LNC','MSH','MTH','NCI','NCI_NICHD','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[307/6],0,1),ev(-861,'C0018787','Cor','Heart',[cor],[bpoc],[[[2,2],[1,1],0]],yes,no,['AIR','AOD','CHV','CSP','FMA','HL7V2.5','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[314/3],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],317/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('regular S1,',[mod([lexmatch([regular]),inputmatch([regular]),tag(adj),tokens([regular])]),head([lexmatch([s1]),inputmatch(['S1']),tag(noun),tokens([s1])]),punc([inputmatch([',']),tokens([])])],320/11,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-694,'C0205272','Regular','Regular',[regular],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[320/7],0,0),ev(-861,'C3715215','S1','S1',[s1],[fndg],[[[2,2],[1,1],0]],yes,no,['LNC','MTH'],[328/2],0,1)])]).
phrase('S2,',[head([lexmatch([s2]),inputmatch(['S2']),tag(noun),tokens([s2])]),punc([inputmatch([',']),tokens([])])],332/3,[]).
candidates(5,0,0,5,[]).
mappings([map(-1000,[ev(-1000,'C1419718','S2','RPS2 gene',[s2],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH','OMIM'],[332/2],0,0)])]).
phrase('no murmurs,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([murmurs]),inputmatch([murmurs]),tag(noun),tokens([murmurs])]),punc([inputmatch([',']),tokens([])])],336/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0018808',murmurs,'Heart murmur',[murmurs],[fndg],[[[1,1],[1,1],0]],yes,no,['AIR','AOD','CHV','COSTAR','DXP','HPO','ICD10CM','ICPC','LCH','LCH_NW','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_NICHD','NDFRT','OMIM','SNM','SNMI','SNOMEDCT_US'],[339/7],0,1)])]).
phrase(rubs,[verb([lexmatch([rubs]),inputmatch([rubs]),tag(verb),tokens([rubs])])],348/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3842105','Rubs','Rubs',[rubs],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC'],[348/4],0,1)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],353/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('gallops    Abd',[mod([lexmatch([gallops]),inputmatch([gallops]),tag(noun),tokens([gallops])]),head([lexmatch([abd]),inputmatch(['Abd']),tag(noun),tokens([abd])])],356/14,[]).
candidates(3,0,0,3,[]).
mappings([map(-861,[ev(-861,'C0000726',abd,'Abdomen',[abd],[blor],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','CSP','CST','FMA','HL7V2.5','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NCI-GLOSS','OMIM','SNM','SNMI','SNOMEDCT_US','UWDA'],[367/3],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],370/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('soft, NT,',[mod([lexmatch([soft]),inputmatch([soft]),tag(adj),tokens([soft])]),punc([inputmatch([',']),tokens([])]),head([lexmatch([nt]),inputmatch(['NT']),tag(noun),tokens([nt])]),punc([inputmatch([',']),tokens([])])],373/9,[]).
candidates(6,1,0,5,[]).
mappings([map(-888,[ev(-694,'C0205358','Soft','Soft',[soft],[qlco],[[[1,1],[1,1],0]],no,no,['CHV','LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[373/4],0,0),ev(-861,'C0332126','NT','No treatment required for',[nt],[qlco],[[[2,2],[1,1],0]],yes,no,['CCS','MTH','NLMSubSyn','SNMI','SNOMEDCT_US'],[379/2],0,0)])]).
phrase('no HSM',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([hsm]),inputmatch(['HSM']),tag(noun),tokens([hsm])])],383/6,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1537594','HSM','LRRC4B gene',[hsm],[gngm],[[[1,1],[1,1],0]],yes,no,['HGNC','MTH'],[386/3],0,0)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],390/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(masses,[head([lexmatch([masses]),inputmatch([masses]),tag(noun),tokens([masses])])],393/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-966,[ev(-966,'C0577573','Mass','Mass of body region',[mass],[sosy],[[[1,1],[1,1],1]],yes,no,['MTH','SNOMEDCT_US','SNOMEDCT_VET'],[393/6],0,1)])]).
phrase('Musculoskeletal',[head([lexmatch([musculoskeletal]),inputmatch(['Musculoskeletal']),tag(adj),tokens([musculoskeletal])])],400/15,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0497254','MUSCULOSKELETAL','Musculoskeletal',[musculoskeletal],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','ICPC','LNC','MTH','NCI','NCI_NCI-GLOSS'],[400/15],0,0)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],415/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no erythema,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([erythema]),inputmatch([erythema]),tag(noun),tokens([erythema])]),punc([inputmatch([',']),tokens([])])],418/12,[]).
candidates(2,1,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0041834','ERYTHEMA','Erythema',[erythema],[sosy],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','DXP','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NCI-GLOSS','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET'],[421/8],0,1)])]).
phrase(swelling,[verb([lexmatch([swelling]),inputmatch([swelling]),tag(verb),tokens([swelling])])],431/8,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0013604','SWELLING','Edema',[swelling],[patf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','CST','HPO','ICD10CM','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHICD9','NCI','NCI_FDA','NCI_NCI-GLOSS','NCI_NICHD','NDFRT','NLMSubSyn','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET','UWDA'],[431/8],0,1)])]).
phrase(',',[punc([inputmatch([',']),tokens([])])],439/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],441/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('tenderness Ext',[mod([lexmatch([tenderness]),inputmatch([tenderness]),tag(noun),tokens([tenderness])]),head([lexmatch([ext]),inputmatch(['Ext']),tag(noun),tokens([ext])])],444/14,[]).
candidates(3,1,0,2,[]).
mappings([map(-694,[ev(-694,'C0234233','TENDERNESS (NOS)','Sore to touch',[tenderness],[sosy],[[[1,1],[1,1],0]],no,no,['CHV','CST','LNC','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[444/10],0,1)])]).
phrase(:,[punc([inputmatch([:]),tokens([])])],458/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('no CCE    ,',[det([lexmatch([no]),inputmatch([no]),tag(det),tokens([no])]),head([lexmatch([cce]),inputmatch(['CCE']),tag(noun),tokens([cce])]),punc([inputmatch([',']),tokens([])])],461/11,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Neuro',[head([lexmatch([neuro]),inputmatch(['Neuro']),tag(adj),tokens([neuro])])],474/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(:,[punc([inputmatch([:]),tokens([])])],479/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('grossly non-focal',[adv([lexmatch([grossly]),inputmatch([grossly]),tag(adv),tokens([grossly])]),head([lexmatch(['non-focal']),inputmatch([non,-,focal]),tag(adj),tokens([non,focal])])],482/17,[]).
candidates(4,2,0,2,[]).
mappings([map(-790,[ev(-827,'C1518422','Non','Negation',[non],[ftcn],[[[2,2],[1,1],0]],yes,no,['LNC','MTH','NCI'],[490/3],0,0),ev(-827,'C0205234','Focal','Focal',[focal],[spco],[[[3,3],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_NCI-GLOSS','SNMI','SNOMEDCT_US'],[494/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Health Maintenance Influenza Vaccine 11/29/2067  Cholesterol 12/16/2070 172  Mammogram 03/01/64 see report in Results  Pap Smear 12/16/2070 see report in Results  UA-Protein 03/12/2066 NEGATIVE  Colonoscopy 06/04/2071 see report in Results  Urine Culture 03/12/2066 see report in Results  Td Booster 12/16/2070  Triglycerides 12/16/2070 83  Cholesterol-LDL 12/16/2070 108  Hct (Hematocrit) 04/27/2072 40.7  Cholesterol-HDL 12/16/2070 47  Hgb (Hemoglobin) 04/27/2072 13.1  HbA1c 12/16/2070 6.50  Chlamydia 03/09/62 NEGATIVE.",0/523,[]).
phrase('Health Maintenance Influenza Vaccine 11/29/2067  Cholesterol 12/16/2070 172  Mammogram 03/01/64',[mod([lexmatch([health]),inputmatch(['Health']),tag(noun),tokens([health])]),mod([lexmatch([maintenance]),inputmatch(['Maintenance']),tag(noun),tokens([maintenance])]),mod([lexmatch(['influenza vaccine']),inputmatch(['Influenza','Vaccine']),tag(noun),tokens([influenza,vaccine])]),shapes([inputmatch(['11',/,'29']),features([fraction]),tokens(['11','29'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2067']),features([integer]),tokens(['2067'])]),mod([lexmatch([cholesterol]),inputmatch(['Cholesterol']),tag(noun),tokens([cholesterol])]),shapes([inputmatch(['12',/,'16']),features([fraction]),tokens(['12','16'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2070']),features([integer]),tokens(['2070'])]),shapes([inputmatch(['172']),features([integer]),tokens(['172'])]),mod([lexmatch([mammogram]),inputmatch(['Mammogram']),tag(noun),tokens([mammogram])]),shapes([inputmatch(['03',/,'01']),features([fraction]),tokens(['03','01'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['64']),features([integer]),tokens(['64'])])],0/95,[]).
candidates(21,7,0,14,[]).
mappings([map(-704,[ev(-793,'C0262500','HEALTH MAINTENANCE','Health maintenance',[health,maintenance],[hlca],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','COSTAR','MTH','NLMSubSyn'],[0/18],0,0),ev(-793,'C0021403','Influenza Vaccine','Influenza virus vaccine',[influenza,vaccine],[imft,phsu],[[[3,4],[1,2],0]],yes,no,['ATC','CHV','CSP','HL7V2.5','HL7V3.0','LCH','LCH_NW','LNC','MSH','MTH','NDFRT','NLMSubSyn','SNM','SNMI','SNOMEDCT_US','VANDF'],[19/17],0,0),ev(-813,'C3843712','11-12','11-12',['11','12'],[fndg],[[[5,5],[1,1],0],[[9,9],[2,2],0]],yes,no,['LNC'],[37/2,61/2],0,0),ev(-785,'C3843708','29+','29+',['29'],[fndg],[[[6,6],[1,1],0]],yes,no,['LNC'],[40/2],0,0),ev(-785,'C0008377','CHOLESTEROL','Cholesterol',[cholesterol],[bacs,orch],[[[8,8],[1,1],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHSPL','NCI','NCI_CRCH','NCI_DCP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[49/11],0,0),ev(-785,'C0024671','Mammogram','Mammography',[mammogram],[diap],[[[13,13],[1,1],0]],yes,no,['CCS','CHV','CSP','LNC','MEDLINEPLUS','MSH','MTH','MTHHH','NCI','NCI_CDISC','NCI_NCI-GLOSS','NLMSubSyn','PDQ','SNMI','SNOMEDCT_US'],[77/9],0,0)])]).
phrase(see,[verb([lexmatch([see]),inputmatch([see]),tag(verb),tokens([see])])],96/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[96/3],0,0)])]).
phrase('report in Results  Pap Smear 12/16/2070',[head([lexmatch([report]),inputmatch([report]),tag(noun),tokens([report])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([results]),inputmatch(['Results']),tag(noun),tokens([results])]),mod([lexmatch(['pap smear']),inputmatch(['Pap','Smear']),tag(noun),tokens([pap,smear])]),shapes([inputmatch(['12',/,'16']),features([fraction]),tokens(['12','16'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2070']),features([integer]),tokens(['2070'])])],100/39,[]).
candidates(16,0,0,16,[]).
mappings([map(-728,[ev(-744,'C0684224','Report','Report (document)',[report],[inpr],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[100/6],0,0),ev(-610,'C0555134','Pap smear result','Cervical smear result',[pap,smear,result],[lbtr],[[[4,5],[1,2],0],[[3,3],[3,3],1]],no,no,['NLMSubSyn','SNOMEDCT_US'],[110/7,119/9],0,0)])]).
phrase(see,[verb([lexmatch([see]),inputmatch([see]),tag(verb),tokens([see])])],140/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[140/3],0,0)])]).
phrase('report in Results  UA-Protein 03/12/2066 NEGATIVE  Colonoscopy 06/04/2071',[head([lexmatch([report]),inputmatch([report]),tag(noun),tokens([report])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([results]),inputmatch(['Results']),tag(noun),tokens([results])]),mod([lexmatch([ua]),inputmatch(['UA']),tag(noun),tokens([ua])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([protein]),inputmatch(['Protein']),tag(noun),tokens([protein])]),shapes([inputmatch(['03',/,'12']),features([fraction]),tokens(['03','12'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2066']),features([integer]),tokens(['2066'])]),mod([lexmatch([negative]),inputmatch(['NEGATIVE']),tag(adj),tokens([negative])]),mod([lexmatch([colonoscopy]),inputmatch(['Colonoscopy']),tag(noun),tokens([colonoscopy])]),shapes([inputmatch(['06',/,'04']),features([fraction]),tokens(['06','04'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2071']),features([integer]),tokens(['2071'])])],144/73,[]).
candidates(16,0,0,16,[]).
mappings([map(-617,[ev(-735,'C0684224','Report','Report (document)',[report],[inpr],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[144/6],0,0),ev(-535,'C1546471','Result','What subject filter - Result',[result],[idcn],[[[3,3],[1,1],1]],no,no,['HL7V2.5','MTH'],[154/7],0,0),ev(-569,'C0041580','UA','Ukraine',[ua],[geoa],[[[4,4],[1,1],0]],no,no,['AOD','CHV','CSP','LCH','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[163/2],0,0),ev(-569,'C0033684','PROTEIN','Proteins',[protein],[aapp,bacs],[[[5,5],[1,1],0]],no,no,['AOD','CHV','CSP','FMA','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_DCP','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','UWDA','VANDF'],[166/7],0,0),ev(-569,'C0205160','Negative','Negative',[negative],[qlco],[[[9,9],[1,1],0]],no,no,['CHV','HL7V3.0','LNC','MTH','SNMI','SNOMEDCT_US'],[185/8],0,0),ev(-569,'C0009378','Colonoscopy',colonoscopy,[colonoscopy],[diap],[[[10,10],[1,1],0]],no,no,['AOD','CHV','CSP','ICD9CM','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHMST','NCI','NCI_NCI-GLOSS','NLMSubSyn','PDQ','SNM','SNMI','SNOMEDCT_US'],[195/11],0,0)])]).
phrase(see,[verb([lexmatch([see]),inputmatch([see]),tag(verb),tokens([see])])],218/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[218/3],0,0)])]).
phrase('report in Results  Urine Culture 03/12/2066',[head([lexmatch([report]),inputmatch([report]),tag(noun),tokens([report])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([results]),inputmatch(['Results']),tag(noun),tokens([results])]),mod([lexmatch(['urine culture']),inputmatch(['Urine','Culture']),tag(noun),tokens([urine,culture])]),shapes([inputmatch(['03',/,'12']),features([fraction]),tokens(['03','12'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2066']),features([integer]),tokens(['2066'])])],222/43,[]).
candidates(16,2,0,14,[]).
mappings([map(-672,[ev(-744,'C0684224','Report','Report (document)',[report],[inpr],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[222/6],0,0),ev(-544,'C1546471','Result','What subject filter - Result',[result],[idcn],[[[3,3],[1,1],1]],no,no,['HL7V2.5','MTH'],[232/7],0,0),ev(-604,'C0430404','Urine culture','Urine for culture',[urine,culture],[lbpr],[[[4,5],[1,2],0]],no,no,['CHV','NLMSubSyn','SNOMEDCT_US'],[241/13],0,0)])]).
phrase(see,[verb([lexmatch([see]),inputmatch([see]),tag(verb),tokens([see])])],266/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[266/3],0,0)])]).
phrase(report,[head([lexmatch([report]),inputmatch([report]),tag(noun),tokens([report])])],270/6,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C0684224','Report','Report (document)',[report],[inpr],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[270/6],0,0)])]).
phrase('in Results  Td Booster 12/16/2070  Triglycerides 12/16/2070 83  Cholesterol-LDL 12/16/2070 108  Hct (Hematocrit',[prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([results]),inputmatch(['Results']),tag(noun),tokens([results])]),mod([lexmatch([td]),inputmatch(['Td']),tag(noun),tokens([td])]),mod([lexmatch([booster]),inputmatch(['Booster']),tag(noun),tokens([booster])]),shapes([inputmatch(['12',/,'16']),features([fraction]),tokens(['12','16'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2070']),features([integer]),tokens(['2070'])]),mod([lexmatch([triglycerides]),inputmatch(['Triglycerides']),tag(noun),tokens([triglycerides])]),shapes([inputmatch(['12',/,'16']),features([fraction]),tokens(['12','16'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2070']),features([integer]),tokens(['2070'])]),shapes([inputmatch(['83']),features([integer]),tokens(['83'])]),mod([lexmatch([cholesterol]),inputmatch(['Cholesterol']),tag(noun),tokens([cholesterol])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([ldl]),inputmatch(['LDL']),tag(noun),tokens([ldl])]),shapes([inputmatch(['12',/,'16']),features([fraction]),tokens(['12','16'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2070']),features([integer]),tokens(['2070'])]),shapes([inputmatch(['108']),features([integer]),tokens(['108'])]),mod([lexmatch([hct]),inputmatch(['Hct','(']),tag(noun),tokens([hct])]),head([lexmatch([hematocrit]),inputmatch(['Hematocrit']),tag(noun),tokens([hematocrit])])],277/111,[]).
candidates(16,0,0,16,[]).
mappings([map(-705,[ev(-583,'C1546471','Result','What subject filter - Result',[result],[idcn],[[[1,1],[1,1],1]],no,no,['HL7V2.5','MTH'],[280/7],0,0),ev(-617,'C0041061','TD','Trinidad and Tobago',[td],[geoa],[[[2,2],[1,1],0]],no,no,['AOD','CHV','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[289/2],0,0),ev(-617,'C1697762','Booster','Booster Immunization - ActSubstanceAdministrationCode',[booster],[topp],[[[3,3],[1,1],0]],no,no,['CHV','MTH','NCI','NCI_NCI-GLOSS'],[292/7],0,0),ev(-640,'C0450328','16/16','16/16',['16','16'],[qnco],[[[5,5],[1,1],0],[[9,9],[2,2],0]],no,no,['SNOMEDCT_US'],[303/2,329/2],0,0),ev(-617,'C0041004','TRIGLYCERIDES','Triglycerides',[triglycerides],[bacs,orch],[[[7,7],[1,1],0]],no,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_CRCH','NDFRT','SNM','SNMI','SNOMEDCT_US','VANDF'],[312/13],0,0),ev(-624,'C0023824','cholesterol ldl','LDL Cholesterol Lipoproteins',[cholesterol,ldl],[bacs,orch],[[[12,12],[1,1],0],[[13,13],[2,2],0]],no,no,['CHV','LNC','MSH','MTH','NDFRT','NLMSubSyn','SNMI','SNOMEDCT_US'],[341/15],0,0),ev(-790,'C0018935','Hct - Haematocrit','Hematocrit procedure',[hct,haematocrit],[lbpr],[[[18,18],[1,1],0],[[19,19],[2,2],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[373/3,378/10],0,0)]),map(-705,[ev(-583,'C1546471','Result','What subject filter - Result',[result],[idcn],[[[1,1],[1,1],1]],no,no,['HL7V2.5','MTH'],[280/7],0,0),ev(-617,'C0041061','TD','Trinidad and Tobago',[td],[geoa],[[[2,2],[1,1],0]],no,no,['AOD','CHV','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[289/2],0,0),ev(-617,'C1697762','Booster','Booster Immunization - ActSubstanceAdministrationCode',[booster],[topp],[[[3,3],[1,1],0]],no,no,['CHV','MTH','NCI','NCI_NCI-GLOSS'],[292/7],0,0),ev(-635,'C0065191','triglyceride ldl','low density lipoprotein triglyceride',[triglyceride,ldl],[aapp,bacs],[[[7,7],[1,1],1],[[13,13],[2,2],0]],no,no,['CHV','MSH','SNOMEDCT_US'],[312/13,353/3],0,0),ev(-617,'C0008377','CHOLESTEROL','Cholesterol',[cholesterol],[bacs,orch],[[[12,12],[1,1],0]],no,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','MTHSPL','NCI','NCI_CRCH','NCI_DCP','NCI_FDA','NCI_NCI-GLOSS','NDFRT','RXNORM','SNM','SNMI','SNOMEDCT_US','VANDF'],[341/11],0,0),ev(-790,'C0018935','Hct - Haematocrit','Hematocrit procedure',[hct,haematocrit],[lbpr],[[[18,18],[1,1],0],[[19,19],[2,2],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[373/3,378/10],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],388/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('04/27/2072 40.7  Cholesterol-HDL 12/16/2070 47  Hgb',[shapes([inputmatch(['04',/,'27']),features([fraction]),tokens(['04','27'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2072']),features([integer]),tokens(['2072'])]),shapes([inputmatch(['40','.','7']),features([real_number]),tokens(['40','7'])]),mod([lexmatch([cholesterol]),inputmatch(['Cholesterol']),tag(noun),tokens([cholesterol])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([hdl]),inputmatch(['HDL']),tag(noun),tokens([hdl])]),shapes([inputmatch(['12',/,'16']),features([fraction]),tokens(['12','16'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2070']),features([integer]),tokens(['2070'])]),shapes([inputmatch(['47']),features([integer]),tokens(['47'])]),head([lexmatch([hgb]),inputmatch(['Hgb']),tag(noun),tokens([hgb])])],390/51,[]).
candidates(9,0,0,9,[]).
mappings([map(-726,[ev(-621,'C3842587','40%','40%',['40'],[qnco],[[[4,4],[1,1],0]],no,no,['LNC'],[401/2],0,0),ev(-632,'C0023822','cholesterol hdl','High Density Lipoprotein Cholesterol',[cholesterol,hdl],[bacs,orch],[[[6,6],[1,1],0],[[7,7],[2,2],0]],no,no,['CHV','MSH','MTH','NDFRT','NLMSubSyn','SNMI','SNOMEDCT_US'],[407/15],0,0),ev(-787,'C0019029','HgB','Hemoglobin concentration result',[hgb],[lbtr],[[[12,12],[1,1],0]],yes,no,['CHV','MTH','NLMSubSyn'],[438/3],0,0)])]).
phrase('(Hemoglobin',[punc([inputmatch(['(']),tokens([])]),head([lexmatch([hemoglobin]),inputmatch(['Hemoglobin']),tag(noun),tokens([hemoglobin])])],442/11,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0019046','Haemoglobin','Hemoglobin',[haemoglobin],[aapp,bacs],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','FMA','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NCI-GLOSS','NDFRT','SNM','SNMI','SNOMEDCT_US','UWDA'],[443/10],0,0)])]).
phrase(')',[punc([inputmatch([')']),tokens([])])],453/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('04/27/2072 13.1  HbA1c 12/16/2070 6.50  Chlamydia 03/09/62 NEGATIVE.',[shapes([inputmatch(['04',/,'27']),features([fraction]),tokens(['04','27'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2072']),features([integer]),tokens(['2072'])]),shapes([inputmatch(['13','.','1']),features([real_number]),tokens(['13','1'])]),mod([lexmatch([hba1c]),inputmatch(['HbA1c']),tag(noun),tokens([hba1c])]),shapes([inputmatch(['12',/,'16']),features([fraction]),tokens(['12','16'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['2070']),features([integer]),tokens(['2070'])]),shapes([inputmatch(['6','.','50']),features([real_number]),tokens(['6','50'])]),mod([lexmatch([chlamydia]),inputmatch(['Chlamydia']),tag(noun),tokens([chlamydia])]),shapes([inputmatch(['03',/,'09']),features([fraction]),tokens(['03','09'])]),punc([inputmatch([/]),tokens([])]),shapes([inputmatch(['62']),features([integer]),tokens(['62'])]),head([lexmatch([negative]),inputmatch(['NEGATIVE']),tag(noun),tokens([negative])]),punc([inputmatch(['.']),tokens([])])],455/68,[]).
candidates(8,0,0,8,[]).
mappings([map(-673,[ev(-618,'C3843766','<50','<50',['50'],[fndg],[[[11,11],[1,1],0]],no,no,['LNC'],[491/2],0,0),ev(-618,'C0008148','CHLAMYDIA','Chlamydia',[chlamydia],[bact],[[[12,12],[1,1],0]],no,no,['AOD','CHV','COSTAR','CSP','LCH_NW','LNC','MSH','MTH','NCBI','NCI','NCI_CDISC','SNM','SNMI','SNOMEDCT_US'],[495/9],0,0),ev(-785,'C0205160','Negative','Negative',[negative],[qlco],[[[16,16],[1,1],0]],yes,no,['CHV','HL7V3.0','LNC','MTH','SNMI','SNOMEDCT_US'],[514/8],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([negation(nega,not,[250/3],['C3842296':'Else'],[282/4]),negation(nega,not,[472/3],['C0740209':'Counseling NOS'],[498/10]),negation(nega,not,[472/3],['C0543488':'Interested'],[476/10])]).
utterance('00000000.tx.1',"Assessment and Plan^I 1.  ",0/25,[]).
phrase('Assessment',[head([lexmatch([assessment]),inputmatch(['Assessment']),tag(noun),tokens([assessment])])],0/10,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1516048','Assessment','Assessed',[assessment],[acty],[[[1,1],[1,1],0]],yes,no,['MTH','NCI','NCI_NCI-GLOSS'],[0/10],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],11/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Plan\t 1.',[mod([lexmatch([plan]),inputmatch(['Plan']),tag(noun),tokens([plan])]),shapes([inputmatch(['1']),features([integer]),tokens(['1'])]),punc([inputmatch(['.']),tokens([])])],15/8,[]).
candidates(3,0,0,3,[]).
mappings([map(-861,[ev(-861,'C0599880','Plan','Treatment Plan',[plan],[inpr],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','LNC','MTH','NCI','NLMSubSyn'],[15/4],0,0)])]).
'EOU'.
utterance('00000000.tx.2',"Health Maintenance - Pap smear  -will do every two to 3 years. mammo -still very overdue - stressed needs to do this again and promises,  colonoscopy fine  2071. ",25/162,[]).
phrase('Health Maintenance - Pap smear  -',[mod([lexmatch([health]),inputmatch(['Health']),tag(noun),tokens([health])]),mod([lexmatch([maintenance]),inputmatch(['Maintenance']),tag(noun),tokens([maintenance])]),punc([inputmatch([-]),tokens([])]),head([lexmatch(['pap smear']),inputmatch(['Pap',smear]),tag(noun),tokens([pap,smear])]),punc([inputmatch([-]),tokens([])])],25/33,[]).
candidates(12,2,0,10,[]).
mappings([map(-888,[ev(-694,'C0262500','HEALTH MAINTENANCE','Health maintenance',[health,maintenance],[hlca],[[[1,1],[1,1],0],[[2,2],[2,2],0]],no,no,['CHV','COSTAR','MTH','NLMSubSyn'],[25/18],0,0),ev(-861,'C0079104','PAP Smear','Pap smear',[pap,smear],[diap],[[[3,4],[1,2],0]],yes,no,['AOD','CHV','CSP','LCH','LCH_NW','LNC','MEDLINEPLUS','MSH','MTH','NCI','NCI_NCI-GLOSS','NLMSubSyn','PDQ','SNOMEDCT_US'],[46/9],0,0)])]).
phrase(will,[modal([lexmatch([will]),inputmatch([will]),tag(modal),tokens([will])])],58/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(do,[aux([lexmatch([do]),inputmatch([do]),tag(aux),tokens([do])])],63/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('every two to 3 years. mammo -still very overdue - stressed needs to do',[det([lexmatch([every]),inputmatch([every]),tag(det),tokens([every])]),head([lexmatch([two]),inputmatch([two]),tag(noun),tokens([two])]),prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),mod([lexmatch([years]),inputmatch([years]),tag(noun),tokens([years])]),punc([inputmatch(['.']),tokens([])]),mod([inputmatch([mammo]),tag(noun),tokens([mammo])]),punc([inputmatch([-]),tokens([])]),adv([lexmatch([still]),inputmatch([still]),tag(adv),tokens([still])]),adv([lexmatch([very]),inputmatch([very]),tag(adv),tokens([very])]),mod([lexmatch([overdue]),inputmatch([overdue]),tag(adj),tokens([overdue])]),punc([inputmatch([-]),tokens([])]),mod([lexmatch([stressed]),inputmatch([stressed]),tag(adj),tokens([stressed])]),mod([lexmatch([needs]),inputmatch([needs]),tag(noun),tokens([needs])]),mod([lexmatch(['to do']),inputmatch([to,do]),tag(noun),tokens([to,do])])],66/70,[]).
candidates(12,1,0,11,[]).
mappings([map(-627,[ev(-565,'C0332181','Every year','Annual',[every,year],[tmco],[[[1,1],[1,1],0],[[5,5],[2,2],1]],no,no,['CHV','MTH','NCI','SNMI','SNOMEDCT_US'],[66/5,81/5],0,0),ev(-735,'C0205448','Two','Two',[two],[qnco],[[[2,2],[1,1],0]],yes,no,['LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[72/3],0,0),ev(-569,'C0442824','Very','Very',[very],[qlco],[[[8,8],[1,1],0]],no,no,['CHV','MTH','NCI','SNOMEDCT_US'],[101/4],0,0),ev(-569,'C0038435',stressed,'Stress',[stressed],[fndg],[[[10,10],[1,1],0]],no,no,['AOD','CHV','CSP','LNC','MEDLINEPLUS','MTH','NCI','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US'],[116/8],0,0),ev(-569,'C0027552','Needs','Needs',[needs],[qlco],[[[11,11],[1,1],0]],no,no,['CHV','MSH','MTH','NCI','SNOMEDCT_US'],[125/5],0,0)])]).
phrase('this again',[det([lexmatch([this]),inputmatch([this]),tag(det),tokens([this])]),adv([lexmatch([again]),inputmatch([again]),tag(adv),tokens([again])])],137/10,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],148/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('promises,',[head([lexmatch([promises]),inputmatch([promises]),tag(noun),tokens([promises])]),punc([inputmatch([',']),tokens([])])],152/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-966,[ev(-966,'C1555307',promise,promise,[promise],[idcn],[[[1,1],[1,1],1]],yes,no,['HL7V3.0'],[152/8],0,0)])]).
phrase('colonoscopy fine  2071.',[mod([lexmatch([colonoscopy]),inputmatch([colonoscopy]),tag(noun),tokens([colonoscopy])]),mod([lexmatch([fine]),inputmatch([fine]),tag(adj),tokens([fine])]),shapes([inputmatch(['2071']),features([integer]),tokens(['2071'])]),punc([inputmatch(['.']),tokens([])])],163/23,[]).
candidates(4,0,0,4,[]).
mappings([map(-790,[ev(-827,'C1548837','Colonoscopy','Consent Type - Colonoscopy',[colonoscopy],[hlca],[[[1,1],[1,1],0]],yes,no,['HL7V2.5','MTH'],[163/11],0,0),ev(-827,'C0687757',fine,'Legal fine',[fine],[rnlw],[[[2,2],[1,1],0]],yes,no,['AOD','CHV','MTH'],[175/4],0,0)])]).
'EOU'.
utterance('00000000.tx.3',"To increase exercise. ",187/22,[]).
phrase('To',[adv([lexmatch([to]),inputmatch(['To']),tag(adv),tokens([to])])],187/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1883351','To','To',[to],[qlco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[187/2],0,0)])]).
phrase(increase,[verb([lexmatch([increase]),inputmatch([increase]),tag(verb),tokens([increase])])],190/8,[]).
candidates(8,7,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0442805','Increase','Increase',[increase],[ftcn],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[190/8],0,0)])]).
phrase('exercise.',[head([lexmatch([exercise]),inputmatch([exercise]),tag(noun),tokens([exercise])]),punc([inputmatch(['.']),tokens([])])],199/9,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0015259','Exercise','Exercise',[exercise],[dora],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNMI','SNOMEDCT_US'],[199/8],0,0)])]).
'EOU'.
utterance('00000000.tx.4',"2. ",209/3,[]).
phrase('2.',[shapes([inputmatch(['2']),features([integer]),tokens(['2'])]),punc([inputmatch(['.']),tokens([])])],209/2,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C2981700','2+','2+ Score, WHO',['2'],[clas],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[209/1],0,0)])]).
'EOU'.
utterance('00000000.tx.5',"Menopause - calcium, consider BD when not overwhelmed with everything else 3. ",212/78,[]).
phrase('Menopause - calcium,',[mod([lexmatch([menopause]),inputmatch(['Menopause']),tag(noun),tokens([menopause])]),punc([inputmatch([-]),tokens([])]),head([lexmatch([calcium]),inputmatch([calcium]),tag(noun),tokens([calcium])]),punc([inputmatch([',']),tokens([])])],212/20,[]).
candidates(13,6,0,7,[]).
mappings([map(-888,[ev(-694,'C0567312','Menopause','Menopause present (finding)',[menopause],[fndg],[[[1,1],[1,1],0]],no,no,['MTH','SNOMEDCT_US'],[212/9],0,0),ev(-861,'C0006726','Calcium','Calcium, Dietary',[calcium],[inch],[[[2,2],[1,1],0]],yes,no,['CHV','CSP','MEDLINEPLUS','MSH','MTH','NCI','NCI_CRCH','NDFRT'],[224/7],0,0)])]).
phrase(consider,[verb([lexmatch([consider]),inputmatch([consider]),tag(verb),tokens([consider])])],233/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0750591',consider,consider,[consider],[idcn],[[[1,1],[1,1],0]],yes,no,['CHV'],[233/8],0,0)])]).
phrase('BD',[head([lexmatch([bd]),inputmatch(['BD']),tag(noun),tokens([bd])])],242/2,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0005126','BD','Bermuda',[bd],[geoa],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','LNC','MSH','MTH','NCI','NCI_CDISC','SNOMEDCT_US'],[242/2],0,0)])]).
phrase(when,[conj([lexmatch([when]),inputmatch([when]),tag(conj),tokens([when])])],245/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(not,[adv([lexmatch([not]),inputmatch([not]),tag(adv),tokens([not])])],250/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[250/3],0,0)])]).
phrase('overwhelmed with everything else 3.',[verb([lexmatch([overwhelmed]),inputmatch([overwhelmed]),tag(verb),tokens([overwhelmed])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),pron([lexmatch([everything]),inputmatch([everything]),tag(pron),tokens([everything])]),adv([lexmatch([else]),inputmatch([else]),tag(adv),tokens([else])]),shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),punc([inputmatch(['.']),tokens([])])],254/35,[]).
candidates(1,0,0,1,[]).
mappings([map(-760,[ev(-760,'C3842296','Else','Else',[else],[fndg],[[[4,4],[1,1],0]],yes,no,['LNC'],[282/4],0,1)])]).
'EOU'.
utterance('00000000.tx.6',"Sleep, stress - seems to be doing generally better now.  ",290/57,[]).
phrase('Sleep,',[head([lexmatch([sleep]),inputmatch(['Sleep']),tag(noun),tokens([sleep])]),punc([inputmatch([',']),tokens([])])],290/6,[]).
candidates(3,2,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0037313','Sleep','Sleep',[sleep],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_NICHD','SNM','SNMI','SNOMEDCT_US'],[290/5],0,0)])]).
phrase('stress -',[head([lexmatch([stress]),inputmatch([stress]),tag(noun),tokens([stress])]),punc([inputmatch([-]),tokens([])])],297/8,[]).
candidates(2,1,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0038435','Stress','Stress',[stress],[fndg],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','LNC','MEDLINEPLUS','MTH','NCI','NCI_NCI-GLOSS','SNM','SNMI','SNOMEDCT_US'],[297/6],0,0)])]).
phrase(seems,[verb([lexmatch([seems]),inputmatch([seems]),tag(verb),tokens([seems])])],306/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],312/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1883351','To','To',[to],[qlco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[312/2],0,0)])]).
phrase(be,[aux([lexmatch([be]),inputmatch([be]),tag(aux),tokens([be])])],315/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(doing,[aux([lexmatch([doing]),inputmatch([doing]),tag(aux),tokens([doing])])],318/5,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('generally better now.',[adv([lexmatch([generally]),inputmatch([generally]),tag(adv),tokens([generally])]),mod([lexmatch([better]),inputmatch([better]),tag(adj),tokens([better])]),adv([lexmatch([now]),inputmatch([now]),tag(adv),tokens([now])]),punc([inputmatch(['.']),tokens([])])],324/21,[]).
candidates(2,0,0,2,[]).
mappings([map(-790,[ev(-827,'C0332272','Better','Better',[better],[qlco],[[[2,2],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_FDA','SNMI','SNOMEDCT_US'],[334/6],0,0),ev(-827,'C1948052','Now','Now (temporal qualifier)',[now],[tmco],[[[3,3],[1,1],0]],yes,no,['MTH','NCI'],[341/3],0,0)])]).
'EOU'.
utterance('00000000.tx.7',"Discussed this for most of her 45 minute appointment.  ",347/55,[]).
phrase('Discussed',[verb([lexmatch([discussed]),inputmatch(['Discussed']),tag(verb),tokens([discussed])])],347/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-966,[ev(-966,'C2584313','Discuss','Discussion (communication)',[discuss],[socb],[[[1,1],[1,1],1]],yes,no,['ICF','ICF-CY','MTH','NCI'],[347/9],0,0)])]).
phrase('this for most of her 45 minute appointment.',[det([lexmatch([this]),inputmatch([this]),tag(det),tokens([this])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),adv([lexmatch([most]),inputmatch([most]),tag(adv),tokens([most])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),shapes([inputmatch(['45']),features([integer]),tokens(['45'])]),mod([lexmatch([minute]),inputmatch([minute]),tag(noun),tokens([minute])]),mod([lexmatch([appointment]),inputmatch([appointment]),tag(noun),tokens([appointment])]),punc([inputmatch(['.']),tokens([])])],357/43,[]).
candidates(7,0,0,7,[]).
mappings([map(-645,[ev(-744,'C1080058','This','This (eukaryote)',[this],[euka],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCBI'],[357/4],0,0),ev(-744,'C0702093','/minute','Per Minute',[minute],[tmco],[[[7,7],[1,1],0]],yes,no,['CHV','MTH','NCI','NCI_CDISC','NCI_UCUM','SNOMEDCT_US'],[381/6],0,0),ev(-744,'C0003629','Appointment','Appointments',[appointment],[idcn],[[[8,8],[1,1],0]],yes,no,['CHV','HL7V3.0','MSH','SNOMEDCT_US'],[388/11],0,0)])]).
'EOU'.
utterance('00000000.tx.8',"Starting to get out now and socialize.  ",402/40,[]).
phrase('Starting',[verb([lexmatch([starting]),inputmatch(['Starting']),tag(verb),tokens([starting])])],402/8,[]).
candidates(1,0,0,1,[]).
mappings([map(-966,[ev(-966,'C0439659','Start','Beginning',[start],[tmco],[[[1,1],[1,1],1]],yes,no,['CHV','LCH','LNC','MTH','NCI','SNOMEDCT_US'],[402/8],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],411/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1883351','To','To',[to],[qlco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[411/2],0,0)])]).
phrase(get,[verb([lexmatch([get]),inputmatch([get]),tag(verb),tokens([get])])],414/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('out now',[adv([lexmatch([out]),inputmatch([out]),tag(adv),tokens([out])]),adv([lexmatch([now]),inputmatch([now]),tag(adv),tokens([now])])],418/7,[]).
candidates(3,0,0,3,[]).
mappings([map(-888,[ev(-861,'C0439787','Out','Out (direction)',[out],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','SNOMEDCT_US'],[418/3],0,0),ev(-861,'C1948052','Now','Now (temporal qualifier)',[now],[tmco],[[[2,2],[1,1],0]],yes,no,['MTH','NCI'],[422/3],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],426/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('socialize.',[verb([lexmatch([socialize]),inputmatch([socialize]),tag(verb),tokens([socialize])]),punc([inputmatch(['.']),tokens([])])],430/10,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C2371613','Socialize','Socializing',[socialize],[socb],[[[1,1],[1,1],0]],yes,no,['ICF','ICF-CY','NCI'],[430/9],0,0)])]).
'EOU'.
utterance('00000000.tx.9',"To work quite regularly now.  ",442/30,[]).
phrase('To',[adv([lexmatch([to]),inputmatch(['To']),tag(adv),tokens([to])])],442/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1883351','To','To',[to],[qlco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[442/2],0,0)])]).
phrase(work,[verb([lexmatch([work]),inputmatch([work]),tag(verb),tokens([work])])],445/4,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0043227','Work','Work',[work],[ocac],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[445/4],0,0)])]).
phrase('quite regularly now.',[adv([lexmatch([quite]),inputmatch([quite]),tag(adv),tokens([quite])]),adv([lexmatch([regularly]),inputmatch([regularly]),tag(adv),tokens([regularly])]),adv([lexmatch([now]),inputmatch([now]),tag(adv),tokens([now])]),punc([inputmatch(['.']),tokens([])])],450/20,[]).
candidates(1,0,0,1,[]).
mappings([map(-827,[ev(-827,'C1948052','Now','Now (temporal qualifier)',[now],[tmco],[[[3,3],[1,1],0]],yes,no,['MTH','NCI'],[466/3],0,0)])]).
'EOU'.
utterance('00000000.tx.10',"Not interested in further counseling or medications. ",472/53,[]).
phrase('Not',[adv([lexmatch([not]),inputmatch(['Not']),tag(adv),tokens([not])])],472/3,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1518422','Not','Negation',[not],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[472/3],0,0)])]).
phrase('interested in further counseling',[verb([lexmatch([interested]),inputmatch([interested]),tag(verb),tokens([interested])]),prep([lexmatch([in]),inputmatch([in]),tag(prep),tokens([in])]),mod([lexmatch([further]),inputmatch([further]),tag(adj),tokens([further])]),mod([lexmatch([counseling]),inputmatch([counseling]),tag(noun),tokens([counseling])])],476/32,[]).
candidates(6,1,0,5,[]).
mappings([map(-733,[ev(-770,'C0543488','Interested','Interested',[interested],[menp],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','LNC','NCI','SNOMEDCT_US'],[476/10],0,1),ev(-770,'C1517331','Further','Further',[further],[spco],[[[3,3],[1,1],0]],yes,no,['NCI'],[490/7],0,0),ev(-770,'C0740209','Counseling NOS','Encounter due to counseling',[counseling],[fndg],[[[4,4],[1,1],0]],yes,no,['ICD9CM','MTH'],[498/10],0,1)])]).
phrase(or,[conj([lexmatch([or]),inputmatch([or]),tag(conj),tokens([or])])],509/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('medications.',[head([lexmatch([medications]),inputmatch([medications]),tag(noun),tokens([medications])]),punc([inputmatch(['.']),tokens([])])],512/12,[]).
candidates(4,1,0,3,[]).
mappings([map(-1000,[ev(-1000,'C2598133','Medications','Medications:-:Point in time:^Patient:-',[medications],[clna],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[512/11],0,0)])]).
'EOU'.
utterance('00000000.tx.11',"4. ",525/3,[]).
phrase('4.',[shapes([inputmatch(['4']),features([integer]),tokens(['4'])]),punc([inputmatch(['.']),tokens([])])],525/2,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C3838679','4+','4+ Answer to question',['4'],[fndg],[[[1,1],[1,1],0]],yes,no,['LNC','MTH'],[525/1],0,0)])]).
'EOU'.
utterance('00000000.tx.12',"sinus congestion states she wakes up and feels her sinuses are clogged her eyes are puffy and sneezing.  ",528/105,[]).
phrase('sinus congestion',[mod([lexmatch([sinus]),inputmatch([sinus]),tag(noun),tokens([sinus])]),head([lexmatch([congestion]),inputmatch([congestion]),tag(noun),tokens([congestion])])],528/16,[]).
candidates(5,0,0,5,[]).
mappings([map(-1000,[ev(-1000,'C0152029','SINUS CONGESTION','Congestion of nasal sinus',[sinus,congestion],[sosy],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV','COSTAR','CST','DXP','SNMI','SNOMEDCT_US'],[528/16],0,0)])]).
phrase(states,[verb([lexmatch([states]),inputmatch([states]),tag(verb),tokens([states])])],545/6,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1442792','State','State',[state],[ftcn],[[[1,1],[1,1],0]],yes,no,['LNC','MTH','NCI'],[545/6],0,0)])]).
phrase(she,[pron([lexmatch([she]),inputmatch([she]),tag(pron),tokens([she])])],552/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('wakes up',[verb([lexmatch([wakes]),inputmatch([wakes]),tag(verb),tokens([wakes])]),prep([lexmatch([up]),inputmatch([up]),tag(prep),tokens([up])])],556/8,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1170730','wake up','wake ups',[wake,up],[orch,phsu],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['CHV'],[556/8],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],565/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(feels,[verb([lexmatch([feels]),inputmatch([feels]),tag(verb),tokens([feels])])],569/5,[]).
candidates(2,1,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0013987',feel,'Emotions',[feel],[menp],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','ICF','ICF-CY','LCH','LCH_NW','MSH','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[569/5],0,0)])]).
phrase('her sinuses',[pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),head([lexmatch([sinuses]),inputmatch([sinuses]),tag(noun),tokens([sinuses])])],575/11,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1305231','SINUS','Sinus - general anatomical term',[sinus],[bsoj],[[[1,1],[1,1],0]],yes,no,['FMA','MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS','UWDA'],[579/7],0,0)])]).
phrase(are,[aux([lexmatch([are]),inputmatch([are]),tag(aux),tokens([are])])],587/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(clogged,[verb([lexmatch([clogged]),inputmatch([clogged]),tag(verb),tokens([clogged])])],591/7,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1881653','Clogged','Medical Device Clogged',[clogged],[phpr],[[[1,1],[1,1],0]],yes,no,['NCI','NCI_FDA'],[591/7],0,0)])]).
phrase('her eyes',[pron([lexmatch([her]),inputmatch([her]),tag(pron),tokens([her])]),head([lexmatch([eyes]),inputmatch([eyes]),tag(noun),tokens([eyes])])],599/8,[]).
candidates(7,6,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0015392','Eyes','Eye',[eyes],[bpoc],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','COSTAR','CSP','FMA','HL7V2.5','ICF','ICF-CY','ICPC','LCH','LCH_NW','LNC','MSH','MTH','NCI','NCI_CDISC','NCI_NICHD','OMIM','SNM','SNMI','SNOMEDCT_US','SNOMEDCT_VET','UWDA'],[603/4],0,0)])]).
phrase(are,[aux([lexmatch([are]),inputmatch([are]),tag(aux),tokens([are])])],608/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(puffy,[head([lexmatch([puffy]),inputmatch([puffy]),tag(adj),tokens([puffy])])],612/5,[]).
candidates(2,0,0,2,[]).
mappings([map(-928,[ev(-928,'C1533107','PUFF','Puff unit dose',[puff],[qnco],[[[1,1],[1,1],3]],yes,no,['HL7V3.0','MTH','NCI','NCI_CDISC','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[612/5],0,0)])]).
phrase(and,[conj([lexmatch([and]),inputmatch([and]),tag(conj),tokens([and])])],618/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('sneezing.',[head([lexmatch([sneezing]),inputmatch([sneezing]),tag(noun),tokens([sneezing])]),punc([inputmatch(['.']),tokens([])])],622/9,[]).
candidates(1,0,0,1,[]).
mappings([map(-1000,[ev(-1000,'C0037383','SNEEZING','Sneezing',[sneezing],[fndg],[[[1,1],[1,1],0]],yes,no,['CHV','COSTAR','CSP','CST','DXP','ICD10CM','LCH_NW','MSH','MTHICD9','NCI','NCI_CTCAE','NCI_FDA','NCI_NICHD','NDFRT','SNM','SNMI','SNOMEDCT_US'],[622/8],0,0)])]).
'EOU'.
utterance('00000000.tx.13',"No help with Claritin.  ",633/24,[]).
phrase('No',[det([lexmatch([no]),inputmatch(['No']),tag(det),tokens([no])])],633/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('help with Claritin.',[verb([lexmatch([help]),inputmatch([help]),tag(verb),tokens([help])]),prep([lexmatch([with]),inputmatch([with]),tag(prep),tokens([with])]),mod([lexmatch([claritin]),inputmatch(['Claritin']),tag(noun),tokens([claritin])]),punc([inputmatch(['.']),tokens([])])],636/19,[]).
candidates(3,0,0,3,[]).
mappings([map(-746,[ev(-790,'C1269765','Help','Assisted (qualifier value)',[help],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[636/4],0,0),ev(-790,'C0701055','Claritin','Claritin',[claritin],[orch,phsu],[[[3,3],[1,1],0]],yes,no,['CHV','MSH','NCI','RXNORM'],[646/8],0,0)])]).
'EOU'.
utterance('00000000.tx.14',"Will try Flonase for two to 3 weeks to see if it helps.",657/55,[]).
phrase('Will',[modal([lexmatch([will]),inputmatch(['Will']),tag(modal),tokens([will])])],657/4,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(try,[verb([lexmatch([try]),inputmatch([try]),tag(verb),tokens([try])])],662/3,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('Flonase for two',[head([lexmatch([flonase]),inputmatch(['Flonase']),tag(noun),tokens([flonase])]),prep([lexmatch([for]),inputmatch([for]),tag(prep),tokens([for])]),mod([lexmatch([two]),inputmatch([two]),tag(noun),tokens([two])])],666/15,[]).
candidates(2,0,0,2,[]).
mappings([map(-746,[ev(-790,'C0286677','Flonase','Flonase',[flonase],[orch,phsu],[[[1,1],[1,1],0]],yes,no,['CHV','MSH','NCI','RXNORM'],[666/7],0,0),ev(-623,'C0205448','Two','Two',[two],[qnco],[[[3,3],[1,1],0]],no,no,['LNC','MTH','NCI','SNMI','SNOMEDCT_US'],[678/3],0,0)])]).
phrase('to 3 weeks',[prep([lexmatch([to]),inputmatch([to]),tag(prep),tokens([to])]),shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),head([lexmatch([weeks]),inputmatch([weeks]),tag(noun),tokens([weeks])])],682/10,[]).
candidates(7,1,0,6,[]).
mappings([map(-1000,[ev(-1000,'C1442462','3 Weeks','3 Weeks',['3',weeks],[tmco],[[[1,1],[1,1],0],[[2,2],[2,2],0]],yes,no,['HL7V2.5','MTH'],[685/7],0,0)])]).
phrase(to,[adv([lexmatch([to]),inputmatch([to]),tag(adv),tokens([to])])],693/2,[]).
candidates(3,0,0,3,[]).
mappings([map(-1000,[ev(-1000,'C1883351','To','To',[to],[qlco],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[693/2],0,0)])]).
phrase(see,[verb([lexmatch([see]),inputmatch([see]),tag(verb),tokens([see])])],696/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[696/3],0,0)])]).
phrase(if,[conj([lexmatch([if]),inputmatch([if]),tag(conj),tokens([if])])],700/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(it,[pron([lexmatch([it]),inputmatch([it]),tag(pron),tokens([it])])],703/2,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('helps.',[verb([lexmatch([helps]),inputmatch([helps]),tag(verb),tokens([helps])]),punc([inputmatch(['.']),tokens([])])],706/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1269765','Help','Assisted (qualifier value)',[help],[qlco],[[[1,1],[1,1],0]],yes,no,['CHV','MTH','NCI','SNOMEDCT_US'],[706/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Rest of issues - see above.",0/27,[]).
phrase('Rest of issues -',[head([lexmatch([rest]),inputmatch(['Rest']),tag(noun),tokens([rest])]),prep([lexmatch([of]),inputmatch([of]),tag(prep),tokens([of])]),mod([lexmatch([issues]),inputmatch([issues]),tag(noun),tokens([issues])]),punc([inputmatch([-]),tokens([])])],0/16,[]).
candidates(4,0,0,4,[]).
mappings([map(-730,[ev(-790,'C0035253','Rest','Rest',[rest],[dora],[[[1,1],[1,1],0]],yes,no,['CHV','CSP','LCH','LCH_NW','LNC','MSH','MTH','NCI','SNOMEDCT_US'],[0/4],0,0),ev(-590,'C0033213','Issue','Problem',[issue],[fndg],[[[3,3],[1,1],1]],no,no,['CHV','LNC','MTH','NCI','SNM','SNMI','SNOMEDCT_US'],[8/6],0,0)])]).
phrase(see,[verb([lexmatch([see]),inputmatch([see]),tag(verb),tokens([see])])],17/3,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C0042789',see,'Vision',[see],[orgf],[[[1,1],[1,1],0]],yes,no,['AOD','CHV','CSP','GO','ICF','ICF-CY','LCH','LCH_NW','LNC','MSH','MTH','NCI','NLMSubSyn','SNM','SNMI','SNOMEDCT_US'],[17/3],0,0)])]).
phrase('above.',[head([lexmatch([above]),inputmatch([above]),tag(adj),tokens([above])]),punc([inputmatch(['.']),tokens([])])],21/6,[]).
candidates(2,0,0,2,[]).
mappings([map(-1000,[ev(-1000,'C1282910','Above','Upper',[above],[spco],[[[1,1],[1,1],0]],yes,no,['CHV','FMA','HL7V2.5','LNC','MTH','NCI','NCI_CDISC','SNMI','SNOMEDCT_US','UWDA'],[21/5],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"follow-up 3 months",0/18,[]).
phrase('follow-up 3 months',[mod([lexmatch(['follow-up']),inputmatch([follow,-,up]),tag(adj),tokens([follow,up])]),shapes([inputmatch(['3']),features([integer]),tokens(['3'])]),head([lexmatch([months]),inputmatch([months]),tag(noun),tokens([months])])],0/18,[]).
candidates(9,2,0,7,[]).
mappings([map(-824,[ev(-694,'C1522577','Follow Up','follow-up',[follow,up],[hlca],[[[1,1],[1,1],0],[[2,2],[2,2],0]],no,no,['MTH','NCI','NCI_CDISC','NCI_NCI-GLOSS'],[0/9],0,0),ev(-812,'C0439231','MONTHS',month,[months],[tmco],[[[4,4],[1,1],0]],yes,no,['CHV','HL7V3.0','MTH','NCI','NCI_CDISC','NCI_FDA','NCI_NCPDP','NCI_UCUM','SNOMEDCT_US'],[12/6],0,0)])]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"Beverly Thiel",0/13,[]).
phrase('Beverly Thiel',[mod([lexmatch([beverly]),inputmatch(['Beverly']),tag(noun),tokens([beverly])]),head([inputmatch(['Thiel']),tag(noun),tokens([thiel])])],0/13,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
args('metamap16.BINARY.Linux --lexicon db -Z 2015AB -q -y 220-04.xml outputs/220-04-output.xml',[lexicon-db,mm_data_year-'2015AB',machine_output-[],word_sense_disambiguation-[],infile-'220-04.xml',outfile-'outputs/220-04-output.xml']).
aas([]).
neg_list([]).
utterance('00000000.tx.1',"]]></TEXT>   <TAGS></TAGS> </root>",0/34,[]).
phrase(']',[punc([inputmatch([']']),tokens([])])],0/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(']',[punc([inputmatch([']']),tokens([])])],1/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase(>,[punc([inputmatch([>]),tokens([])])],2/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</TEXT',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([text]),inputmatch(['TEXT']),tag(noun),tokens([text])])],3/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1705606','Text','Text Line',[text],[inpr],[[[1,1],[1,1],0]],yes,no,['MTH','NCI'],[5/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],9/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('<TAGS',[punc([inputmatch([<]),tokens([])]),head([lexmatch([tags]),inputmatch(['TAGS']),tag(noun),tokens([tags])])],13/5,[]).
candidates(4,3,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1139855',tags,'Tags (device)',[tags],[medd],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[14/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],18/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</TAGS',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([tags]),inputmatch(['TAGS']),tag(noun),tokens([tags])])],19/6,[]).
candidates(4,3,0,1,[]).
mappings([map(-1000,[ev(-1000,'C1139855',tags,'Tags (device)',[tags],[medd],[[[1,1],[1,1],0]],yes,no,['CHV','MTH'],[21/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],25/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
phrase('</root',[punc([inputmatch([<]),tokens([])]),punc([inputmatch([/]),tokens([])]),head([lexmatch([root]),inputmatch([root]),tag(noun),tokens([root])])],27/6,[]).
candidates(4,0,0,4,[]).
mappings([map(-1000,[ev(-1000,'C1318154','Root','Root body part',[root],[bpoc],[[[1,1],[1,1],0]],yes,no,['CHV','LNC','MTH'],[29/4],0,0)])]).
phrase(>,[punc([inputmatch([>]),tokens([])])],33/1,[]).
candidates(0,0,0,0,[]).
mappings([]).
'EOU'.
